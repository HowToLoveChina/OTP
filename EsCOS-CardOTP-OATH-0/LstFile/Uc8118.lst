C51 COMPILER V9.01   UC8118                                                                11/23/2016 11:58:15 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE UC8118
OBJECT MODULE PLACED IN .\ObjFile\Uc8118.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE SrcFile\Func\Uc8118.c LARGE BROWSE INCDIR(.\SrcFile\StartUp\CPU;.\SrcFile\F
                    -rame\Inc;.\SrcFile\Func\Inc;.\SrcFile\Lib;.\SrcFile\App\Inc) DEFINE(_DEV_BOARD_,_FPGA_DEMO_EN_) DEBUG OBJECTEXTEND PRINT
                    -(.\LstFile\Uc8118.lst) OBJECT(.\ObjFile\Uc8118.obj)

line level    source

   1           /********************************************************************
   2          File: Uc8118.c
   3          History:
   4          Version                      Author                     Date
   5          V0.1                         Colin                            2016-11-11
   6          
   7          Description:
   8               Uc8118 Drive Source Code File;
   9          
  10           *******************************************************************/
  11          #include "Uc8118.h"
  12          #include "REG_Z8D16R_2.h"
  13          #include "string.H"
  14          #include <intrins.h>
  15          
  16          
  17          /***********************************************************
  18          *********************°×µ×ºÚ×Övcom-waveform******************
  19          ***********************************************************/
  20          code unsigned int LUT_T1_VCOM[]= {0x48,0x8D,0x01,0x8D,0x90,0x01,0x48,0x90,0x01,0x46,0x46,0x01,0x4A,0x54,0x
             -01};
  21          code unsigned int LUT_T1_BLACK[]={0x88,0x8D,0x01,0x8D,0x90,0x01,0x88,0x50,0x01,0x46,0x46,0x01,0x4A,0x54,0x
             -01};
  22          code unsigned int LUT_T1_WHITE[]={0x48,0x4D,0x01,0x4D,0x50,0x01,0x48,0x90,0x01,0x86,0x86,0x01,0x8A,0x94,0x
             -01};
  23          /***********************************************************
  24          *********************ºÚµ×°××Övcom-waveform******************
  25          ***********************************************************/
  26          code unsigned int LUT_T1_V[]={  0x50, 0x90, 0x01, 0x50, 0x90, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x
             -00, 0x00, 0x00};
  27          code unsigned int LUT_T1_K[]={  0x90, 0x50, 0x01, 0x50, 0x50, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x
             -00, 0x00, 0x00};
  28          code unsigned int LUT_T1_W[]={  0x90, 0x50, 0x01, 0x90, 0x90, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x
             -00, 0x00, 0x00};
  29          
  30          code UINT8 Paper_Num_Assic[10] = {'0','1','2','3','4','5','6','7','8','9'};
  31          
  32          UINT8 Pixel_Set[96];
  33          UINT8 Send_Num[12];
  34          code UINT8 Pixel_Addr[9][7] =                           // SEG address
  35          {
  36                  {82},                                           //DOT
  37                  {27,26,65,64,63,29,28},         // P1
  38                  {23,22,68,67,66,25,24},         // P2
  39                  {19,18,71,70,69,21,20},         // p3
  40                  {15,14,74,73,72,17,16},         // p4
  41                  {11,10,77,76,75,13,12},         // p5
  42                  {8,7,81,80,79,78,9},            // p6
  43                  {5,4,86,85,84,83,6},            // p7
  44                  {2,1,90,89,88,87,3}                     // p8
  45          };
  46          
  47          code UINT8 Num_Seg_Set[10][7] =         // Number of seg set
C51 COMPILER V9.01   UC8118                                                                11/23/2016 11:58:15 PAGE 2   

  48          {
  49                  {1,1,1,1,1,0,1},                // 0
  50                  {0,1,1,0,0,0,0},                // 1
  51                  {1,1,0,1,1,1,0},                // 2
  52                  {1,1,1,1,0,1,0},                // 3
  53                  {0,1,1,0,0,1,1},                // 4
  54                  {1,0,1,1,0,1,1},                // 5
  55                  {1,0,1,1,1,1,1},                // 6
  56                  {1,1,1,0,0,0,0},                // 7
  57                  {1,1,1,1,1,1,1},                // 8
  58                  {1,1,1,1,0,1,1},                // 9
  59          };
  60          
  61          
  62          void driver_delay_xms(UINT8 xms)
  63          {
  64   1              UINT16 i ;
  65   1              
  66   1              for(; xms>0; xms--)
  67   1              {
  68   2                      for(i=0; i<78; i++);
  69   2              }
  70   1      }
  71          /***********************************************************
  72          *************************IC²ÎÊýÉè¶¨*************************
  73          ***********************************************************/
  74          void ElcPaper_Init(void)
  75          {
  76   1              SPI_Init();
  77   1              EPD_W21_Init();
  78   1              UC8118_SETTING();
  79   1      }
  80          void SPI_Init(void)
  81          {
  82   1              vScu_SetSysClkOsc2M();
  83   1                      
  84   1              vScu_IomClkEn();
  85   1      
  86   1              
  87   1              EPD_SPI_SHD_N_OUT_EN();
  88   1              EPD_SPI_RST_N_OUT_EN();
  89   1              EPD_SPI_SDA_OUT_EN();
  90   1              EPD_SPI_CSB_OUT_EN();
  91   1              EPD_SPI_SCL_OUT_EN();
  92   1      
  93   1              EPD_SPI_BUSY_IN_EN();
  94   1              //EPD_SPI_SCL_IN_EN();
  95   1      
  96   1              EPD_SPI_SHD_N_PU_EN();
  97   1              EPD_SPI_RST_N_PU_EN();
  98   1              EPD_SPI_SDA_PU_EN();
  99   1              EPD_SPI_SCL_PU_EN();
 100   1              EPD_SPI_CSB_PU_EN();
 101   1              
 102   1              
 103   1      }
 104          
 105          void UC8118_SETTING(void)
 106          {
 107   1              EPD_W21_Write_CMD_DATA(0,0x04);  //c
 108   1              driver_delay_xms(50);           
 109   1              EPD_W21_Write_CMD_DATA(0,0x00);  //c
C51 COMPILER V9.01   UC8118                                                                11/23/2016 11:58:15 PAGE 3   

 110   1              driver_delay_xms(10);           
 111   1              EPD_W21_Write_CMD_DATA(1,0x8F);  //d
 112   1              driver_delay_xms(10);                                   
 113   1              EPD_W21_Write_CMD_DATA(0,0x30); //c  PLL Control 
 114   1              driver_delay_xms(10);
 115   1              EPD_W21_Write_CMD_DATA(1,0x03); //d frame rate =50
 116   1              driver_delay_xms(10);
 117   1              LUT_spi_write(0);
 118   1      }
 119          
 120          void SPI_Delay(unsigned long xrate)
 121          {
 122   1          int i,j;
 123   1          for(i=0;i<=xrate;i++)
 124   1            for(j=0;j<=1;j++);
 125   1      }
 126          
 127          void EPD_W21_Init(void)
 128          {
 129   1              EPD_SPI_SHD_N_HIGH();
 130   1              EPD_SPI_CSB_HIGH();
 131   1              SPI_Delay(10);
 132   1              EPD_SPI_RST_N_LOW();
 133   1              SPI_Delay(100);
 134   1              EPD_SPI_RST_N_HIGH();
 135   1              SPI_Delay(10);
 136   1      }
 137          
 138          void SPI_Write(unsigned char value)                                    
 139          {                                                           
 140   1          unsigned char i;
 141   1      
 142   1              EPD_SPI_SCL_HIGH();
 143   1      //      SPI_Delay(2);   
 144   1              EPD_SPI_SCL_LOW();
 145   1      //      SPI_Delay(2);
 146   1      
 147   1          for(i=0; i<8; i++)   
 148   1          {
 149   2              if(value & 0x80)
 150   2              {
 151   3                              EPD_SPI_SDA_HIGH();
 152   3              }
 153   2                      else
 154   2                      {
 155   3                      EPD_SPI_SDA_LOW();
 156   3                      }
 157   2      //              SPI_Delay(2);
 158   2      //              EPD_SPI_SCL_OUT_EN();
 159   2              EPD_SPI_SCL_HIGH();             
 160   2              value <<= 1;             
 161   2      //        SPI_Delay(2);
 162   2                      EPD_SPI_SCL_LOW();
 163   2      //              SPI_Delay(2);
 164   2          }
 165   1      }
 166          
 167          void EPD_W21_Write_CMD_DATA(int dc,unsigned char command)
 168          {
 169   1          EPD_SPI_CSB_HIGH();
 170   1      //      SPI_Delay(2);
 171   1              EPD_SPI_CSB_LOW();
C51 COMPILER V9.01   UC8118                                                                11/23/2016 11:58:15 PAGE 4   

 172   1      //      SPI_Delay(2);
 173   1              if(dc) 
 174   1              {
 175   2              EPD_SPI_SDA_HIGH();
 176   2              }
 177   1              else 
 178   1              {
 179   2                      EPD_SPI_SDA_LOW();
 180   2              }                         
 181   1              SPI_Write(command);
 182   1      //      SPI_Delay(2);
 183   1              EPD_SPI_CSB_HIGH();
 184   1      }
 185          
 186          /***********************************************************
 187          ****************IC poweroff and go to sleep*****************
 188          ***********************************************************/
 189          void poweroff_sleep(void)
 190          {
 191   1      EPD_W21_Write_CMD_DATA(0,0x02);
 192   1      EPD_W21_Write_CMD_DATA(1,0x03);
 193   1      }
 194          
 195          /***********************************************************
 196          *************************updata*****************************
 197          ***********************************************************/
 198          void display(void)
 199          {
 200   1      EPD_W21_Write_CMD_DATA(0,0x11);
 201   1      EPD_W21_Write_CMD_DATA(0,0x12);
 202   1      
 203   1      }
 204          
 205          /***********************************************************
 206          ***************************´«Êäwaveform*********************
 207          ***********************************************************/
 208          void LUT_spi_write(unsigned char k)
 209          {
 210   1              if(k==0)
 211   1              {
 212   2              LUT_spi_write_wb_bw();
 213   2              }
 214   1              else
 215   1              {LUT_spi_write_bb_ww();}
 216   1      }
 217          
 218          /***********************************************************
 219          *******************´«ÊäºÚµ×°××Öwaveform*********************
 220          ***********************************************************/
 221          void LUT_spi_write_bb_ww(void)
 222          {
 223   1              LUT_spi_write_bb_ww_vcom();
 224   1              driver_delay_xms(2);
 225   1              LUT_spi_write_bb_ww_b();
 226   1              driver_delay_xms(2);
 227   1              LUT_spi_write_bb_ww_w();
 228   1              driver_delay_xms(2);
 229   1      }
 230          /***********************************************************
 231          *******************´«ÊäºÚµ×°××Övcom_waveform****************
 232          ***********************************************************/
 233          void LUT_spi_write_bb_ww_vcom(void)
C51 COMPILER V9.01   UC8118                                                                11/23/2016 11:58:15 PAGE 5   

 234          {
 235   1              unsigned long i;
 236   1              EPD_W21_Write_CMD_DATA(0,0x20);
 237   1              for(i=0;i<15;i++)
 238   1              {
 239   2              EPD_W21_Write_CMD_DATA(1,LUT_T1_V[i]);
 240   2              }
 241   1              driver_delay_xms(10);
 242   1      }
 243          /***********************************************************
 244          ******************´«ÊäºÚµ×°××Öb-waveformwaveform************
 245          ***********************************************************/
 246          void LUT_spi_write_bb_ww_b(void)
 247          {
 248   1      
 249   1              unsigned long i;
 250   1              EPD_W21_Write_CMD_DATA(0,0x21);
 251   1              for(i=0;i<15;i++)
 252   1              {
 253   2              EPD_W21_Write_CMD_DATA(1,LUT_T1_K[i]);
 254   2              }
 255   1              driver_delay_xms(10);
 256   1      }
 257          /***********************************************************
 258          *******************´«ÊäºÚµ×°××Öw-waveform*******************
 259          ***********************************************************/
 260          void LUT_spi_write_bb_ww_w(void)
 261          {
 262   1              unsigned long i;
 263   1              EPD_W21_Write_CMD_DATA(0,0x22);
 264   1              for(i=0;i<15;i++)
 265   1              {
 266   2              EPD_W21_Write_CMD_DATA(1,LUT_T1_W[i]);
 267   2              }
 268   1              driver_delay_xms(10);
 269   1      }
 270          
 271          /***********************************************************
 272          *******************´«Êä°×µ×ºÚ×Öwaveform*********************
 273          ***********************************************************/
 274          void LUT_spi_write_wb_bw(void)
 275          {
 276   1              LUT_spi_write_wb_bw_vcom();
 277   1              driver_delay_xms(2);
 278   1              LUT_spi_write_wb_bw_b();
 279   1              driver_delay_xms(2);
 280   1              LUT_spi_write_wb_bw_w();
 281   1              driver_delay_xms(2);
 282   1      }
 283          /***********************************************************
 284          *****************´«Êä°×µ×ºÚ×Övcom-waveform******************
 285          ***********************************************************/
 286          void LUT_spi_write_wb_bw_vcom(void)
 287          {
 288   1              unsigned long i;
 289   1              EPD_W21_Write_CMD_DATA(0,0x20);//c
 290   1              for(i=0;i<15;i++)
 291   1              {
 292   2              EPD_W21_Write_CMD_DATA(1,LUT_T1_VCOM[i]);//d
 293   2              }
 294   1              driver_delay_xms(2);
 295   1      }
C51 COMPILER V9.01   UC8118                                                                11/23/2016 11:58:15 PAGE 6   

 296          /***********************************************************
 297          *****************´«Êä°×µ×ºÚ×Öb-waveform*********************
 298          ***********************************************************/
 299          void LUT_spi_write_wb_bw_b(void)
 300          {
 301   1              unsigned long i;
 302   1              EPD_W21_Write_CMD_DATA(0,0x21);
 303   1              for(i=0;i<15;i++)
 304   1              {
 305   2              EPD_W21_Write_CMD_DATA(1,LUT_T1_BLACK[i]);
 306   2      
 307   2              }
 308   1              driver_delay_xms(2);
 309   1      }
 310          /***********************************************************
 311          *****************´«Êä°×µ×ºÚ×Öw-waveform*********************
 312          ***********************************************************/
 313          void LUT_spi_write_wb_bw_w(void)
 314          {
 315   1              unsigned long i;
 316   1              EPD_W21_Write_CMD_DATA(0,0x22);
 317   1              for(i=0;i<15;i++)
 318   1              {
 319   2              EPD_W21_Write_CMD_DATA(1,LUT_T1_WHITE[i]);
 320   2              //      EPD_W21_Write_CMD_DATA(1,0);
 321   2              }
 322   1              driver_delay_xms(2);
 323   1      }
 324          
 325          
 326          void vPaper_Bcd_Display(UINT8 position,UINT8 num)
 327          {
 328   1              UINT8 i;
 329   1      
 330   1      
 331   1              
 332   1              for(i=0;i<7;i++)
 333   1                {
 334   2                      *(Pixel_Set+Pixel_Addr[position][i]-1)=!Num_Seg_Set[num][i];
 335   2                }
 336   1      }
 337          
 338          
 339          void vPaper_String_Display(UINT8 cString[],UINT8 cLen)                  
 340          {
 341   1              UINT8 i,j;
 342   1              UINT8 m;
 343   1              vScu_SetSysClkOsc2M();  
 344   1                              
 345   1              memset(Pixel_Set,1,96);
 346   1              if(cLen>9||(cLen==0))
 347   1              {
 348   2                      return;
 349   2              }
 350   1      
 351   1              
 352   1              for(i=0;i<cLen;i++)
 353   1              {
 354   2                      for(j=0;j<10;j++)                               
 355   2                      {       
 356   3                              if(cString[i] ==  Paper_Num_Assic[j])
 357   3                              {
C51 COMPILER V9.01   UC8118                                                                11/23/2016 11:58:15 PAGE 7   

 358   4                                      vPaper_Bcd_Display(9-cLen+i,j);
 359   4                                      continue;
 360   4                              }
 361   3                      }
 362   2              }
 363   1      
 364   1              
 365   1              for(m=0;m<12;m++)
 366   1              {
 367   2                      Send_Num[m]=(Pixel_Set[m*8]<<7)+(Pixel_Set[m*8+1]<<6)+(Pixel_Set[m*8+2]<<5)+(Pixel_Set[m*8+3]<<4) \
 368   2                                               +(Pixel_Set[m*8+4]<<3)+(Pixel_Set[m*8+5]<<2)+(Pixel_Set[m*8+6]<<1)+(Pixel_Set[m*8+7]);
 369   2              }
 370   1      
 371   1              EPD_W21_Write_CMD_DATA(0,0x10); 
 372   1         for(j=0; j<12; j++)  
 373   1              {
 374   2               EPD_W21_Write_CMD_DATA(1,Send_Num[j]);
 375   2              }                               
 376   1              EPD_W21_Write_CMD_DATA(1,0xFF);
 377   1      
 378   1              display();
 379   1               while(EPD_SPI_BUSY==0);
 380   1              vScu_SetSysClk32K();
 381   1              return;
 382   1      }
 383          void Paper_All_Clear(void)      
 384          {
 385   1              UINT8 j;
 386   1                      vScu_SetSysClkOsc2M();
 387   1              EPD_W21_Write_CMD_DATA(0,0x10);         
 388   1      
 389   1              for(j=0; j<12; j++)     
 390   1              {
 391   2               //EPD_W21_Write_CMD_DATA(1,Send_Num[j]);
 392   2                 EPD_W21_Write_CMD_DATA(1,0xFF);
 393   2              }                               
 394   1              EPD_W21_Write_CMD_DATA(1,0xFF);
 395   1      
 396   1              display();
 397   1               while(EPD_SPI_BUSY==0);
 398   1         vScu_SetSysClk32K();
 399   1      
 400   1      }
 401          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1618    ----
   CONSTANT SIZE    =    323    ----
   XDATA SIZE       =    108      36
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
