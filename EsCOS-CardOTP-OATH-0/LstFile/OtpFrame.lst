C51 COMPILER V9.01   OTPFRAME                                                              11/23/2016 11:58:15 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE OTPFRAME
OBJECT MODULE PLACED IN .\ObjFile\OtpFrame.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE SrcFile\Frame\OtpFrame.c LARGE BROWSE INCDIR(.\SrcFile\StartUp\CPU;.\SrcFil
                    -e\Frame\Inc;.\SrcFile\Func\Inc;.\SrcFile\Lib;.\SrcFile\App\Inc) DEFINE(_DEV_BOARD_,_FPGA_DEMO_EN_) DEBUG OBJECTEXTEND PR
                    -INT(.\LstFile\OtpFrame.lst) OBJECT(.\ObjFile\OtpFrame.obj)

line level    source

   1          /********************************************************************
   2                                    Nationz Co.,Ltd
   3                  Copyright (c) 2009£­2015 All Rights Reserved
   4           ********************************************************************
   5          File: OtpFrame.c
   6          History£º
   7          Version                      Author                     Date
   8          V0.1                         nationz              2013-03-27
   9          
  10          Description:
  11               OtpFrame Source Code File;
  12          Function list:
  13                  void vOTP_RunModeProcess(void);
  14                          void vOTP_UnlockPinProcess(void);
  15                          void vOTP_SetPinProcess(void);
  16                          void vOTP_InputPinProcess(void);
  17                          void vOTP_ActiveProcess(void);
  18                          void vOTP_SeedImportProcess(void);
  19                          void vOTP_ScrapProcess(void);        
  20          Special statement:
  21               NULL
  22           *******************************************************************/
  23          #define _OTPFRAME_C_
  24          #include "OTPFRAME.H"
  25          //#include "LCDFUNC.H"
  26          #include "uc8118.h"     
  27          #include "SCUFUNC.H"
  28          //#include "KBCFRAME.H"
  29          #include "UartFrame.h"
  30          #include "TBCFUNC.H"
  31          #include "ADCFUNC.H" 
  32          #include "string.H"     
  33          #include "UartFunc.h"
  34          #include "Debug.h" 
  35          #include "SM3FUNC.H"
  36          #include "TBCFRAME.H"
  37          #include "SM4.h"
  38          #include "OtpFunc.h"
  39          #include "Iomfunc.h"
  40          #include "WDTFUNC.H"
  41          #include "SecFunc.h"
  42          #include "SM4Process.h"
  43          #include "I2C.h"
  44          
  45          //UINT8 bOpenHash,bCloseLCD,bAlwaysbdisplay;
  46          UINT8 DispKeyPad[SCREENLEN];
  47          
  48          UINT8 u1Time_Dispaly[6];
  49          
  50          //UINT8  g_UART_COM_BUF[64];
  51          UINT8 idata g_ModfyPwFlag _at_ 0x38;
  52          u1 LongPressFlag = 0; 
  53          UINT8 g_AutoUnlockFlag = 0;
C51 COMPILER V9.01   OTPFRAME                                                              11/23/2016 11:58:15 PAGE 2   

  54          UINT8 idata g_AutoUnlockCnt _at_ 0x37;
  55          UINT8 idata gUnlockPinErr_Count _at_ 0x36;//ÊÖ¶¯½âËø¼ÆÊý£¬³¬¹ýÒ»¶¨´ÎÊý£¬OTPÊ§Ð§»ò×Ô»Ù
  56          UINT8 idata gsuperpw  _at_ 0x30;            //¼¤»î±êÖ¾Î»
  57          UINT8 idata gUseCase _at_ 0x31;           //OTP ×´Ì¬ÇÐ»»±êÖ¾
  58          UINT32 idata gTimer_Count_Base _at_ 0x32; //    OTPÏµÍ³»ù×¼Æ«ÒÆÊ±¼ä
  59          //UINT32 idata gTimer_Count _at_ 0x36; //       OTPÏµÍ³Ê±¼ä
  60          UINT32 idata gPinErr_Time _at_ 0x3A; // OTP±»Ëø¶¨µÄÏµÍ³Ê±¼ä
  61          UINT8 idata gPinErr_Count _at_ 0x3E;      //PinÂëÊäÈë´íÎó¼ÆÊý£¬×î´ó´íÎó´ÎÊý²»³¬¹ý6´Î
  62          UINT8 idata gCalibflag _at_ 0x3F;
  63          //UINT8 idata PowerOnFlag _at_ 0xb0;            //STARTUPÎÄ¼þÀïÃæµÄ±äÁ¿£¬¸ÄÉÆ¸´Î»ºóRAM±»ÇåµôµÄÇé¿ö
  64          u1 u1LowPowerFlag = 0;
  65          u1 u1FirstSetFlag = 0;
  66          
  67          volatile UINT8 gSecCount_10S,_TIMER_FLAG_,gFlag_1S; //Ö¸Ê¾¹Ø»úµÈ´ýÊ±¼ä¼ÆÊýÆ÷£¬Ã¿10SÏÔÊ¾±êÖ¾¹Ø±ÕÒ»¸ö£¬Ê±¼ä±
             -êÖ¾È«²¿ÏûÊ§OTP×Ô¶¯¹Ø»ú
  68          UINT8 gu1DetectErrFlag = 0;
  69          
  70          UINT8 idata gUserInfo[SEED_LEN] _at_ 0x40;      //ÖÖ×ÓÃÜÔ¿µÈÓÃ»§ÐÅÏ¢£¬µôµç±£³Ö
  71          //UINT8 idata gActiveSeed[32]; 
  72          //UINT8 idata gUnlockSeed[32];
  73          UINT8 idata gToken_Save[8] _at_ 0x60;//
  74          UINT32 idata gToken_Time1 _at_ 0x68;
  75          UINT32 idata gToken_Time2 _at_ 0x6c;
  76          //UINT8 gPin_Key[8];
  77          //UINT8 gErr[8]={"Error-00"};
  78          
  79          UINT8 idata g_u1SeedKey[SEEDKEY_LEN] _at_ 0x70;         //seedkey
  80          UINT8 idata g_u1MacKey[MACKEY_LEN] _at_ 0x80;           //MACkey
  81          //UINT8 xdata g_u1Key[KEY_LEN] = {0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x
             -ff,0xff};              //u1KEY
  82          UINT8 idata g_u1Key[KEY_LEN] _at_ 0x90;              //u1KEY
  83          //UINT8 xdata g_u1SN[SN_LEN] = {0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff};              //ÐòÁÐºÅ
  84          UINT8 idata g_u1SN[16] _at_ 0xa0;              //ÐòÁÐºÅ
  85          UINT8 idata g_SNLen _at_ 0xb1;
  86          //UINT8 EndFlag;
  87          
  88          /********************************************************************
  89          Function name:       void vOTP_KEY_CHECK(void)
  90          Input parameters:
  91              void  
  92          Return:
  93              void
  94          Function:
  95              Input Pin Code Process when OTP(been Actived) Power On      
  96          ********************************************************************/
  97          //ÊäÈëPIN ²Ù×÷
  98          u4 GetBaseTime(UINT8 *TimeInput)
  99          {
 100   1              u4      Ticks;
 101   1              u2      k;
 102   1              u2  u2Tmp;
 103   1              
 104   1              Ticks   =BASE_2011MINUTES; //BASE_MINUTES_2011;
 105   1      
 106   1              //u2Tmp = *(TimeInput + 1)*100 + *(TimeInput + 2);
 107   1              k       =2011;
 108   1              while( k<(2000 + *(TimeInput + 2) )     )
 109   1              {
 110   2                      Ticks   += 525600ul;  //365*24*60
 111   2                      if((k&0x03)==0)
 112   2                      {
 113   3                              Ticks   +=1440ul; //24*60
C51 COMPILER V9.01   OTPFRAME                                                              11/23/2016 11:58:15 PAGE 3   

 114   3                      }
 115   2                      k++;
 116   2              }
 117   1              
 118   1              if(*(TimeInput + 3)>1)
 119   1              {
 120   2                      Ticks   +=44640ul;    //31*24*60
 121   2              }
 122   1      
 123   1              if(*(TimeInput + 3)>2)
 124   1              {
 125   2                      if(((*(TimeInput + 2))&0x03)==0)
 126   2                      {
 127   3                              Ticks   +=41760ul; //29*24*60
 128   3                      }
 129   2                      else
 130   2                      {
 131   3                              Ticks   +=40320ul; //28*24*60
 132   3                      }
 133   2              }
 134   1      
 135   1              if(*(TimeInput + 3)>3)
 136   1              {
 137   2                      Ticks   +=44640ul;
 138   2              }       
 139   1      
 140   1              if(*(TimeInput + 3)>4)
 141   1              {
 142   2                      Ticks   +=43200ul;  //30*24*60
 143   2              }       
 144   1      
 145   1              if(*(TimeInput + 3)>5)
 146   1              {
 147   2                      Ticks   +=44640ul;
 148   2              }       
 149   1      
 150   1              if(*(TimeInput + 3)>6)
 151   1              {
 152   2                      Ticks   +=43200ul;
 153   2              }       
 154   1      
 155   1              if(*(TimeInput + 3)>7)
 156   1              {
 157   2                      Ticks   +=44640ul;
 158   2              }       
 159   1      
 160   1              if(*(TimeInput + 3)>8)
 161   1              {
 162   2                      Ticks   +=44640ul;
 163   2              }       
 164   1      
 165   1              if(*(TimeInput + 3)>9)
 166   1              {
 167   2                      Ticks   +=43200ul;
 168   2              }       
 169   1      
 170   1              if(*(TimeInput + 3)>10)
 171   1              {
 172   2                      Ticks   +=44640ul;
 173   2              }       
 174   1      
 175   1              if(*(TimeInput + 3)>11)
C51 COMPILER V9.01   OTPFRAME                                                              11/23/2016 11:58:15 PAGE 4   

 176   1              {
 177   2                      Ticks   +=43200ul;
 178   2              }
 179   1      
 180   1              u2Tmp    = (u2)(*(TimeInput + 4)-1)*(1440);//24*60;
 181   1              Ticks   += u2Tmp;//(RTC_DateStruct.RTC_Date-1)*(24*60);//24*60
 182   1              u2Tmp   = *(TimeInput + 5)*60;
 183   1              Ticks   += u2Tmp;//RTC_TimeStruct.RTC_Hours*60;
 184   1              Ticks   += *(TimeInput + 6);
 185   1              Ticks   *= 60;
 186   1              Ticks   += *(TimeInput + 7);
 187   1              //Ticks =1206446790;  // µ¥Î»ÎªÃë£¬¼´¡°3 25 2008, 12:06:30 GMT¡±
 188   1              //*pdata =Ticks;
 189   1              return Ticks;
 190   1      }
 191          
 192          UINT8 DectoBCD( UINT8 temp )  
 193          {  
 194   1              return ( (temp/10)*16 + temp%10 ) ;  
 195   1      } 
 196          
 197          void HexToStr(UINT8 *pbDest, UINT8 *pbSrc, UINT8 nLen)
 198          {
 199   1              char    ddl,ddh;
 200   1              UINT8   i;
 201   1              
 202   1              for (i=0; i<nLen; i++)
 203   1              {
 204   2                      ddh = 48 + pbSrc[i] / 16;
 205   2                      ddl = 48 + pbSrc[i] % 16;
 206   2                      if (ddh > 57) ddh = ddh + 7;
 207   2                      if (ddl > 57) ddl = ddl + 7;
 208   2                      pbDest[i*2] = ddh;
 209   2                      pbDest[i*2+1] = ddl;
 210   2              }
 211   1              
 212   1              pbDest[nLen*2] = '\0';
 213   1      }
 214          
 215          UINT8 Get2121Chk2(const UINT8* pu1Num, UINT32 u4NumLen)
 216          {
 217   1              UINT8   u1Temp;
 218   1              UINT32  u4Data;
 219   1              UINT32  i;
 220   1              
 221   1              u4Data = 0;
 222   1              for ( i = 0; i < u4NumLen; i++)
 223   1              {
 224   2                      u1Temp = (UINT8)((pu1Num[i] - 0x30)*(0x02 - (i&0x01)));
 225   2                      u4Data += /*(u1Temp/10) + */(u1Temp%10);
 226   2              }
 227   1              u1Temp = (UINT8)(10 - (u4Data%10));
 228   1              if ( 10 == u1Temp )
 229   1              {
 230   2                      u1Temp = 0x00;
 231   2              }
 232   1              return u1Temp;
 233   1      }
 234          
 235          
 236          #if 0
              /********************************************************************
C51 COMPILER V9.01   OTPFRAME                                                              11/23/2016 11:58:15 PAGE 5   

              Function name:       void vOTP_KEY_CHECK(void)
              Input parameters:
                  void  
              Return:
                  void
              Function:
                  Input Pin Code Process when OTP(been Actived) Power On      
              ********************************************************************/
              //ÊäÈëPIN ²Ù×÷
              void vOTP_KEY_CHECK(void)
              {
                      //UINT8 i;
                      UINT8 KeyCheckCnt = 0;
                      UINT8 Key_Input = 0xff;
                      UINT16 u2Cnt;
                      //UINT8 KeyPad[13];
                      #if 1
              #ifdef _FPGA_DEMO_EN_
                      vLcd_SetStopMode();      
              #endif
                      if(u1LowPowerFlag == 1)
                      {
                              vLcd_String_Display2("LPkkkkkk", 8);
                              vScu_TbcIntEn();
                              vTbc_Int1HzEn();
                              gSecCount_10S=0;
                              while(gSecCount_10S < 2);
                              vLcd_String_Clear2();
                      }
                      
                      vLcd_String_Display2("12345678",8);
              
              #ifdef _FPGA_DEMO_EN_  
                      vLcd_SetDisplayMode();          
              #endif
              
                      #endif
              
                      _TIMER_FLAG_=0;
                      vScu_TbcIntEn();
                      vTbc_Int1HzEn();
                      
                      while(1)
                      {
                              Key_Input = ucGetKeyValue();
              
                              #if 1
                              switch(Key_Input)
                              {
                                      case KEY_1:                                             //KEY_1
                                      {
                                              _TIMER_FLAG_=0;
                                              if(KeyCheckCnt == 0)
                                              {
                                                      
                                                      KeyCheckCnt = 1;
                                                      
                                                      #ifdef _FPGA_DEMO_EN_
                                                  vLcd_SetStopMode();
                                                      #endif  
                              
                                                      vLcd_String_Display2("P1P1P1P1",8);
C51 COMPILER V9.01   OTPFRAME                                                              11/23/2016 11:58:15 PAGE 6   

                                                      //vLcd_String_Display2("11111111",8);
                                                      #ifdef _FPGA_DEMO_EN_   
                                                      vLcd_SetDisplayMode(); 
                                                      #endif
                                              }
                                              else if(KeyCheckCnt == 12)
                                              {
                                                      KeyCheckCnt = 13;
                                                      #ifdef _FPGA_DEMO_EN_
                                                  vLcd_SetStopMode();
                                                      #endif  
                                                      
                                                      vLcd_String_Display2("1P1P1P1P",8);
                                                      #ifdef _FPGA_DEMO_EN_   
                                                      vLcd_SetDisplayMode(); 
                                                      #endif
                                              }
                                              break;
                                      }
                                      case KEY_2:
                                      {
                                              _TIMER_FLAG_=0;
                                              if(KeyCheckCnt == 1)
                                              {
                                                      KeyCheckCnt = 2;
                                                      #ifdef _FPGA_DEMO_EN_
                                                  vLcd_SetStopMode();
                                                      #endif  
                                                      //vLcd_String_Display2("22222222",8);
                                                      vLcd_String_Display2("n2n2n2n2",8);
                                                      #ifdef _FPGA_DEMO_EN_   
                                                      vLcd_SetDisplayMode(); 
                                                      #endif
                                              }
                                              else if(KeyCheckCnt == 13)
                                              {
                                                      KeyCheckCnt = 14;
                                                      #ifdef _FPGA_DEMO_EN_
                                                  vLcd_SetStopMode();
                                                      #endif  
                                                      
                                                      vLcd_String_Display2("2n2n2n2n",8);
                                                      #ifdef _FPGA_DEMO_EN_   
                                                      vLcd_SetDisplayMode(); 
                                                      #endif
                                              }
                                              break;  
                                      }
                                      case KEY_3:
                                      {
                                              _TIMER_FLAG_=0;
                                              if(KeyCheckCnt == 2)
                                              {
                                                      KeyCheckCnt = 3;
                                                      #ifdef _FPGA_DEMO_EN_
                                                  vLcd_SetStopMode();
                                                      #endif  
                                                      //vLcd_String_Display2("33333333",8);
                                                      vLcd_String_Display2("o3o3o3o3",8);
                                                      #ifdef _FPGA_DEMO_EN_   
                                                      vLcd_SetDisplayMode(); 
                                                      #endif
C51 COMPILER V9.01   OTPFRAME                                                              11/23/2016 11:58:15 PAGE 7   

                                              }
                                              else if(KeyCheckCnt == 14)
                                              {
                                                      KeyCheckCnt = 15;
                                                      #ifdef _FPGA_DEMO_EN_
                                                  vLcd_SetStopMode();
                                                      #endif  
                                                      
                                                      vLcd_String_Display2("3o3o3o3o",8);
                                                      #ifdef _FPGA_DEMO_EN_   
                                                      vLcd_SetDisplayMode(); 
                                                      #endif
                                              }
                                              break;  
                                      }
                                      case KEY_4:
                                      {
                                              _TIMER_FLAG_=0;
                                              if(KeyCheckCnt == 3)
                                              {
                                                      KeyCheckCnt = 4;
                                                      #ifdef _FPGA_DEMO_EN_
                                                  vLcd_SetStopMode();
                                                      #endif  
                                                      //vLcd_String_Display2("44444444",8);
                                                      vLcd_String_Display2("-4-4-4-4",8);
                                                      #ifdef _FPGA_DEMO_EN_   
                                                      vLcd_SetDisplayMode(); 
                                                      #endif
                                              }
                                              else if(KeyCheckCnt == 15)
                                              {
                                                      KeyCheckCnt = 16;
                                                      #ifdef _FPGA_DEMO_EN_
                                                  vLcd_SetStopMode();
                                                      #endif  
                                                      
                                                      vLcd_String_Display2("4-4-4-4-",8);
                                                      #ifdef _FPGA_DEMO_EN_   
                                                      vLcd_SetDisplayMode(); 
                                                      #endif
                                              }
                                              break;  
                                      }
                                      case KEY_5:
                                      {
                                              _TIMER_FLAG_=0;
                                              if(KeyCheckCnt == 4)
                                              {
                                                      KeyCheckCnt = 5;
                                                      #ifdef _FPGA_DEMO_EN_
                                                  vLcd_SetStopMode();
                                                      #endif  
                                                      //vLcd_String_Display2("55555555",8);
                                                      vLcd_String_Display2("_5_5_5_5",8);
                                                      #ifdef _FPGA_DEMO_EN_   
                                                      vLcd_SetDisplayMode(); 
                                                      #endif
                                              }
                                              else if(KeyCheckCnt == 16)
                                              {
                                                      KeyCheckCnt = 17;
C51 COMPILER V9.01   OTPFRAME                                                              11/23/2016 11:58:15 PAGE 8   

                                                      #ifdef _FPGA_DEMO_EN_
                                                  vLcd_SetStopMode();
                                                      #endif  
                                                      
                                                      vLcd_String_Display2("5_5_5_5_",8);
                                                      #ifdef _FPGA_DEMO_EN_   
                                                      vLcd_SetDisplayMode(); 
                                                      #endif
                                              }
                                              break;  
                                      }
                                      case KEY_6:
                                      {
                                              _TIMER_FLAG_=0;
                                              if(KeyCheckCnt == 5)
                                              {
                                                      KeyCheckCnt = 6;
                                                      #ifdef _FPGA_DEMO_EN_
                                                  vLcd_SetStopMode();
                                                      #endif  
                                                      //vLcd_String_Display2("66666666",8);
                                                      vLcd_String_Display2("E6E6E6E6",8);
                                                      #ifdef _FPGA_DEMO_EN_   
                                                      vLcd_SetDisplayMode(); 
                                                      #endif
                                              }
                                              else if(KeyCheckCnt == 17)
                                              {
                                                      KeyCheckCnt = 18;
                                                      #ifdef _FPGA_DEMO_EN_
                                                  vLcd_SetStopMode();
                                                      #endif  
                                                      
                                                      vLcd_String_Display2("6E6E6E6E",8);
                                                      #ifdef _FPGA_DEMO_EN_   
                                                      vLcd_SetDisplayMode(); 
                                                      #endif
                                              }
                                              break;  
                                      }
                                      case KEY_7:
                                      {
                                              _TIMER_FLAG_=0;
                                              if(KeyCheckCnt == 6)
                                              {
                                                      KeyCheckCnt = 7;
                                                      #ifdef _FPGA_DEMO_EN_
                                                  vLcd_SetStopMode();
                                                      #endif  
                                                      //vLcd_String_Display2("77777777",8);
                                                      vLcd_String_Display2("r7r7r7r7",8);
                                                      #ifdef _FPGA_DEMO_EN_   
                                                      vLcd_SetDisplayMode(); 
                                                      #endif
                                              }
                                              else if(KeyCheckCnt == 18)
                                              {
                                                      KeyCheckCnt = 19;
                                                      #ifdef _FPGA_DEMO_EN_
                                                  vLcd_SetStopMode();
                                                      #endif  
                                                      
C51 COMPILER V9.01   OTPFRAME                                                              11/23/2016 11:58:15 PAGE 9   

                                                      vLcd_String_Display2("7r7r7r7r",8);
                                                      #ifdef _FPGA_DEMO_EN_   
                                                      vLcd_SetDisplayMode(); 
                                                      #endif
                                              }
                                              break;  
                                      }
                                      case KEY_8:
                                      {
                                              _TIMER_FLAG_=0;
                                              if(KeyCheckCnt == 7)
                                              {
                                                      KeyCheckCnt = 8;
                                                      #ifdef _FPGA_DEMO_EN_
                                                  vLcd_SetStopMode();
                                                      #endif  
                                                      //vLcd_String_Display2("88888888",8);
                                                      vLcd_String_Display2("L8L8L8L8",8);
                                                      #ifdef _FPGA_DEMO_EN_   
                                                      vLcd_SetDisplayMode(); 
                                                      #endif
                                              }
                                              else if(KeyCheckCnt == 19)
                                              {
                                                      KeyCheckCnt = 20;
                                                      #ifdef _FPGA_DEMO_EN_
                                                  vLcd_SetStopMode();
                                                      #endif  
                                                      
                                                      vLcd_String_Display2("8L8L8L8L",8);
                                                      #ifdef _FPGA_DEMO_EN_   
                                                      vLcd_SetDisplayMode(); 
                                                      #endif
                                              }
                                              break;  
                                      }
                                      case KEY_9:
                                      {
                                              _TIMER_FLAG_=0;
                                              if(KeyCheckCnt == 8)
                                              {
                                                      KeyCheckCnt = 9;
                                                      #ifdef _FPGA_DEMO_EN_
                                                  vLcd_SetStopMode();
                                                      #endif  
                                                      //vLcd_String_Display2("99999999",8);
                                                      vLcd_String_Display2("c9c9c9c9",8);
                                                      #ifdef _FPGA_DEMO_EN_   
                                                      vLcd_SetDisplayMode(); 
                                                      #endif
                                              }
                                              else if(KeyCheckCnt == 20)
                                              {
                                                      KeyCheckCnt = 21;
                                                      #ifdef _FPGA_DEMO_EN_
                                                  vLcd_SetStopMode();
                                                      #endif  
                                                      
                                                      vLcd_String_Display2("9c9c9c9c",8);
                                                      #ifdef _FPGA_DEMO_EN_   
                                                      vLcd_SetDisplayMode(); 
                                                      #endif
C51 COMPILER V9.01   OTPFRAME                                                              11/23/2016 11:58:15 PAGE 10  

              
                                                      gUseCase = OTPSTATUS_CALIB;     
              
                                                      return;
                                              }
                                              break;  
                                      }
                                      case KEY_DEL:
                                      {
                                              _TIMER_FLAG_=0;
                                              if(KeyCheckCnt == 10)
                                              {
                                                      KeyCheckCnt = 11;
                                                      #ifdef _FPGA_DEMO_EN_
                                                  vLcd_SetStopMode();
                                                      #endif  
                                                      vLcd_String_Display2("KkKkKkKk",8);
                                                      #ifdef _FPGA_DEMO_EN_   
                                                      vLcd_SetDisplayMode(); 
                                                      #endif
                                              }
                                              break;  
                                      }
                                      case KEY_0:
                                      {
                                              _TIMER_FLAG_=0;
                                              if(KeyCheckCnt == 9)
                                              {
                                                      KeyCheckCnt = 10;
                                                      #ifdef _FPGA_DEMO_EN_
                                                  vLcd_SetStopMode();
                                                      #endif  
                                                      //vLcd_Flag_Clear();
                                                      vLcd_String_Display2("00000000",8);
                                                      #ifdef _FPGA_DEMO_EN_   
                                                      vLcd_SetDisplayMode(); 
                                                      #endif
                                              }
                                              break;  
                                      }
                                      default:
                                              break;
                                              
                              }
                              #endif
              
                              u2Cnt = 0;
                              while(!(SCULCDSWEN&SCUPOWERIOSTS)&&(u2Cnt<2000))
                              {
                                      u2Cnt++ ;
                              }
                              
                              if((u2Cnt<2000)&&(u2Cnt>10))                            //Ç°Ãæ³¬Ê±¹Ø»ú£¬ºóÃæÈ¥¶¶¶¯
                              {
                                      _TIMER_FLAG_=0;
              
                                      if(KeyCheckCnt == 11)
                                      {
                                              KeyCheckCnt = 12;
                                              #ifdef _FPGA_DEMO_EN_
                                          vLcd_SetStopMode();
                                              #endif  
C51 COMPILER V9.01   OTPFRAME                                                              11/23/2016 11:58:15 PAGE 11  

                                              vLcd_String_Display2("kKkKkKkK",8);
                                              #ifdef _FPGA_DEMO_EN_   
                                              vLcd_SetDisplayMode(); 
                                              #endif
              
                                              //gUseCase = OTPSTATUS_CALIB;   
              
                                              //return;
                                      }
                                      
                              }
                              else if(u2Cnt>=2000)
                              {
                                      /*******Ö±½Ó½øÈëÐÝÃß********/
                                      vLcd_All_Clear2();
                                      vScu_SetSysClk32K(); 
                                      vScu_StandbyModeEn();   
                              }
              
                              
                              if((_TIMER_FLAG_>= 120))        
                              {
                                      /**********Ö±½Ó½øÈëÐÝÃß***********/
                                      vLcd_All_Clear2();
                                      vScu_SetSysClk32K(); 
                                      vScu_StandbyModeEn();
                              }
              
                              #if(YJZX)
                               if(gFlag_1S>=2)
                               {
                                      gFlag_1S = 0;
                                      //vScu_PdrEn();
                                      vSec_FreqExcepDetectEn();
                                      vSec_LightDetectEn(0x03);
              
                                      vScu_SetSysClkOsc2M();
                                      if((vSec_TMPERDetect())||(gu1DetectErrFlag == 1))
                                      {
                                              gUseCase = OTPSTATUS_INVALID;
                                              return;
                                      }
              
                                      if(2 == ucPowerDetect())//µÍµçÑ¹
                                      {          
                                              gUseCase = OTPSTATUS_INVALID;
                                              return;
                                      }
                                      vScu_SetSysClk32K();
                                      //vAdcBgDis();
                                      
                                      //LDO TRIM µ½2.05V
                                      //ANALOGCTRLTRIMR1=0x00;
                                      //PDR ¹Ø±ÕµÍµçÑ¹¼ì²â
                                      //vScu_PdrDis();
                      
                                      vAdcFDDis();
                                      vAdcLDDis();
                                      //vScu_AnactrlClkDis();  
                                      //vScu_Osc2MDis();
                               }
                               #endif
C51 COMPILER V9.01   OTPFRAME                                                              11/23/2016 11:58:15 PAGE 12  

                      }
              }
              
              #endif
 676          
 677          
 678          
 679          void vOTP_InitProcess(void)
 680          {
 681   1              u2 u2Status; 
 682   1              UINT8 u1CHeckStatus;
 683   1              UINT8 u1Datum[64];
 684   1      //      UINT16 E2prom_Address;
 685   1              u2 u2PPM_Value;
 686   1              
 687   1      
 688   1      //      vLcd_All_Display2();    //ÐèÌæ»»
 689   1              vPaper_String_Display("88888888",8);
 690   1      
 691   1              #if 1                   // suanfa zijian
 692   1              vScu_SetSysClkOsc2M();
 693   1              u1CHeckStatus =  SM4DEC_TEST();                 //SM4ENC_TEST();                        //ÈÎºÎÒ»¸öËã·¨Ä£¿é×Ô¼ìÊ§°Ü£¬¶¼»áÊ¹Éè±¸Ê§Ð§£¬½øÈëÊ§Ð§
             -×´Ì¬
 694   1              if(u1CHeckStatus == 0xff)
 695   1              {
 696   2                      gUseCase = OTPSTATUS_INVALID;
 697   2                      return;
 698   2              }
 699   1      
 700   1              
 701   1              if(u1CHeckStatus == 0)                                  //Èç¹ûÇ°ÃæµÄ×Ô¼ì´íÎóÁË£¬¾ÍÃ»ÓÐ±ØÒªÔÙ½øÐÐÏÂÃæµÄ×Ô¼ìÁË£¬Ò²±ÜÃâÇ°Ãæ×Ô¼ì´íÎó£¬ºóÃæ
             -×Ô¼ìÕýÈ·µÄÇé¿ö
 702   1              {
 703   2                      u1CHeckStatus = SHA1_TEST();    
 704   2                      if(u1CHeckStatus == 0xff)
 705   2                      {
 706   3                              gUseCase = OTPSTATUS_INVALID;
 707   3                              return;
 708   3                      }
 709   2              }
 710   1              vScu_SetSysClk32K();  
 711   1              #endif
 712   1      
 713   1      
 714   1      
 715   1              vScu_TbcIntEn();                        //da kai                
 716   1              vTbc_Int1HzEn();
 717   1              
 718   1      //      IOMP0PD   &= 0xfe;              //GP0¹Ø±ÕÏÂÀ­
 719   1      //      IOMP0PU   |= 0x01;              //GP0´ò¿ªÉÏÀ²
 720   1              
 721   1      //      vScu_SetSysClk64K();            //9600_test
 722   1      //      vUartInit();
 723   1              vIom_LsclkOutEn();
 724   1      
 725   1              while(1)
 726   1              {
 727   2                      //u2Status = ReceiveData_Poll();
 728   2                      readFromROM(u1Datum, EEPROM_ADDRESS, FRAME_LENGTH);
 729   2                      
 730   2                      if( FRAME_HEAD == u1Datum[0] )
 731   2                      {
C51 COMPILER V9.01   OTPFRAME                                                              11/23/2016 11:58:15 PAGE 13  

 732   3                                      
 733   3                      }
 734   2                      else
 735   2                      {
 736   3                                      
 737   3                      }
 738   2                      
 739   2                      
 740   2      
 741   2                      if(u2Status == RSP_SET_SUCCESS)
 742   2                      {
 743   3                              if(OPCODE_SET_CALIB== g_UART_COM_BUF[OFFSET_OP])
 744   3                              {
 745   4                                      if(gUseCase < OTPSTATUS_ACTIVATE)
 746   4                                      {
 747   5                                              Bak_PPMValue = ((u2)g_UART_COM_BUF[OFFSET_DATA]<<8) + (u2)g_UART_COM_BUF[OFFSET_DATA+1]
             -;
 748   5                                              
 749   5                                              if(0x8000&Bak_PPMValue) //-ppm
 750   5                                              {
 751   6                                                u2PPM_Value =  Bak_PPMValue^0x8000; 
 752   6                                                                                                      Crystal_PPM = -((float)u2PPM_Value/2);
 753   6                                              }
 754   5                                              else
 755   5                                              {
 756   6                                                  Crystal_PPM = ((float)Bak_PPMValue/2);
 757   6                                              }
 758   5      
 759   5                                              if(Bak_PPMValue&0x8000) //ÔÚTBCÆô¶¯Ö®Ç°ÐèÒªÅäÖÃ
 760   5                                              {
 761   6                                                      TBCADJL=(UINT8)((0x7FFF-(Bak_PPMValue&0x7FFF))); 
 762   6                                                      TBCADJH=(UINT8)((0x7FFF-(Bak_PPMValue&0x7FFF))>>8);                                     
 763   6                                              }
 764   5                                              else
 765   5                                              {
 766   6                                                      TBCADJL=(UINT8)((0x7FFF+Bak_PPMValue));
 767   6                                                      TBCADJH=(UINT8)((0x7FFF+Bak_PPMValue)>>8);       
 768   6                                              } 
 769   5      
 770   5                                              gCalibflag = 1;
 771   5                                              gUseCase = OTPSTATUS_SN_TIME;                           //ÏÈÐ´ÎÂ¶ÈÔÙÐ´Ð£×¼Öµ
 772   5                                                      
 773   5                                              USART_TxRsp(u2Status,OPCODE_SET_CALIB);
 774   5                                      }
 775   4                                      else
 776   4                                      {
 777   5                                              u2Status = RSP_OPCODE_ERR;
 778   5                                              USART_TxRsp(u2Status,g_UART_COM_BUF[OFFSET_OP]);        
 779   5                                      }
 780   4      
 781   4                              }
 782   3                              else if(OPCODE_SN_TIME== g_UART_COM_BUF[OFFSET_OP])
 783   3                              {
 784   4                                      if(gUseCase < OTPSTATUS_ACTIVATE)
 785   4                                      {
 786   5                                              g_SNLen = g_UART_COM_BUF[OFFSET_LEN] - TIME_LEN - KEY_LEN;
 787   5                                              if((g_SNLen < 17))
 788   5                                              {
 789   6                                                      if ( OTPSECU_OP_OK == CosOperation(OP_SN, &g_UART_COM_BUF[OFFSET_DATA]))
 790   6                                                      {
 791   7                                                              gTimer_Count_Base = GetBaseTime(&g_UART_COM_BUF[OFFSET_DATA+g_SNLen]);
 792   7                      
C51 COMPILER V9.01   OTPFRAME                                                              11/23/2016 11:58:15 PAGE 14  

 793   7                                                              //vTbcInit();           //´ò¿ªTBCÄ£¿é
 794   7                                                              vTbc_StartDis();
 795   7                                                              vTbc_StartEn();
 796   7                                                              gUseCase =      OTPSTATUS_MACKEY;                                       //OTPSTATUS_MACKEY;
 797   7                                                              u2Status        =RSP_SET_SUCCESS;
 798   7                                                              USART_TxRsp(u2Status,OPCODE_SN_TIME);
 799   7              
 800   7                                                               vTbc_ReadBakCounter();
 801   7                                                               gBackupTBCInitVal = ulGetTbcCountVlaue();
 802   7                                                              //return;
 803   7                                                      }
 804   6                                                      else
 805   6                                                      {
 806   7                                                              u2Status        =RSP_COS_ERR;
 807   7                                                              USART_TxRsp(u2Status,OPCODE_SN_TIME);
 808   7                                                      }                                       
 809   6                                              }
 810   5                                              else
 811   5                                              {
 812   6                                                      u2Status = RSP_OPCODE_ERR;
 813   6                                                      USART_TxRsp(u2Status,g_UART_COM_BUF[OFFSET_OP]);                                        
 814   6                                              }
 815   5                                      }
 816   4                                      else
 817   4                                      {
 818   5                                              u2Status        =RSP_OPCODE_ERR;
 819   5                                              USART_TxRsp(u2Status,OPCODE_SN_TIME);
 820   5                                      }
 821   4                              }
 822   3                              else if(OPCODE_MK_SK == g_UART_COM_BUF[OFFSET_OP])
 823   3                              {
 824   4                                      if(gUseCase <OTPSTATUS_ACTIVATE)
 825   4                                      {
 826   5                                              if ( OTPSECU_OP_OK == CosOperation(OP_MACKEY_SEEDKEY, &g_UART_COM_BUF[OFFSET_DATA]))
 827   5                                              {
 828   6                                                      gUseCase = OTPSTATUS_CRCSNTIME;                 
 829   6      
 830   6                                                      USART_TxRsp(u2Status,OPCODE_MK_SK);     
 831   6                                                      u2Status        =RSP_SET_SUCCESS;                               
 832   6                                                      
 833   6                                                      //break;
 834   6                                                      //return;
 835   6                                              }
 836   5                                              else
 837   5                                              {
 838   6                                                      u2Status        =RSP_COS_ERR;
 839   6                                                      USART_TxRsp(u2Status,OPCODE_MK_SK);
 840   6                                              }
 841   5                                      }
 842   4                                      else
 843   4                                      {
 844   5                                              u2Status        =RSP_OPCODE_ERR;
 845   5                                              USART_TxRsp(u2Status,OPCODE_MK_SK);
 846   5                                      }
 847   4                              }
 848   3                              else if(OPCODE_REQ_OK== g_UART_COM_BUF[OFFSET_OP])
 849   3                              {
 850   4                                      if(gUseCase >= OTPSTATUS_CRCSNTIME)                     //Ò²¿ÉÄÜÊÇ¼¤»îÌ¬
 851   4                                      {                    
 852   5                                              if((0xA0 == g_UART_COM_BUF[OFFSET_DATA])&&(0x02 == g_UART_COM_BUF[OFFSET_DATA + 1]))
 853   5                                              {
 854   6                                                      USART_TxRsp(u2Status,OPCODE_REQ_OK);
C51 COMPILER V9.01   OTPFRAME                                                              11/23/2016 11:58:15 PAGE 15  

 855   6                                                      //if(OTPSECU_OP_OK ==CosOperation(OP_GEN_SEED, NULL))
 856   6                                                      //{
 857   6                                                              u2Status        =RSP_SET_SUCCESS;
 858   6      
 859   6      //                                                      vLcd_All_Clear2();
 860   6                                                        Paper_All_Clear();
 861   6                                                              g_ModfyPwFlag = 1;
 862   6                                                              gUseCase = OTPSTATUS_TIMETOKEN;   
 863   6                                                              vScu_SetSysClk32K();                            //Ê±ÖÓ´Ó64K±äÎª32K
 864   6                                                              //vScu_PowerIo_ResultInterrupt();                       //zhong duan guanji
 865   6                                                              return;
 866   6                                                      //}
 867   6                                                      //else
 868   6                                                      //{
 869   6                                                      //      u2Status        =RSP_COS_ERR;
 870   6                                                      //      USART_TxRsp(u2Status,OPCODE_REQ_OK);
 871   6                                                      //}
 872   6                                                      
 873   6                                              }
 874   5                                              else
 875   5                                              {
 876   6                                                      u2Status        =RSP_DATA_ERR;
 877   6                                                      USART_TxRsp(u2Status,OPCODE_REQ_OK);
 878   6                                              }
 879   5                                      }
 880   4                                      else
 881   4                                      {
 882   5                                              u2Status        =RSP_OPCODE_ERR;
 883   5                                              USART_TxRsp(u2Status,OPCODE_REQ_OK);
 884   5                                      }
 885   4                              }
 886   3                              else if(SET_TEMP_BASIC == g_UART_COM_BUF[OFFSET_OP])
 887   3                              {
 888   4                                      if(gUseCase < OTPSTATUS_ACTIVATE)
 889   4                                      {
 890   5                                              Basic_Temp_Cmd = 1;
 891   5                                              Basic_Temp_Value = ((u2)g_UART_COM_BUF[OFFSET_DATA]<<8) + g_UART_COM_BUF[OFFSET_DATA+1]
             -; 
 892   5                                              
 893   5                                               if(gCalibflag == 1)
 894   5                                               {
 895   6                                                      #if 1
 896   6                                                      vScu_SetSysClkOsc2M();                                  //s»á²»»áÓ°Ïì´®¿ÚÍ¨ÐÅ?
 897   6                                                      Exral_Temp_Flag = 0;
 898   6                                                      #if(DEBUG)
                                                               vDelay200Us(250);
                                                               vDelay200Us(250);
                                                               vDelay200Us(250);
                                                               vDelay200Us(250);
                                                               vDelay200Us(250);
                                                               vDelay200Us(250);
                                                               vDelay200Us(250);
                                                               vDelay200Us(250);
                                                               vDelay200Us(250);
                                                               vDelay200Us(250);
                                                               vDelay200Us(250);
                                                               vDelay200Us(250);
                                                               vDelay200Us(250);
                                                               vDelay200Us(250);
                                                               vDelay200Us(250);
                                                               vDelay200Us(250);
                                                               vDelay200Us(250);
C51 COMPILER V9.01   OTPFRAME                                                              11/23/2016 11:58:15 PAGE 16  

                                                               vDelay200Us(250);
                                                               vDelay200Us(250);
                                                               vDelay200Us(250);
                                                               vDelay200Us(250);
                                                              #else
 921   6      
 922   6                                                      IC_Temperature_Test();                                  //test0406
 923   6                                                      vFreqAdj(0);
 924   6                                                      #endif
 925   6                                                      
 926   6                                                      vScu_SetSysClk32K();
 927   6                                                      vScu_WakeUpTimerWakeUp_1Hour();         //ÉèÖÃ1Ð¡Ê±¶¨Ê±»½ÐÑ 20150515    
 928   6                                                      vScu_SetSysClk64K();                    //9600_test
 929   6                                                      WT_Onehour_Flag = 1;
 930   6                                                      #endif
 931   6                                                      vUartInit();
 932   6                                                      USART_TxRsp(u2Status,OPCPDE_READ_TEMP);
 933   6                                               }
 934   5                                               else
 935   5                                               {
 936   6                                                      u2Status = RSP_OPCODE_ERR;
 937   6                                                      USART_TxRsp(u2Status,SET_TEMP_BASIC);
 938   6                                               }
 939   5                                      }
 940   4                                      else
 941   4                                      {
 942   5                                              u2Status        =RSP_OPCODE_ERR;
 943   5                                              USART_TxRsp(u2Status,SET_TEMP_BASIC);
 944   5                                      }
 945   4                              }                       
 946   3                              else if(OPCODE_READ_STATUS== g_UART_COM_BUF[OFFSET_OP])
 947   3                              {
 948   4                                      u2Status = RSP_SET_SUCCESS;
 949   4                                      USART_TxRsp(u2Status,OPCODE_READ_STATUS);
 950   4                              }
 951   3                              else if(OPCODE_READ_CALIB== g_UART_COM_BUF[OFFSET_OP])
 952   3                              {
 953   4                                      //if(gUseCase > OTPSTATUS_CALIB)
 954   4                                      {
 955   5                                              u2Status = RSP_SET_SUCCESS;
 956   5                                              USART_TxRsp(u2Status,OPCODE_READ_CALIB);
 957   5                                      }
 958   4                              }
 959   3                              else if(OPCPDE_READ_TEMP== g_UART_COM_BUF[OFFSET_OP])
 960   3                              {
 961   4                                      USART_TxRsp(u2Status,OPCPDE_READ_TEMP);
 962   4                              }
 963   3                              else if(OPCODE_READ_VERSION== g_UART_COM_BUF[OFFSET_OP])
 964   3                              {
 965   4                                      USART_TxRsp(u2Status,OPCODE_READ_VERSION);
 966   4                              }
 967   3                              else if(OPCODE_READ_TIME== g_UART_COM_BUF[OFFSET_OP])
 968   3                              {
 969   4                                      USART_TxRsp(u2Status,OPCODE_READ_TIME);
 970   4                                      //u2Status = RSP_SET_FAIL;
 971   4                              }
 972   3                              else if(OPCODE_READ_SN== g_UART_COM_BUF[OFFSET_OP])
 973   3                              {
 974   4                                      USART_TxRsp(u2Status,OPCODE_READ_SN);
 975   4                                      //u2Status = RSP_SET_FAIL;
 976   4                              }
 977   3                              else if(OPCODE_CHANGE_STATUS== g_UART_COM_BUF[OFFSET_OP])
C51 COMPILER V9.01   OTPFRAME                                                              11/23/2016 11:58:15 PAGE 17  

 978   3                              {
 979   4                                      if(gUseCase>g_UART_COM_BUF[OFFSET_DATA])
 980   4                                      {
 981   5                                              gUseCase = g_UART_COM_BUF[OFFSET_DATA];
 982   5                                              USART_TxRsp(u2Status,OPCODE_CHANGE_STATUS);
 983   5                                              break;
 984   5                                      }
 985   4                                      else
 986   4                                      {
 987   5                                              u2Status = RSP_OPCODE_ERR;
 988   5                                              USART_TxRsp(u2Status,g_UART_COM_BUF[OFFSET_OP]);
 989   5                                      }
 990   4                              }
 991   3                              else
 992   3                              {
 993   4                                      u2Status = RSP_OPCODE_ERR;
 994   4                                      USART_TxRsp(u2Status,g_UART_COM_BUF[OFFSET_OP]);
 995   4                              }
 996   3                      }
 997   2                      else if(RSP_REV_TIMEOUT ==u2Status)
 998   2                      {       
 999   3                              u2Status        =RSP_REV_TIMEOUT;
1000   3                              /**********Ö±½Ó½øÈëÐÝÃß***********/
1001   3      //                      vLcd_All_Clear2();
1002   3                              Paper_All_Clear();
1003   3                              vScu_SetSysClk32K(); 
1004   3                              vScu_StandbyModeEn();
1005   3                      }
1006   2                      else if(RSP_CHK_FAIL ==u2Status)
1007   2                      {       
1008   3                              u2Status        =RSP_CHK_FAIL;
1009   3                              USART_TxRsp(u2Status,g_UART_COM_BUF[OFFSET_OP]);
1010   3                      }
1011   2                      else if(RSP_DATA_ERR == u2Status)
1012   2                      {
1013   3                              USART_TxRsp(u2Status,g_UART_COM_BUF[OFFSET_OP]);
1014   3                      }
1015   2      
1016   2              }
1017   1      }
1018          
1019          #if 0
              /********************************************************************
              Function name:       void vInputPin(void)
              Input parameters:
                  void  
              Return:
                  void
              Function:
                  Input Pin Code Process when OTP(been Actived) Power On      
              ********************************************************************/
              //ÊäÈëPIN ²Ù×÷
              void vOTP_InputPinProcess(void)
              {
                      UINT8 Key_Input=0xff;
                      UINT8 i=0;
                      UINT8 InputCnt = 0;     
                      UINT8 KBuff[PW_LEN];
                      UINT16 u2Cnt;
              
                      memset(KBuff, 0x00, PW_LEN);
                      memset(DispKeyPad, 0x00, SCREENLEN);
C51 COMPILER V9.01   OTPFRAME                                                              11/23/2016 11:58:15 PAGE 18  

                      //LCDÌáÊ¾ÓÃ»§ÊäÈëPIN
                      for(i = 0; i<PW_LEN; i++)DispKeyPad[i] = '-';
              #ifdef _FPGA_DEMO_EN_
                      vLcd_SetStopMode();                     
              #endif
              
                      if(u1LowPowerFlag == 1)
                      {
                              vLcd_String_Display2("LPkkkkkk", 8);
                              vScu_TbcIntEn();
                              vTbc_Int1HzEn();
                              gSecCount_10S=0;
                              while(gSecCount_10S < 2);
                              
                      }
                      vLcd_String_Clear2();
                                      
                      vLcd_String_Display2(DispKeyPad, PW_LEN);
              #ifdef _FPGA_DEMO_EN_  
                      vLcd_SetDisplayMode();          
              #endif
              
                  _TIMER_FLAG_=0;
                      vScu_TbcIntEn();
                      vTbc_Int1HzEn();
              
                      while(1)
                      {
                              vClrWdtCounter();
                              
                              Key_Input = ucGetKeyValue();    
                              //if(Key_Input>=0x30 && Key_Input<=0x3f)
                              //{     
                              switch(Key_Input)
                              {
                                      case KEY_0:
                                      case KEY_1:
                                      case KEY_2:
                                      case KEY_3:
                                      case KEY_4:
                                      case KEY_5:
                                      case KEY_6:
                                      case KEY_7:
                                      case KEY_8:
                                      case KEY_9:
                                          {
                                  _TIMER_FLAG_=0;
                                                      if(InputCnt < PW_LEN)
                                                      {
                                                              KBuff[InputCnt] = Key_Input;
                                                              DispKeyPad[InputCnt++] = '_';
              #ifdef _FPGA_DEMO_EN_
                                                              vLcd_SetStopMode();             
              #endif
                                                          //vLcd_Flag_Clear();
                                                              //vLcd_String_Clear();
              
                                                              //vLcd_Flag_Display(6,1);               //ÃÜÂë
                                                              //vLcd_Flag_Display(7,1);               //¿ª»ú
                                                              //vLcd_String_Display(DispKeyPad, PW_LEN);
                                                              vLcd_Bcd_Display2((2+InputCnt),14);             //'_'
              #ifdef _FPGA_DEMO_EN_  
C51 COMPILER V9.01   OTPFRAME                                                              11/23/2016 11:58:15 PAGE 19  

                                                              vLcd_SetDisplayMode();          
              #endif
                                                      }
                                                      break;
                                              }
                                      case KEY_DEL:                   //É¾³ý¼ü                             
                                              {
                                  _TIMER_FLAG_=0;
                                                      if(LongPressFlag)
                                                      {
                                                              LongPressFlag = 0;
                                                              memset(KBuff, 0x00, PW_LEN);
                                                              for(i = 0; i<PW_LEN; i++)DispKeyPad[i] = '-';
                                                              InputCnt = 0;
                                                              vLcd_String_Display2(DispKeyPad, PW_LEN);
                                                              break;
                                                      }
                                                      
                                                      if(InputCnt > 0)
                                                      {
                                                              InputCnt--;
                                                              DispKeyPad[InputCnt] = '-';
                                                              KBuff[InputCnt] = 0x00;
              #ifdef _FPGA_DEMO_EN_
                                                              vLcd_SetStopMode();             
              #endif
                                                          //vLcd_Flag_Clear();
                                                              //vLcd_String_Clear();
              
                                                              //vLcd_Flag_Display(6,1);               //ÃÜÂë
                                                              //vLcd_Flag_Display(7,1);               //¿ª»ú
                                                              //vLcd_String_Display(DispKeyPad, PW_LEN);
                                                              vLcd_Bcd_Display2((3+InputCnt),13);
              #ifdef _FPGA_DEMO_EN_  
                                                              vLcd_SetDisplayMode();          
              #endif
                                                      }
                                                      break;
                                              }
                                      case KEY_DOT:                   
                                      case KEY_LEFT:
                                      case KEY_RIGHT: 
                                          _TIMER_FLAG_=0;
                                      default:
                                              break;
                                }
              
                              u2Cnt = 0;
                              while(!(SCULCDSWEN&SCUPOWERIOSTS)&&(u2Cnt<2000))
                              {
                                      u2Cnt++ ;
                              }
                              
                              if((u2Cnt<2000)&&(u2Cnt>10))                            //Ç°Ãæ³¬Ê±¹Ø»ú£¬ºóÃæÈ¥¶¶¶¯
                              {
                                      _TIMER_FLAG_=0;
                                      if(InputCnt == PW_LEN)  
                                      {
                                              if(OTPSECU_OP_OK == CosOperation(OP_VERIFY_PASSWORD, KBuff, PW_LEN))
                                              {
                                                      if(g_ModfyPwFlag == 0)
                                                       {
C51 COMPILER V9.01   OTPFRAME                                                              11/23/2016 11:58:15 PAGE 20  

                                                              gUseCase = OTPSTATUS_SELECTMODE;
                                                       }
                                                       else
                                                       {
                                                              gUseCase = OTPSTATUS_PWSET;
                                                       }
                                                       //g_ModfyPwFlag = 0;
                                                       
              #ifdef _FPGA_DEMO_EN_
                                   vLcd_SetStopMode();                                                    
              #endif
                                                       //vLcd_Flag_Clear();
                                                       vLcd_String_Clear2();
                                                       //vLcd_Flag_Display(3,1);              //³É¹¦
                                                      // vLcd_Flag_Display(6,1);              //¿ª»ú
              #ifdef _FPGA_DEMO_EN_  
                                   vLcd_SetDisplayMode();             
              #endif
                                                      // vScu_TbcIntEn();
                                                      // vTbc_Int1HzEn();
                                                       //gSecCount_10S=0;
                                                       //while(gSecCount_10S < 2);
                                              }
                                              else
                                              {
                                                       //gPinErr_Count++;
                                                       //gSecCount_10S=0;
                                                       if(gPinErr_Count >= PWLOCK_LIMITED)
                                                       {
                                                              gPinErr_Time = Base_Time();
                                                              gUseCase = OTPSTATUS_UNLOCK;
                                                              //gPinErr_6TimeFlag = 1;
                                                       }
                                                       else
                                                       {
                                                              if(gsuperpw == 0)
                                                              {
                                                                      gUseCase = OTPSTATUS_PWVERIFY;
                                                              }
                                                              else
                                                              {
                                                                      gsuperpw = 0;
                                                              }
                                                       }
              #ifdef _FPGA_DEMO_EN_
                                   vLcd_SetStopMode();                                                    
              #endif
                                                       //vLcd_Flag_Clear();
                                                       //vLcd_String_Clear();
                                                       //vLcd_Flag_Display(2,1);              //´íÎó
                                                       //vLcd_Flag_Display(6,1);              //¿ª»ú
                                                      // vLcd_String_Clear2();
                                                      //vLcd_String_Display2("Error",5);
              
                                                      DispKeyPad[0] = 'E';
                                                      DispKeyPad[1] = 'r';
                                                      DispKeyPad[2] =  'r';
                                                      DispKeyPad[3] =  'o';
                                                      DispKeyPad[4] =  'r';
                                                      DispKeyPad[5] =  'k';
                                                      DispKeyPad[6] =  'k';
                                                       DispKeyPad[7] = gPinErr_Count + 0x30;
C51 COMPILER V9.01   OTPFRAME                                                              11/23/2016 11:58:15 PAGE 21  

                                                       
                                                       vLcd_String_Display2(DispKeyPad,8);
              #ifdef _FPGA_DEMO_EN_  
                                   vLcd_SetDisplayMode();             
              #endif
                                                       vScu_TbcIntEn();
                                                       vTbc_Int1HzEn();
                                                       gSecCount_10S=0;
                                                       while(gSecCount_10S < 2);
                                              }
                                              vScu_TbcIntDis();
                                              vTbc_Int1HzDis();
                                              return;
                                      }
                                      
                              }
                              else if(u2Cnt>=2000)
                              {
                                      /*******Ö±½Ó½øÈëÐÝÃß********/
                                      vLcd_All_Clear2();
                                      vScu_SetSysClk32K(); 
                                      vScu_StandbyModeEn();   
                              }
                              
                              if( (_TIMER_FLAG_ >= TIMEOUT_SEC)) 
                              {
                                      /**********Ö±½Ó½øÈëÐÝÃß***********/
                                      vLcd_All_Clear2();
                                      vScu_SetSysClk32K(); 
                                      vScu_StandbyModeEn(); 
                              }
              
                              #if(YJZX)
                               if(gFlag_1S>=2)
                               {
                                      gFlag_1S = 0;
                                      //vScu_PdrEn();
                                      vSec_FreqExcepDetectEn();
                                      vSec_LightDetectEn(0x03);
              
                                      vScu_SetSysClkOsc2M();
                                      if((vSec_TMPERDetect())||(gu1DetectErrFlag == 1))
                                      {
                                              gUseCase = OTPSTATUS_INVALID;
                                              return;
                                      }
              
                                      if(2 == ucPowerDetect())//µÍµçÑ¹
                                      {          
                                              gUseCase = OTPSTATUS_INVALID;
                                              return;
                                      }
                                      vScu_SetSysClk32K();
                                      //vAdcBgDis();
                                      
                                      //LDO TRIM µ½2.05V
                                      //ANALOGCTRLTRIMR1=0x00;
                                      //PDR ¹Ø±ÕµÍµçÑ¹¼ì²â
                                      //vScu_PdrDis();
                      
                                      vAdcFDDis();
                                      vAdcLDDis();
C51 COMPILER V9.01   OTPFRAME                                                              11/23/2016 11:58:15 PAGE 22  

                                      //vScu_AnactrlClkDis();  
                                      //vScu_Osc2MDis();
                               }
                               #endif
                      }
                      vScu_TbcIntDis();
                      vTbc_Int1HzDis();
              }
              /********************************************************************
              Function name:       void vOTP_SetPinProcess(void)
              Input parameters:
                  void  
              Return:
                  void
              Function:
                  Setting Pin Code Process when The OTP Power On The First Time       
              ********************************************************************/
              //ÉèÖÃPIN ²Ù×÷
              void vOTP_SetPinProcess(void)
              {
                      
                      UINT8 Key_Input=0xff;
                      UINT8 i=0;
                      UINT8 KBuff[SCREENLEN];
                      UINT8 bSecondInput=0;
                      UINT8 InputCnt;
                      UINT8 Pin_Save[16];
                      UINT16 u2Cnt;
              
                      InputCnt = 0;
                      
                      for(i = 0; i<PW_SM_LEN; i++)Pin_Save[i] = 0xff;
                      
                      DispKeyPad[0] = 'P';
                      DispKeyPad[1] = '1';
                      //DispKeyPad[1] += 0x80;
                      //DispKeyPad[2] = '1';
                      
                      //for(i = 3; i<(SCREENLEN - PW_LEN); i++)DispKeyPad[i] = 'k';
              
                      for(i = (SCREENLEN - PW_LEN); i<SCREENLEN; i++)DispKeyPad[i] = '-';
                      
                      
              #ifdef _FPGA_DEMO_EN_
                      vLcd_SetStopMode();             
              #endif
                  //vLcd_Flag_Clear();
                      
              
                      //vLcd_Flag_Display(7,1);               //ÃÜÂë
                      //vLcd_Flag_Display(6,1);               //¿ª»ú
                      //vLcd_Flag_Display(5,1);               //ÐÂ
                      if(u1LowPowerFlag == 1)
                      {
                              vLcd_String_Display2("LPkkkkkk", 8);
                              vScu_TbcIntEn();
                              vTbc_Int1HzEn();
                              gSecCount_10S=0;
                              while(gSecCount_10S < 2);
                              
                      }
                      vLcd_String_Clear2();
C51 COMPILER V9.01   OTPFRAME                                                              11/23/2016 11:58:15 PAGE 23  

                      vLcd_String_Display2(DispKeyPad, SCREENLEN);
              #ifdef _FPGA_DEMO_EN_  
                      vLcd_SetDisplayMode();          
              #endif
              
                  _TIMER_FLAG_=0;
                      vScu_TbcIntEn();
                      vTbc_Int1HzEn();
                      while(1)
                      {
              
                              vClrWdtCounter();
                              Key_Input = ucGetKeyValue();    
                              //if(Key_Input>=0x30 && Key_Input<=0x3F)
                              //{
                                      switch(Key_Input)
                                      {
                                              case KEY_0:
                                              case KEY_1:
                                              case KEY_2:
                                              case KEY_3:
                                              case KEY_4:
                                              case KEY_5:
                                              case KEY_6:
                                              case KEY_7:
                                              case KEY_8:
                                              case KEY_9:
                                                      {
                                      _TIMER_FLAG_=0;
                                                              if(InputCnt < PW_LEN)
                                                              {
                                                                      if(bSecondInput == 0)                           //µÚÒ»´ÎÊäÈë
                                                                      {
                                                                              KBuff[InputCnt] =  Key_Input;
                                                                      }
                                                                      else
                                                                      {
                                                                              Pin_Save[InputCnt] =  Key_Input;
                                                                      }
                                                                      DispKeyPad[SCREENLEN - PW_LEN + InputCnt] = '_';
                                                                      InputCnt++;
              #ifdef _FPGA_DEMO_EN_
                                                                      vLcd_SetStopMode();             
              #endif
                                                                  //vLcd_Flag_Clear();
                                                                      //vLcd_String_Clear();
              
                                                                      //vLcd_Flag_Display(7,1);               //ÃÜÂë
                                                                      //vLcd_Flag_Display(6,1);               //¿ª»ú
                                                                      //vLcd_Flag_Display(5,1);               //ÐÂ
                                                                      ///vLcd_String_Display(DispKeyPad, SCREENLEN);
                                                                      vLcd_Bcd_Display2((InputCnt+2),14);             //'_'
              #ifdef _FPGA_DEMO_EN_  
                                                                      vLcd_SetDisplayMode();          
              #endif
                                                              }
                                                              break;
                                                      }
                                                       break;
                                              case KEY_DEL:   //ÇåÆÁÄ»
                                                      {
                                      _TIMER_FLAG_=0;
C51 COMPILER V9.01   OTPFRAME                                                              11/23/2016 11:58:15 PAGE 24  

                                                              if(LongPressFlag)
                                                              {
                                                                      InputCnt = 0;
                                                                      LongPressFlag = 0;
                                                                      if(bSecondInput == 0)
                                                                      {       
                                                                              memset(KBuff, 0x00, PW_LEN);                                                            
                                                                      }
                                                                      else
                                                                      {
                                                                              memset(Pin_Save, 0x00, PW_LEN);
                                                                      }
                                                                      for(i = (SCREENLEN - PW_LEN); i<SCREENLEN; i++)DispKeyPad[i] = '-';
                                                                      vLcd_String_Display2(DispKeyPad, SCREENLEN);
                                                                      break;
                                                              }
                                                              
                                                              if(InputCnt > 0)
                                                              {
                                                                      InputCnt--;
                                                                      if(bSecondInput == 0)                           //µÚÒ»´ÎÊäÈë
                                                                      {
                                                                              KBuff[InputCnt] =  0xff;
                                                                      }
                                                                      else
                                                                      {
                                                                              Pin_Save[InputCnt] =  0xff;
                                                                      }
                                                                      DispKeyPad[SCREENLEN - PW_LEN + InputCnt] = '-';
              #ifdef _FPGA_DEMO_EN_
                                                                      vLcd_SetStopMode();             
              #endif
                                                                  //vLcd_Flag_Clear();
                                                                      //vLcd_String_Clear();
              
                                                                      //vLcd_Flag_Display(7,1);               //ÃÜÂë
                                                                      //vLcd_Flag_Display(6,1);               //¿ª»ú
                                                                      //vLcd_Flag_Display(5,1);               //ÐÂ
                                                                      //vLcd_String_Display(DispKeyPad, SCREENLEN);
                                                                      vLcd_Bcd_Display2((InputCnt+3),13);
              #ifdef _FPGA_DEMO_EN_  
                                                                      vLcd_SetDisplayMode();          
              #endif
                                                              }
              
                                                      }
                                                       break;
                                              case KEY_LEFT:
                                              case KEY_RIGHT:
                                              case KEY_DOT:
                                                  _TIMER_FLAG_=0;
                                                      break;
                                              default:
                                                      break;
                                                      
                                       }
              
                              u2Cnt = 0;
                              while(!(SCULCDSWEN&SCUPOWERIOSTS)&&(u2Cnt<2000))
                              {
                                      u2Cnt++ ;
                              }
C51 COMPILER V9.01   OTPFRAME                                                              11/23/2016 11:58:15 PAGE 25  

                              
                              if((u2Cnt<2000)&&(u2Cnt>10))                            //Ç°Ãæ³¬Ê±¹Ø»ú£¬ºóÃæÈ¥¶¶¶¯
                              {
                                      _TIMER_FLAG_=0;
                                      if(InputCnt == PW_LEN)
                                      {
                                              if(bSecondInput == 0)
                                              {
                                                      //gSecCount_10S=0;
                                                      InputCnt = 0;
                                                      bSecondInput = 1;
              #ifdef _FPGA_DEMO_EN_
                                                      vLcd_SetStopMode();             
              #endif
                                                      
              #ifdef _FPGA_DEMO_EN_  
                                                      vLcd_SetDisplayMode();          
              #endif
                                                      
                                                      DispKeyPad[0] = 'P';
                                                      DispKeyPad[1] = '2';
              
                                                      for(i = (SCREENLEN - PW_LEN); i<SCREENLEN; i++)DispKeyPad[i] = '-';
                                              }
                                              else
                                              {
                                                      if(0 == memcmp(Pin_Save, KBuff, PW_LEN))                //µÚÒ»´ÎÓëµÚ¶þ´ÎÏàµÈ
                                                      {
                                                              if(OTPSECU_OP_OK== CosOperation(OP_SET_PASSWORD, Pin_Save, PW_LEN))
                                                              {
              
                                                                      gUseCase = OTPSTATUS_PWVERIFY;
                                                              
                                                                      memset(Pin_Save,0x00,16);
                                                                      memset(KBuff,0x00,SCREENLEN);
                                                                      
              #ifdef _FPGA_DEMO_EN_
                                                                      vLcd_SetStopMode();             
              #endif
                                                                      vLcd_String_Clear2();
              
              #ifdef _FPGA_DEMO_EN_  
                                                                      vLcd_SetDisplayMode();          
              #endif
                                                                      return;
                                                              }
                                                              else
                                                              {
              
                                                                      memset(Pin_Save,0x00,16);
                                                                      memset(KBuff,0x00,SCREENLEN);
                                                                      
                                                                      #ifdef _FPGA_DEMO_EN_
                                                                      vLcd_SetStopMode();             
                                                                      #endif
                                                                      vLcd_String_Clear2();
                                                                      vLcd_String_Display2("Error",5);
                                                                      
              #ifdef _FPGA_DEMO_EN_  
                                                                      vLcd_SetDisplayMode();          
              #endif
                                                                      vScu_TbcIntEn();
C51 COMPILER V9.01   OTPFRAME                                                              11/23/2016 11:58:15 PAGE 26  

                                                                      vTbc_Int1HzEn();
                                                                      gSecCount_10S=0;
                                                                      while(gSecCount_10S < 2);
                                                                      vScu_TbcIntDis();
                                                                      vTbc_Int1HzDis();
                                                                      return;
                                                              }
                                                      }
                                                      else
                                                      {
                                                              //gSecCount_10S=0;
              #ifdef _FPGA_DEMO_EN_
                                                              vLcd_SetStopMode();             
              #endif
                                                              vLcd_String_Clear2();
                                                              vLcd_String_Display2("Error",5);
              #ifdef _FPGA_DEMO_EN_  
                                                              vLcd_SetDisplayMode();          
              #endif
                                                              vScu_TbcIntEn();
                                                              vTbc_Int1HzEn();
                                                              gSecCount_10S=0;
                                                              while(gSecCount_10S < 2);
                                                              vScu_TbcIntDis();
                                                              vTbc_Int1HzDis();
                                                              return;
                                                      }
                                              }
              #ifdef _FPGA_DEMO_EN_
                                              vLcd_SetStopMode();             
              #endif
                                              vLcd_String_Display2(DispKeyPad, SCREENLEN);
              #ifdef _FPGA_DEMO_EN_  
                                              vLcd_SetDisplayMode();          
              #endif
                                      }
                                                      
                                      
                              }
                              else if(u2Cnt>=2000)
                              {
                                      /*******Ö±½Ó½øÈëÐÝÃß********/
                                      vLcd_All_Clear2();
                                      vScu_SetSysClk32K(); 
                                      vScu_StandbyModeEn();   
                              }
                                      
                              if( (_TIMER_FLAG_ >= TIMEOUT_SEC)) 
                              {
                                      /**********Ö±½Ó½øÈëÐÝÃß***********/
                                      vLcd_All_Clear2();
                                      vScu_SetSysClk32K(); 
                                      vScu_StandbyModeEn(); 
                              }
                                                              
                              #if(YJZX)
                               if(gFlag_1S>=2)
                               {
                                      gFlag_1S = 0;
                                      //vScu_PdrEn();
                                      vSec_FreqExcepDetectEn();
                                      vSec_LightDetectEn(0x03);
C51 COMPILER V9.01   OTPFRAME                                                              11/23/2016 11:58:15 PAGE 27  

              
                                      vScu_SetSysClkOsc2M();
                                      if((vSec_TMPERDetect())||(gu1DetectErrFlag == 1))
                                      {
                                              gUseCase = OTPSTATUS_INVALID;
                                              return;
                                      }
              
                                      if(2 == ucPowerDetect())//µÍµçÑ¹
                                      {          
                                              gUseCase = OTPSTATUS_INVALID;
                                              return;
                                      }
                                      vScu_SetSysClk32K();
                                      //vAdcBgDis();
                                      
                                      //LDO TRIM µ½2.05V
                                      //ANALOGCTRLTRIMR1=0x00;
                                      //PDR ¹Ø±ÕµÍµçÑ¹¼ì²â
                                      //vScu_PdrDis();
                      
                                      vAdcFDDis();
                                      vAdcLDDis();
                                      //vScu_AnactrlClkDis();  
                                      //vScu_Osc2MDis();
                               }
                               #endif
                       }
                       vScu_TbcIntDis();
                       vTbc_Int1HzDis();
              }
              /********************************************************************
              Function name:       void vOTP_UnlockPinProcess(void)
              Input parameters:
                  void  
              Return:
                  void
              Function:
                  Unlock The OTP in Manual Operation when The OTP Been Locked         
              ********************************************************************/
              //½â³ýËø¶¨²Ù×÷
              void vOTP_UnlockPinProcess(void)
              {
                      UINT8 Key_Input=15,i=0;
                      //i = 0;
                      UINT8 u1Buffer[CHAL_LEN];
                      UINT8 InputCnt = 0;
                      UINT16 u2Cnt;
              
                      vClrWdtCounter();
                      #ifdef _FPGA_DEMO_EN_
                      vLcd_SetStopMode();             
              #endif
                      vLcd_String_Clear2();
                      
                      vLcd_String_Display2("LocKkkkk", 8);
              #ifdef _FPGA_DEMO_EN_  
                      vLcd_SetDisplayMode();          
              #endif
              
                      vScu_TbcIntEn();
                      vTbc_Int1HzEn();
C51 COMPILER V9.01   OTPFRAME                                                              11/23/2016 11:58:15 PAGE 28  

                      gSecCount_10S=0;
                      while(gSecCount_10S < 2);
                      
                      vScu_TbcIntDis();
                      vTbc_Int1HzDis();
                      
                      if( OTPSECU_OP_OK == CosOperation(OP_UNLOCK_CODE, u1Buffer,InputCnt))
                      {
                              for(i=0; i<CHAL_LEN; i++)DispKeyPad[i] = u1Buffer[CHAL_LEN - i - 1];            //u1Buffer[i];  ÏÔÊ¾Õý·´²»Ò»Ñù
                      }
                      
              #ifdef _FPGA_DEMO_EN_
                      vLcd_SetStopMode();             
              #endif
                      vLcd_String_Clear2();
                      vLcd_String_Display2(DispKeyPad, CHAL_LEN);
              #ifdef _FPGA_DEMO_EN_  
                      vLcd_SetDisplayMode();          
              #endif
                      _TIMER_FLAG_=0;
                      vScu_TbcIntEn();
                      vTbc_Int1HzEn();
                      while(1)
                      {
                              vClrWdtCounter();
                              
                              Key_Input = ucGetKeyValue();    
                              if(Key_Input>=0x30 && Key_Input<=0x3f)
                              {
                                      break;
                              }
              
                              if(_TIMER_FLAG_>=TIMEOUT_SEC)
                              {       
                                      /**********Ö±½Ó½øÈëÐÝÃß***********/
                                      vLcd_All_Clear2();
                                      vScu_SetSysClk32K(); 
                                      vScu_StandbyModeEn(); 
                              }
              
                              u2Cnt = 0;
                              while(!(SCULCDSWEN&SCUPOWERIOSTS)&&(u2Cnt<2000))
                              {
                                      u2Cnt++ ;
                              }
                              
                              if((u2Cnt<2000)&&(u2Cnt>10))                            //Ç°Ãæ³¬Ê±¹Ø»ú£¬ºóÃæÈ¥¶¶¶¯
                              {
                                      break;
                                      
                              }
                              else if(u2Cnt>=2000)
                              {
                                      /*******Ö±½Ó½øÈëÐÝÃß********/
                                      vLcd_All_Clear2();
                                      vScu_SetSysClk32K(); 
                                      vScu_StandbyModeEn();   
                              }
              
                              #if(YJZX)
                               if(gFlag_1S>=2)
                               {
C51 COMPILER V9.01   OTPFRAME                                                              11/23/2016 11:58:15 PAGE 29  

                                      gFlag_1S = 0;
                                      //vScu_PdrEn();
                                      vSec_FreqExcepDetectEn();
                                      vSec_LightDetectEn(0x03);
              
                                      vScu_SetSysClkOsc2M();
                                      if((vSec_TMPERDetect())||(gu1DetectErrFlag == 1))
                                      {
                                              gUseCase = OTPSTATUS_INVALID;
                                              return;
                                      }
              
                                      if(2 == ucPowerDetect())//µÍµçÑ¹
                                      {          
                                              gUseCase = OTPSTATUS_INVALID;
                                              return;
                                      }
                                      vScu_SetSysClk32K();
                                      //vAdcBgDis();
                                      
                                      //LDO TRIM µ½2.05V
                                      //ANALOGCTRLTRIMR1=0x00;
                                      //PDR ¹Ø±ÕµÍµçÑ¹¼ì²â
                                      //vScu_PdrDis();
                      
                                      vAdcFDDis();
                                      vAdcLDDis();
                                      //vScu_AnactrlClkDis();  
                                      //vScu_Osc2MDis();
                               }
                               #endif
                      }
              
                      for(i=0; i<CHAL_LEN; i++)DispKeyPad[i] = '-';
              #ifdef _FPGA_DEMO_EN_
                      vLcd_SetStopMode();             
              #endif
                  //vLcd_Flag_Clear();
                      //vLcd_String_Clear();
                      
                      //vLcd_Flag_Display(8,1);                       //Ëø¶¨
                      //vLcd_Flag_Display(7,1);                               //mi ma
                      vLcd_String_Display2(DispKeyPad, CHAL_LEN);
              #ifdef _FPGA_DEMO_EN_  
                      vLcd_SetDisplayMode();          
              #endif
                  _TIMER_FLAG_=0;
                      vScu_TbcIntEn();
                      vTbc_Int1HzEn();
                      while(1)
                      {
                              vClrWdtCounter();
                      
                              Key_Input = ucGetKeyValue();    
                              //if(Key_Input>=0x30 && Key_Input<=0x3f)
                              //{
                                      //Èç¹ûÊÇÕý³£µÄÊý¾Ý£¬´æÈë½ÓÊÜÊý×é 
                                      //Èç¹ûÒÆ¶¯ÁË¹â±êÎ»ÖÃ£¬ÔòÐÞ¸Ä¹â±êÎ»ÖÃµÄÊý¾Ý
                              switch(Key_Input)
                              {
                                      case KEY_0:
                                      case KEY_1:
C51 COMPILER V9.01   OTPFRAME                                                              11/23/2016 11:58:15 PAGE 30  

                                      case KEY_2:
                                      case KEY_3:
                                      case KEY_4:
                                      case KEY_5:
                                      case KEY_6:
                                      case KEY_7:
                                      case KEY_8:
                                      case KEY_9:
                                      {
                              _TIMER_FLAG_=0;
                                              if(InputCnt < CHAL_LEN)
                                              {
                                                      DispKeyPad[InputCnt++] = Key_Input;
              #ifdef _FPGA_DEMO_EN_
                                                      vLcd_SetStopMode();             
              #endif
                                                  //vLcd_Flag_Clear();
                                                      //vLcd_String_Clear();
                                                      
                                                      //vLcd_Flag_Display(8,1);                       //Ëø¶¨
                                                      //vLcd_String_Display(DispKeyPad, CHAL_LEN);
                                                      vLcd_Bcd_Display2((InputCnt),(Key_Input - 0x30));               //(CHAL_LEN-InputCnt)
              #ifdef _FPGA_DEMO_EN_  
                                                      vLcd_SetDisplayMode();          
              #endif                          
                                              }
                                              break;  
                                      }
                                      case KEY_DEL:
                                              {
                                  _TIMER_FLAG_=0;
                                                      if(LongPressFlag)
                                                      {
                                                              LongPressFlag = 0;
                                                              for(i=0; i<CHAL_LEN; i++)DispKeyPad[i] = '-';
                                                              InputCnt = 0;
                                                              //vLcd_String_Clear();
                                                              vLcd_String_Display2(DispKeyPad, CHAL_LEN);
                                                              break;
                                                      }
              
                                                      if(InputCnt == 0)
                                                      {
                                                              return;
                                                      }
                                                      
                                                      if(InputCnt > 0)
                                                      {
                                                              InputCnt--;
                                                              DispKeyPad[InputCnt] = '-';
              #ifdef _FPGA_DEMO_EN_
                                                      vLcd_SetStopMode();             
              #endif
                                                 // vLcd_Flag_Clear();
                                                      //vLcd_String_Clear();
                                                      
                                                      //vLcd_Flag_Display(8,1);                       //Ëø¶¨
                                                      //vLcd_String_Display(DispKeyPad, CHAL_LEN);
                                                      vLcd_Bcd_Display2(InputCnt+1,13);               //(CHAL_LEN-InputCnt-1)
              #ifdef _FPGA_DEMO_EN_  
                                                      vLcd_SetDisplayMode();          
              #endif
C51 COMPILER V9.01   OTPFRAME                                                              11/23/2016 11:58:15 PAGE 31  

                                                      }
                                                      break;
                                              }
                                      case KEY_DOT:                   //ÓÒÒÆ¶¯¹â±ê
                                      case KEY_LEFT:
                                      case KEY_RIGHT:
                                          _TIMER_FLAG_=0;
                                      default :
                                               break;
                              }
              
                              u2Cnt = 0;
                              while(!(SCULCDSWEN&SCUPOWERIOSTS)&&(u2Cnt<2000))
                              {
                                      u2Cnt++ ;
                              }
                              
                              if((u2Cnt<2000)&&(u2Cnt>10))                            //Ç°Ãæ³¬Ê±¹Ø»ú£¬ºóÃæÈ¥¶¶¶¯
                              {
                                      _TIMER_FLAG_=0;
                                      if(InputCnt == CHAL_LEN)
                                      {
                                              for(i=0; i<CHAL_LEN; i++)u1Buffer[i] = DispKeyPad[i];
                                              if ( OTPSECU_OP_OK == CosOperation(OP_UNLOCK_TOKEN, u1Buffer,InputCnt))
                                              {
                                                      gUseCase = OTPSTATUS_PWSET;
              
                                                      #ifdef _FPGA_DEMO_EN_
                                                      vLcd_SetStopMode();             
              #endif
                                                  //vLcd_Flag_Clear();
                                                      vLcd_String_Clear2();
              
                                                      //vLcd_Flag_Display(3,1);               //
              #ifdef _FPGA_DEMO_EN_  
                                                      vLcd_SetDisplayMode();          
              #endif
                                                      
                                                      return;
                                              }
                                              else
                                              {
              #ifdef _FPGA_DEMO_EN_
                                                      vLcd_SetStopMode();             
              #endif
                                                      vLcd_String_Clear2();
                                                      vLcd_String_Display2("Error",5);
              #ifdef _FPGA_DEMO_EN_  
                                                      vLcd_SetDisplayMode();          
              #endif
                                                      if(gUnlockPinErr_Count <6)
                                                      {
                                                              gUseCase = OTPSTATUS_UNLOCK;
                                                      }
                                                      else
                                                      {
                                                              gUseCase = OTPSTATUS_INVALID;
                                                              return;
                                                      }
                                                      
                                                      vScu_TbcIntEn();
                                                      vTbc_Int1HzEn();
C51 COMPILER V9.01   OTPFRAME                                                              11/23/2016 11:58:15 PAGE 32  

                                                      gSecCount_10S=0;
                                                      while(gSecCount_10S < 60)
                                                      {
                                                              vClrWdtCounter();
                                                      }
                                                      
                                                      vScu_TbcIntDis();
                                                      vTbc_Int1HzDis();
                                                      return;
                                              }
                                      }
                                      
                              }
                              else if(u2Cnt>=2000)
                              {
                                      /*******Ö±½Ó½øÈëÐÝÃß********/
                                      vLcd_All_Clear2();
                                      vScu_SetSysClk32K(); 
                                      vScu_StandbyModeEn();   
                              }
                              
                              if( (_TIMER_FLAG_ >= TIMEOUT_SEC)) 
                              {
                                      /**********Ö±½Ó½øÈëÐÝÃß***********/
                                      vLcd_All_Clear2();
                                      vScu_SetSysClk32K(); 
                                      vScu_StandbyModeEn(); 
                              }               
                              
                              #if(YJZX)
                               if(gFlag_1S>=2)
                               {
                                      gFlag_1S = 0;
                                      //vScu_PdrEn();
                                      vSec_FreqExcepDetectEn();
                                      vSec_LightDetectEn(0x03);
              
                                      vScu_SetSysClkOsc2M();
                                      if((vSec_TMPERDetect())||(gu1DetectErrFlag == 1))
                                      {
                                              gUseCase = OTPSTATUS_INVALID;
                                              return;
                                      }
              
                                      if(2 == ucPowerDetect())//µÍµçÑ¹
                                      {          
                                              gUseCase = OTPSTATUS_INVALID;
                                              return;
                                      }
                                      vScu_SetSysClk32K();
                                      //vAdcBgDis();
                                      
                                      //LDO TRIM µ½2.05V
                                      //ANALOGCTRLTRIMR1=0x00;
                                      //PDR ¹Ø±ÕµÍµçÑ¹¼ì²â
                                      //vScu_PdrDis();
                      
                                      vAdcFDDis();
                                      vAdcLDDis();
                                      //vScu_AnactrlClkDis();  
                                      //vScu_Osc2MDis();
                               }
C51 COMPILER V9.01   OTPFRAME                                                              11/23/2016 11:58:15 PAGE 33  

                               #endif
                               
                      }
                      vScu_TbcIntDis();
              
              }
              
              /********************************************************************
              Function name:       void vOtp_RunModeProcesss(void)
              Input parameters:
                  void  
              Return:
                  void
              Function:
                  OTP RUN MODE PROCESS,IT CAN GENERATE THE DYNAMIC  PASSWORD CODE IN THIS STATUS      
              ********************************************************************/
              //²úÉúÌôÕ½Âë²¢¼ÆËãÃÜÂëPINÃÜÂë
              void vOTP_RunModeProcess(void)
              {
                      UINT8 InputCnt = 0;
                      UINT8 Key_Input=0xff;
                      UINT16 u2Cnt;
                      //UINT8 *u1Buffer;
                      //gUnlockPinErr_Count = 0;
              
                      memset(DispKeyPad, 0x00, SCREENLEN);
                      DispKeyPad[0] = '-';
              #ifdef _FPGA_DEMO_EN_
                      vLcd_SetStopMode();             
              #endif
                  //vLcd_Flag_Clear();
                      vLcd_String_Clear2();
              
                      //vLcd_Flag_Display(4,1);                       //ÐÅÏ¢
                      //if(u1LowPowerFlag == 1)
                      //{
                      //      vLcd_Flag_Display(10,1);//µÍµç³ØµçÁ¿±êÖ¾
                      //}
                      vLcd_String_Display2(DispKeyPad, 1);
              #ifdef _FPGA_DEMO_EN_  
                      vLcd_SetDisplayMode();          
              #endif
                   _TIMER_FLAG_=0;
                      vScu_TbcIntEn();
                      vTbc_Int1HzEn();
              
                      //ÏµÍ³´¦ÓÚÕý³£Ä£Ê½
                      while(1)
                      {
                              vClrWdtCounter();
                              
                              Key_Input = ucGetKeyValue();    
                              //if(Key_Input>=0x30 && Key_Input<=0x3f)
                              //{
                                      //Èç¹ûÒÆ¶¯ÁË¹â±êÎ»ÖÃ£¬ÔòÐÞ¸Ä¹â±êÎ»ÖÃµÄÊý¾Ý
                                      switch(Key_Input)
                                      {
                                              case KEY_0:
                                              case KEY_1:
                                              case KEY_2:
                                              case KEY_3:
                                              case KEY_4:
C51 COMPILER V9.01   OTPFRAME                                                              11/23/2016 11:58:15 PAGE 34  

                                              case KEY_5:
                                              case KEY_6:
                                              case KEY_7:
                                              case KEY_8:
                                              case KEY_9:
                                                       {
                                      _TIMER_FLAG_=0;
                                                              DispKeyPad[0] = Key_Input;
              #ifdef _FPGA_DEMO_EN_
                                                              vLcd_SetStopMode();             
              #endif
                                                              //vLcd_String_Clear();
              
                                                              //vLcd_String_Display(DispKeyPad, 1);
                                                              vLcd_Bcd_Display2(8,Key_Input - 0x30);
              #ifdef _FPGA_DEMO_EN_  
                                                              vLcd_SetDisplayMode();          
              #endif
                                                              gUseCase = OTPSTATUS_PAY;               
              
                                                              vScu_TbcIntDis();
                                                              vTbc_Int1HzDis();
                                                              
                                                              return;
                                                       }
                                              #if 1
                                              case KEY_DEL:    
                                                      {       
                                                              _TIMER_FLAG_=0;
                                                              if(LongPressFlag)
                                                              {
                                                                      LongPressFlag = 0;
                                                                      g_ModfyPwFlag = 1;
                                                                      gUseCase = OTPSTATUS_PWVERIFY;
                                                                      vScu_TbcIntDis();
                                                                      vTbc_Int1HzDis();
                                                                      return;
                                                              }
                                                      }
                                                      break;
                                                      #endif
                                              default:
                                                      break;
                                       }      
              
                              u2Cnt = 0;
                              while(!(SCULCDSWEN&SCUPOWERIOSTS)&&(u2Cnt<2000))
                              {
                                      u2Cnt++ ;
                              }
                              
                              if((u2Cnt<2000)&&(u2Cnt>10))                            //Ç°Ãæ³¬Ê±¹Ø»ú£¬ºóÃæÈ¥¶¶¶¯
                              {
                                      _TIMER_FLAG_=0;
                                      if((InputCnt == 0))
                                      {
                                              gUseCase = OTPSTATUS_TIMETOKEN; 
                                              vScu_TbcIntDis();
                                              vTbc_Int1HzDis();
                                              return;
                                      }
                                      
C51 COMPILER V9.01   OTPFRAME                                                              11/23/2016 11:58:15 PAGE 35  

                              }
                              else if(u2Cnt>=2000)
                              {
                                      /*******Ö±½Ó½øÈëÐÝÃß********/
                                      vLcd_All_Clear2();
                                      vScu_SetSysClk32K(); 
                                      vScu_StandbyModeEn();   
                              }
                              if( (_TIMER_FLAG_ >= TIMEOUT_SEC)) 
                              {
                                      /**********Ö±½Ó½øÈëÐÝÃß***********/
                                      vLcd_All_Clear2();
                                      vScu_SetSysClk32K(); 
                                      vScu_StandbyModeEn(); 
                              }                                
                                      
                              #if(YJZX)
                               if(gFlag_1S>=2)
                               {
                                      gFlag_1S = 0;
                                      //vScu_PdrEn();
                                      vSec_FreqExcepDetectEn();
                                      vSec_LightDetectEn(0x03);
              
                                      vScu_SetSysClkOsc2M();
                                      if((vSec_TMPERDetect())||(gu1DetectErrFlag == 1))
                                      {
                                              gUseCase = OTPSTATUS_INVALID;
                                              return;
                                      }
              
                                      if(2 == ucPowerDetect())//µÍµçÑ¹
                                      {          
                                              gUseCase = OTPSTATUS_INVALID;
                                              return;
                                      }
                                      vScu_SetSysClk32K();
                                      //vAdcBgDis();
                                      
                                      //LDO TRIM µ½2.05V
                                      //ANALOGCTRLTRIMR1=0x00;
                                      //PDR ¹Ø±ÕµÍµçÑ¹¼ì²â
                                      //vScu_PdrDis();
                      
                                      vAdcFDDis();
                                      vAdcLDDis();
                                      //vScu_AnactrlClkDis();  
                                      //vScu_Osc2MDis();
                               }
                               #endif
                      }
                      vScu_TbcIntDis();
              
              }
              #endif
2149          
2150          void VOTP_TimeToken(void)                               //ÉÁ¶¯µãÒªÏÔÊ¾Âð?
2151          {
2152   1              UINT8 i;
2153   1              UINT8 u1Buffer[8];
2154   1              //UINT8 Key_Input;
2155   1              u4 u4Minite;
C51 COMPILER V9.01   OTPFRAME                                                              11/23/2016 11:58:15 PAGE 36  

2156   1              UINT8 u1TenSecond_Conuter;
2157   1              //u1 u1CHeckStatus;
2158   1              UINT16 u2Cnt;
2159   1              //UINT16 u2time;
2160   1              UINT8 u1Time_Dispaly[6];
2161   1              UINT8 u1Time_BCD[6];
2162   1              UINT8 u1Time_STR[12];
2163   1              UINT8 j;
2164   1      
2165   1              if(g_ModfyPwFlag==1)
2166   1              {               
2167   2                      memset(u1Time_Dispaly,0,6);
2168   2                      memset(u1Time_BCD,0,6);
2169   2                      memset(u1Time_STR,0,12);
2170   2                      
2171   2                      vScu_TbcIntEn();
2172   2                      vTbc_Int1HzEn();                
2173   2                      gSecCount_10S = 0;
2174   2                       
2175   2                      while(gSecCount_10S < 5)
2176   2                      {
2177   3                                      vScu_SetSysClkOsc2M();
2178   3                                      GETOTPTime(&u1Time_Dispaly);
2179   3                              
2180   3                                      for(j=0; j<6; j++)
2181   3                                      {
2182   4                                                      u1Time_BCD[j] = DectoBCD(u1Time_Dispaly[j]); 
2183   4                                      }
2184   3                                      HexToStr(u1Time_STR,u1Time_BCD,6);      
2185   3      
2186   3                                      memcpy(u1Buffer,u1Time_STR+8,4);
2187   3                                      memcpy(u1Buffer+4,g_u1SN+6,4);
2188   3      //                              vLcd_String_Display2(u1Buffer,8);       
2189   3                                      vPaper_String_Display(u1Buffer,8);
2190   3                                      memset(u1Buffer,0x00,8);
2191   3                      }
2192   2                      
2193   2                      vScu_TbcIntDis();
2194   2                      vTbc_Int1HzDis();       
2195   2                      vScu_PowerIo_ResultInterrupt();
2196   2              }
2197   1              
2198   1              u4Minite = (gTimer_Count_Base + Base_Time())/TIMESTEP;
2199   1              #if(GMT)
                      u2time = 8*60*60/TIMESTEP;
                      u4Minite -= u2time;
                      #endif
2203   1              
2204   1              if(u4Minite != gToken_Time2)
2205   1              {
2206   2                      vScu_PowerIo_ResultInterrupt();
2207   2                      if(OTPSECU_OP_OK== CosOperation(OP_TIME_TOKEN, u1Buffer))
2208   2                      {
2209   3                              for(i=0; i<TIME_TOKEN_LEN; i++)gToken_Save[i] = u1Buffer[i];    
2210   3                              gToken_Time2 = gToken_Time1;
2211   3      
2212   3      //                      vLcd_String_Display2(u1Buffer, TIME_TOKEN_LEN);
2213   3                              vPaper_String_Display(u1Buffer,TIME_TOKEN_LEN);
2214   3                              
2215   3                              if(g_ModfyPwFlag==2)
2216   3                              {
2217   4                                      vScu_PowerIo_ResultStandby();
C51 COMPILER V9.01   OTPFRAME                                                              11/23/2016 11:58:15 PAGE 37  

2218   4                              }
2219   3                      }
2220   2                      else
2221   2                      {
2222   3      //                      vLcd_String_Display2("Error",5);
2223   3                              vPaper_String_Display("55555555",8);
2224   3                              
2225   3                              vScu_TbcIntEn();
2226   3                              vTbc_Int1HzEn();
2227   3                              gSecCount_10S=0;
2228   3                              while(gSecCount_10S < 2);
2229   3                              vScu_TbcIntDis();
2230   3                              vTbc_Int1HzDis();
2231   3                              //gUseCase = OTPSTATUS_SELECTMODE;
2232   3                              return;
2233   3                      }
2234   2              }
2235   1              else
2236   1              {
2237   2      //              vLcd_String_Display2(gToken_Save, TIME_TOKEN_LEN);
2238   2                        vPaper_String_Display(gToken_Save,TIME_TOKEN_LEN);
2239   2              }
2240   1      
2241   1              
2242   1              _TIMER_FLAG_ = 0;
2243   1              vScu_TbcIntEn();
2244   1              vTbc_Int1HzEn();        
2245   1              
2246   1              vScu_TbcWakeupEn();             // bi xu
2247   1              
2248   1              while(1)
2249   1              {     
2250   2                      vClrWdtCounter();
2251   2      
2252   2          u1TenSecond_Conuter = (UINT8)((gTimer_Count_Base + Base_Time())%TIMESTEP);
2253   2          if(0 == u1TenSecond_Conuter)
2254   2                      {
2255   3                              if(OTPSECU_OP_OK== CosOperation(OP_TIME_TOKEN, u1Buffer))
2256   3                              {
2257   4                                      for(i=0; i<TIME_TOKEN_LEN; i++)gToken_Save[i] = u1Buffer[i];
2258   4                                      gToken_Time2 = gToken_Time1;
2259   4      //                              vLcd_String_Display2(gToken_Save, TIME_TOKEN_LEN);      
2260   4                                      vPaper_String_Display(gToken_Save,TIME_TOKEN_LEN);
2261   4                              }
2262   3                              else
2263   3                              {
2264   4      //                              vLcd_String_Display2("Error",5);
2265   4                                        vPaper_String_Display("55555555",8);
2266   4      
2267   4                                      vScu_TbcIntEn();
2268   4                                      vTbc_Int1HzEn();
2269   4                                      gSecCount_10S=0;
2270   4                                      while(gSecCount_10S < 2);
2271   4                                      vScu_TbcIntDis();
2272   4                                      vTbc_Int1HzDis();
2273   4                                      vScu_TbcWakeupDis();
2274   4                                      //gUseCase = OTPSTATUS_SELECTMODE;
2275   4                                      return;
2276   4                              }
2277   3                      }
2278   2      
2279   2                      if( (_TIMER_FLAG_ >= TIMEOUT_SEC)) 
C51 COMPILER V9.01   OTPFRAME                                                              11/23/2016 11:58:15 PAGE 38  

2280   2                      {
2281   3      //                      vLcd_All_Clear2();
2282   3                              Paper_All_Clear();
2283   3                              vScu_SetSysClk32K(); 
2284   3                              vScu_StandbyModeEn(); 
2285   3                      }
2286   2                      
2287   2                      #if 1
2288   2                      if(g_ModfyPwFlag==1)
2289   2                      {
2290   3                              u2Cnt = 0;
2291   3                              while(!(SCULCDSWEN&SCUPOWERIOSTS)&&(u2Cnt<2000))
2292   3                              {
2293   4                                      u2Cnt++ ;
2294   4                              }
2295   3                              
2296   3                              if((u2Cnt<2000)&&(u2Cnt>10))                            //Ç°Ãæ³¬Ê±¹Ø»ú£¬ºóÃæÈ¥¶¶¶¯
2297   3                              {
2298   4                                      /*******Ö±½Ó½øÈëÐÝÃß********/
2299   4      //                              vLcd_All_Clear2();
2300   4                                      Paper_All_Clear();
2301   4                                      vScu_SetSysClk32K(); 
2302   4                                      vScu_StandbyModeEn();
2303   4                                      
2304   4                              }
2305   3                              else if(u2Cnt>=2000)
2306   3                              {
2307   4                                      /*******Ö±½Ó½øÈëÐÝÃß********/
2308   4                                      g_ModfyPwFlag = 2;
2309   4      //                              vLcd_All_Clear2();
2310   4                                      Paper_All_Clear();
2311   4                                      vScu_SetSysClk32K(); 
2312   4                                      vScu_StandbyModeEn();   
2313   4                              }
2314   3                      }
2315   2                      #endif
2316   2              }
2317   1              
2318   1      }
2319          
2320          #if 0
              /********************************************************************
              Function name:       void vOtp_ActiveProcess(void)
              Input parameters:
                  void  
              Return:
                  void
              Function:
                  OTP ACTIVE MODE PROCESS     
              ********************************************************************/
              //¼¤»îOTP
              void vOTP_ActiveProcess(void)
              {
                  UINT8 Key_Input=0xff,i=0;           
                      //UINT8 k = 0;
                      //UINT8 ActiveBuf[6]={"012345"};
                      UINT8 InputCnt = 0;
                      UINT8 KBuff[AC_LEN];
                      UINT16 u2Cnt;
                      UINT8 u1LeftOffset = 0;
                      UINT8 u1RightOffset = 0;
                      UINT8 u1Tmp;
C51 COMPILER V9.01   OTPFRAME                                                              11/23/2016 11:58:15 PAGE 39  

              
                      memset(KBuff, 0x00, AC_LEN);
                      for(i = 0; i<SCREENLEN; i++)DispKeyPad[i] = '-';
                      //DispKeyPad[0] = 'k';
                      
              #ifdef _FPGA_DEMO_EN_
                      vLcd_SetStopMode();             
              #endif
                  //vLcd_Flag_Clear();
                      
              
                      if(u1LowPowerFlag == 1)
                      {
                              vLcd_String_Display2("LPkkkkkk", 8);
                              vScu_TbcIntEn();
                              vTbc_Int1HzEn();
                              gSecCount_10S=0;
                              while(gSecCount_10S < 2);
                              
                      }
                      vLcd_String_Clear2();
                      vLcd_String_Display2(DispKeyPad, SCREENLEN);
              #ifdef _FPGA_DEMO_EN_  
                      vLcd_SetDisplayMode();          
              #endif
              
                  _TIMER_FLAG_=0;
                      vScu_TbcIntEn();
                      vTbc_Int1HzEn();
              
                      vIom_LsclkOutDis();
              
                      vScu_IomClkEn();
                      vIom_UartDis();
                      vScu_UartClkDis();
                      IOMP0PU   &= 0xfe;              //GP0¹Ø±ÕÉÏÀ²
                      IOMP0PD   |= 0x01;              //GP0´ò¿ªÏÂÀ­
                      IOMP0DIR &= 0xfe;               //GP0ÉèÖÃÎªÊäÈë
                      
                      
                      while(1)
                      {
                              #if(!DEBUG)
                              if((u1FirstSetFlag == 0)&&(IOMP0DIN&0x01))              //¸ßµçÆ½½øÈë´®¿Ú                test0406 
                              {
                                      //while(1);
                                      vOTP_InitProcess();
                                      return;
                              }
                              else
                              #endif
                              {
                                      vClrWdtCounter();
                              
                                      Key_Input = ucGetKeyValue();    
                                      //if(Key_Input>=0x30 && Key_Input<=0x3f)
                                      //{             
                                              //Èç¹ûÒÆ¶¯ÁË¹â±êÎ»ÖÃ£¬ÔòÐÞ¸Ä¹â±êÎ»ÖÃµÄÊý¾Ý
                                      switch(Key_Input)
                                      {
                                              case KEY_0:                     //down
                                              case KEY_1:
C51 COMPILER V9.01   OTPFRAME                                                              11/23/2016 11:58:15 PAGE 40  

                                              case KEY_2:
                                              case KEY_3:
                                              case KEY_4:
                                              case KEY_5:                     //up
                                              case KEY_6:
                                              case KEY_7:
                                              case KEY_8:
                                              case KEY_9:
                                              {
                                                      _TIMER_FLAG_=0;
              
                                                      if(LongPressFlag)                       
                                                      {
                                                              LongPressFlag = 0;
                                                              if(Key_Input == KEY_0)                  //down
                                                              {
                                                                      if(u1RightOffset==1)
                                                                      {
                                                                              u1LeftOffset = 1;
                                                                              u1RightOffset = 0;
                                                                              vLcd_String_Clear2();
              
                                                                              if(InputCnt<12)
                                                                              {
                                                                                      memcpy(DispKeyPad, &KBuff[InputCnt - 7], 7);
                                                                                      DispKeyPad[7] = '-';
                                                                                      
                                                                              }
                                                                              else if(InputCnt==12)
                                                                              {
                                                                                      memcpy(DispKeyPad, &KBuff[4], 8);
                                                                              }
                                                                              vLcd_String_Display2(DispKeyPad, 8);
                                                                              
                                                                      }
                                                                      break;
                                                              }
                                                              else if(Key_Input == KEY_5)                     //up
                                                              {
                                                                      if(u1LeftOffset==1)
                                                                      {
                                                                              u1LeftOffset = 0;
                                                                              u1RightOffset = 1;
                                                                              vLcd_String_Clear2();
                                                                              if(InputCnt < AC_LEN)
                                                                              {
                                                                                      u1Tmp = InputCnt - 7;
                                                                                      
                                                                              }
                                                                              else if(InputCnt==12)
                                                                              {
                                                                                      u1Tmp = 4;
                                                                                      
                                                                              }
                                                                              memcpy(DispKeyPad, KBuff, u1Tmp);
                                                                              vLcd_String_Display2(DispKeyPad, u1Tmp);
                                                                      }
                                                                      break;
                                                              }
                                                              
                                                      }
                                                      
C51 COMPILER V9.01   OTPFRAME                                                              11/23/2016 11:58:15 PAGE 41  

                                                      if((InputCnt < AC_LEN)&&(u1RightOffset==0))
                                                      {
                                                              KBuff[InputCnt] = Key_Input;
                                                              DispKeyPad[InputCnt] = Key_Input;
                                                              InputCnt++;
              #ifdef _FPGA_DEMO_EN_
                                                              vLcd_SetStopMode();             
              #endif
                                                            if(InputCnt<8)
                                                              {
                                                                      vLcd_Bcd_Display2(InputCnt,(Key_Input-0x30));
                                                              }
                                                               else if(InputCnt<12)
                                                               {
                                                                      u1LeftOffset = 1;
                                                                      memcpy(DispKeyPad, &KBuff[InputCnt-7], 7);
                                                                      DispKeyPad[7] = '-';
                                                                      vLcd_String_Display2(DispKeyPad, SCREENLEN);
                                                               }
                                                               else if(InputCnt==12)
                                                               {
                                                                      u1LeftOffset = 1;
                                                                      memcpy(DispKeyPad, &KBuff[4], 8);
                                                                      vLcd_String_Display2(DispKeyPad, SCREENLEN);
                                                               }
              #ifdef _FPGA_DEMO_EN_  
                                                              vLcd_SetDisplayMode();          
              #endif
                                                      }
                                                      break;
                                              }
                                              case KEY_DEL:
                                                      {
                                                              _TIMER_FLAG_=0;
                                                              //if(LongPressFlag)
                                                              //{
                                                              //      LongPressFlag = 0;
                                                              //      memset(KBuff, 0x00, AC_LEN);
                                                              //      for(i = 0; i<AC_LEN; i++)DispKeyPad[i] = '-';
                                                              //      InputCnt = 0;
                                                              //      vLcd_String_Display2(DispKeyPad, SCREENLEN);
                                                              //      break;
                                                              //}
                                                              
                                                              if((InputCnt > 0)&&(u1RightOffset==0))
                                                              {
                                                                      if(LongPressFlag)
                                                                      {
                                                                              LongPressFlag = 0;
                                                                              memset(KBuff, 0x00, AC_LEN);
                                                                              for(i = 0; i<AC_LEN; i++)DispKeyPad[i] = '-';
                                                                              InputCnt = 0;
                                                                              vLcd_String_Display2(DispKeyPad, SCREENLEN);
                                                                              break;
                                                                      }
                                                                      
                                                                      InputCnt--;
                                                                      
                                                                      DispKeyPad[InputCnt] = '-';
                                                                      KBuff[InputCnt] = 0x00;
              #ifdef _FPGA_DEMO_EN_
                                                                      vLcd_SetStopMode();             
C51 COMPILER V9.01   OTPFRAME                                                              11/23/2016 11:58:15 PAGE 42  

              #endif
                                                                      if(InputCnt>=7)
                                                                      {
                                                                              memcpy(DispKeyPad, &KBuff[InputCnt-7], 7);
                                                                              DispKeyPad[7] = '-';    
                                                                              vLcd_String_Display2(DispKeyPad, SCREENLEN);
                                                                      }
                                                                      else
                                                                      {
                                                                              vLcd_Bcd_Display2((InputCnt+1),13);             //'-'                   //12Î»µÄ¾ÍÊÇ-1
                                                                      }
                                                                      
              #ifdef _FPGA_DEMO_EN_  
                                                                      vLcd_SetDisplayMode();          
              #endif
                                                              }
                                                              break;
                                                      }
                                              case KEY_DOT:
                                              case KEY_LEFT:                  //×óÒÆ¶¯¹â±ê
                                              case KEY_RIGHT:                 //ÓÒÒÆ¶¯¹â±ê    
                                                  _TIMER_FLAG_=0;
                                                  break;
                                              default:
                                                      break;
                                       }      
                              }
              
                              u2Cnt = 0;
                              while(!(SCULCDSWEN&SCUPOWERIOSTS)&&(u2Cnt<2000))
                              {
                                      u2Cnt++ ;
                              }
                              
                              if((u2Cnt<2000)&&(u2Cnt>10))                            //Ç°Ãæ³¬Ê±¹Ø»ú£¬ºóÃæÈ¥¶¶¶¯
                              {
                                      _TIMER_FLAG_=0;
                                      if(InputCnt == AC_LEN)
                                      {
                                              if(OTPSECU_OP_OK ==CosOperation(OP_GEN_SEED, KBuff, AC_LEN))
                                              {
                                                      vScu_TbcIntEn();
                                                      vTbc_Int1HzEn();
                                                      g_ModfyPwFlag = 0;
                                                      gUseCase = OTPSTATUS_PWSET;
                                              }
                                              else
                                              {
              #ifdef _FPGA_DEMO_EN_
                                                      vLcd_SetStopMode();             
              #endif
                                                      vLcd_String_Clear2();
                                                      vLcd_String_Display2("Error",5);
              #ifdef _FPGA_DEMO_EN_  
                                                      vLcd_SetDisplayMode();          
              #endif
                                                      vScu_TbcIntEn();
                                                      vTbc_Int1HzEn();
                                                      gSecCount_10S=0;
                                                      while(gSecCount_10S < 2);
                                                      gUseCase = OTPSTATUS_ACTIVATE;
                                              }
C51 COMPILER V9.01   OTPFRAME                                                              11/23/2016 11:58:15 PAGE 43  

                                              vScu_TbcIntDis();
                                              vTbc_Int1HzDis();
                                              return;
                                      }
                                      
                              }
                              else if(u2Cnt>=2000)
                              {
                                      /*******Ö±½Ó½øÈëÐÝÃß********/
                                      vLcd_All_Clear2();
                                      vScu_SetSysClk32K(); 
                                      vScu_StandbyModeEn();   
                              }
                              
                               if( (_TIMER_FLAG_ >= TIMEOUT_SEC)) 
                              {
                                      vLcd_All_Clear2();
                                      vScu_SetSysClk32K(); 
                                      vScu_StandbyModeEn(); 
                              }
              
                              #if(YJZX)
                               if(gFlag_1S>=2)
                               {
                                      gFlag_1S = 0;
                                      // vScu_PdrEn();
                                      vSec_FreqExcepDetectEn();
                                      vSec_LightDetectEn(0x03);
              
                                      vScu_SetSysClkOsc2M();
                                      #if 1
                                      if((vSec_TMPERDetect())||(gu1DetectErrFlag == 1))               //·ÂÕæ²â³öÀ´µÄÎÂ¶È²»¶Ô
                                      {
                                              gUseCase = OTPSTATUS_INVALID;
                                              return;
                                      }
              
                                      
                                      if(2 == ucPowerDetect())//µÍµçÑ¹
                                      {          
                                              gUseCase = OTPSTATUS_INVALID;
                                              return;
                                      }
                                      #endif
                                      vScu_SetSysClk32K();
                                      //vAdcBgDis();
                                      
                                      //LDO TRIM µ½2.05V
                                      //ANALOGCTRLTRIMR1=0x00;
                                      //PDR ¹Ø±ÕµÍµçÑ¹¼ì²â
                                      //vScu_PdrDis();
                      
                                      vAdcFDDis();
                                      vAdcLDDis();
                                      //vScu_AnactrlClkDis();                 //²»ÄÜ¹ØÄ£ÄâÄ£¿éÊ±ÖÓ£¬LCDÏÔÊ¾ÐèÒª
                                      //vScu_Osc2MDis();
              
                               }
                               #endif
                                      
                      }
                      vScu_TbcIntDis();
C51 COMPILER V9.01   OTPFRAME                                                              11/23/2016 11:58:15 PAGE 44  

                      vTbc_Int1HzDis();
              
              }
              /********************************************************************
              Function name:      void vOTP_PAYProcess(void)
              Input parameters:
                  void  
              Return:
                  void
              Function:
                  OTP KEY SEED IMPORT PROCESS         
              ********************************************************************/
              void vOTP_PAYProcess(void)
              {
                      UINT8 Key_Input=0xff;
                      UINT8 InputCnt = 1;
                      UINT8 u1Buffer[80];
                      UINT8 i;
                      UINT8 u1LeftOffset = 0;
                      UINT8 u1RightOffset = 0;
                      UINT8 DotFlag = 0;
                      UINT8 EndFlag = 0;
                      //UINT8 DotDisplayFlag = 0;
                      UINT16 u2Cnt;
                      UINT8 u1Tmp1;
                      UINT8 u1Tmp2;
                      // EndFlag = 0;
              
                      memset(u1Buffer, 0x00, 80);
              
                  _TIMER_FLAG_=0;
                      vScu_TbcIntEn();
                      vTbc_Int1HzEn();
                      
                      u1Buffer[0] = DispKeyPad[0];
              
                      while(1)
                      {
                              vClrWdtCounter();
                      
                              Key_Input = ucGetKeyValue();
                              switch(Key_Input)
                              {
                                      case KEY_0:
                                      case KEY_1:
                                      case KEY_2:
                                      case KEY_3:
                                      case KEY_4:
                                      case KEY_5:
                                      case KEY_6:
                                      case KEY_7:
                                      case KEY_8:
                                      case KEY_9:
                                      {
                                       _TIMER_FLAG_=0;        
              
                                              if(LongPressFlag)
                                              {
                                                      LongPressFlag = 0;
                                                      if(Key_Input==KEY_5)                    //up
                                                      {
                                                              if((u1LeftOffset > 0))
C51 COMPILER V9.01   OTPFRAME                                                              11/23/2016 11:58:15 PAGE 45  

                                                              {
                                                                      u1LeftOffset--;
                                                                      u1RightOffset++;
                                                                      //for(i=0; i<SCREENLEN; i++)DispKeyPad[i] = u1Buffer[i + u1LeftOffset];
              
                                                                      u1Tmp1 = u1RightOffset*8;
                                                                      u1Tmp2 = InputCnt - u1Tmp1;
              
              #ifdef _FPGA_DEMO_EN_
                                                                      vLcd_SetStopMode();             
              #endif
                                                                      if(u1Tmp2>=8)
                                                                      {
                                                                              //u1Tmp2 -= 8;
                                                                              memcpy(DispKeyPad, &u1Buffer[u1Tmp2-8], 8);
                                                                              vLcd_String_Display2(DispKeyPad, SCREENLEN);
                                                                      }
                                                                      else
                                                                      {
                                                                              memcpy(DispKeyPad, u1Buffer, u1Tmp2);
                                                                              vLcd_String_Clear2();
                                                                              vLcd_String_Display2(DispKeyPad, u1Tmp2);
                                                                      }
              
              #ifdef _FPGA_DEMO_EN_  
                                                                      vLcd_SetDisplayMode();          
              #endif                          
                                                      
                                                              }
                                                              break;
                                                      }
                                                      else if(Key_Input==KEY_0)               //down
                                                      {
                                                              if((u1RightOffset > 0))
                                                              {
                                                                      u1LeftOffset++;
                                                                      u1RightOffset--;
                                                                      //for(i=0; i<SCREENLEN; i++)DispKeyPad[i] = u1Buffer[i + u1LeftOffset];
                                                                      u1Tmp1 = (u1RightOffset+1)*8;
                                                                      u1Tmp2 = InputCnt - u1Tmp1;
              
                                                                      memcpy(DispKeyPad, &u1Buffer[u1Tmp2], 8);
              #ifdef _FPGA_DEMO_EN_
                                                                      vLcd_SetStopMode();             
              #endif
                                                                 
                                                                      vLcd_String_Display2(DispKeyPad, SCREENLEN);
                                                                      if(u1RightOffset==0)
                                                                      {       
                                                                              vLcd_Dot_Display(EndFlag);
                                                                      }
              #ifdef _FPGA_DEMO_EN_  
                                                                      vLcd_SetDisplayMode();          
              #endif  
                                                              }
                                                              break;
                                                      }
                                                      else if(Key_Input==KEY_9)         //dot
                                                      {
                                                              if((InputCnt> 0x00)&&(InputCnt < PAY_PARA_LEN)&&(u1RightOffset == 0))
                                                              {
                                                                      if(DotFlag == 0)
C51 COMPILER V9.01   OTPFRAME                                                              11/23/2016 11:58:15 PAGE 46  

                                                                      {
                                                                              u1Buffer[InputCnt - 1] |= DOT_OFFSET;
              
                                                                              DotFlag = 1;
                                                                              EndFlag= 1;
                                                                              //DotDisplayFlag = 1;
                                                                      }
                                                                              #ifdef _FPGA_DEMO_EN_
                                                                              vLcd_SetStopMode();             
                                                                              #endif
                                                                              if(InputCnt < SCREENLEN)
                                                                              {
                                                                                      vLcd_String_Display2(DispKeyPad, InputCnt);
                                                                              }
                                                                              else
                                                                              {
                                                                                      vLcd_String_Display2(DispKeyPad, SCREENLEN);
                                                                              }
              
                                                                              vLcd_Dot_Display(EndFlag);
                                                                              #ifdef _FPGA_DEMO_EN_  
                                                                              vLcd_SetDisplayMode();          
                                                                              #endif
                                                              }
                                                              break;
                                                      }
                                              }
              
                                              if((InputCnt < PAY_PARA_LEN)&&(u1RightOffset == 0)&&(EndFlag < 3))                              //&&(EndFlag < 3)
                                              {
                                                      if(InputCnt < SCREENLEN)
                                                      {
                                                              DispKeyPad[InputCnt] =  Key_Input;
                                                              
                                                      }
                                                      else
                                                      {
                                                              for(i=0; i<SCREENLEN - 1; i++)
                                                              {
                                                                      DispKeyPad[i] = DispKeyPad[i+1];
                                                              }
                                                              DispKeyPad[i] = Key_Input;
                                                              //u1LeftOffset++;
                                                      }
                                                      u1Buffer[InputCnt] = Key_Input;
                                                      InputCnt++;
                                                      if(DotFlag)EndFlag++;
                                                      //DotDisplayFlag = EndFlag;
              
                                                      if(InputCnt>32)
                                                      {
                                                              u1LeftOffset = 4;
                                                      }
                                                      else if(InputCnt>24)
                                                      {
                                                              u1LeftOffset = 3;
                                                      }
                                                      else if(InputCnt>16)
                                                      {
                                                              u1LeftOffset = 2;
                                                      }
                                                      else if(InputCnt>8)
C51 COMPILER V9.01   OTPFRAME                                                              11/23/2016 11:58:15 PAGE 47  

                                                      {
                                                              u1LeftOffset = 1;
                                                      }
              
                                                      #ifdef _FPGA_DEMO_EN_
                                                      vLcd_SetStopMode();             
                                                      #endif
                                               
                                                      if(InputCnt < SCREENLEN)
                                                      {
                                                              vLcd_String_Display2(DispKeyPad, InputCnt);
                                                      }
                                                      else
                                                      {
                                                              vLcd_String_Display2(DispKeyPad, SCREENLEN);
                                                      }
              
                                                      vLcd_Dot_Display(EndFlag);
                                                      #ifdef _FPGA_DEMO_EN_  
                                                      vLcd_SetDisplayMode();          
                                                      #endif
                                              }
                                                      
                                              break;
                                      }
                                      case KEY_DEL:
                                      {
                              _TIMER_FLAG_=0; 
                                              if((InputCnt > 0)&&(u1RightOffset == 0))
                                              {
                                                      if(LongPressFlag)
                                                      {
                                                              LongPressFlag = 0;
                                                              gUseCase = OTPSTATUS_SELECTMODE;
                                                              vScu_TbcIntDis();
                                                              vTbc_Int1HzDis();
                                                              return;
                                                      }
                                                      
                                                      if(InputCnt <= SCREENLEN)
                                                      {
                                                              #if 1           
                                                              if(EndFlag>0)
                                                              {
                                                                      EndFlag--;
                                                                      if(0 == EndFlag)
                                                                      {
                                                                              u1Buffer[InputCnt - 1] &= 0x7f;
                                                                              vLcd_Dot_Display(EndFlag);
                                                                              DotFlag =0;
                                                                              break;          
                                                                      }
                                                              }
                                                              
                                                              InputCnt--;
                                                              DispKeyPad[InputCnt] = 0x00;
                                                              u1Buffer[InputCnt] = 0x00;
                                                              
                                                              #endif
              
              #ifdef _FPGA_DEMO_EN_
                                                              vLcd_SetStopMode();             
C51 COMPILER V9.01   OTPFRAME                                                              11/23/2016 11:58:15 PAGE 48  

              #endif
                                                        
                                                              vLcd_String_Display2(DispKeyPad, InputCnt);
                                                              //vLcd_Bcd_Clear(InputCnt);
                                                              vLcd_Bcd_Display2(SCREENLEN- InputCnt, 20);
                                                              vLcd_Dot_Display(EndFlag);
              #ifdef _FPGA_DEMO_EN_  
                                                              vLcd_SetDisplayMode();          
              #endif
                                                      }
                                                      else
                                                      {
                                                              #if 1                           
                                                              //u1LeftOffset--;
                                                              //if(EndFlag>0)EndFlag--;
                                                              //if(0 == EndFlag)DotFlag =0;
                                                              if(EndFlag>0)
                                                              {
                                                                      EndFlag--;
                                                                      if(0 == EndFlag)
                                                                      {
                                                                              u1Buffer[InputCnt - 1] &= 0x7f;
                                                                              vLcd_Dot_Display(EndFlag);
                                                                              DotFlag =0;
                                                                              break;          
                                                                      }
                                                              }
                                                              
                                                              InputCnt--;
                                                              u1Buffer[InputCnt] = 0x00;
                                                              for(i=0; i<SCREENLEN; i++)DispKeyPad[i] = u1Buffer[InputCnt-8+i ];
              
                                                              if((InputCnt==32)||(InputCnt==24)||(InputCnt==16)||(InputCnt==8))
                                                              {
                                                                      u1LeftOffset--;
                                                              }
                                                              #endif
              
              #ifdef _FPGA_DEMO_EN_
                                                              vLcd_SetStopMode();             
              #endif
                                                          //vLcd_Flag_Clear();
                                                              //vLcd_String_Clear();
              
                                                              //if(u1LeftOffset>0)
                                                              //{
                                                              //      vLcd_Flag_Display(11,1);                //×óÒÆ
                                                              //}
                                                              //else
                                                              //{
                                                              //      vLcd_Flag_Display(11,0);
                                                              //}
              
                                                              //vLcd_Flag_Display(4,1);               //ÐÅÏ¢
                                                              vLcd_String_Display2(DispKeyPad, SCREENLEN);
                                                              vLcd_Dot_Display(EndFlag);
              #ifdef _FPGA_DEMO_EN_  
                                                              vLcd_SetDisplayMode();          
              #endif
                                                              
                                                      }
                                              }
C51 COMPILER V9.01   OTPFRAME                                                              11/23/2016 11:58:15 PAGE 49  

              
                                              if(InputCnt == 0)
                                              {
                                                      gUseCase = OTPSTATUS_SELECTMODE;
                                                      vScu_TbcIntDis();
                                                      vTbc_Int1HzDis();
                                                      return;
                                              }
                                              break;
                                      }
                                      default:
                                              break;
                              }
              
                              
                              u2Cnt = 0;
                              while(!(SCULCDSWEN&SCUPOWERIOSTS)&&(u2Cnt<2000))
                              {
                                      u2Cnt++ ;
                              }
                              
                              if((u2Cnt<2000)&&(u2Cnt>10))                            //Ç°Ãæ³¬Ê±¹Ø»ú£¬ºóÃæÈ¥¶¶¶¯
                              {
                                      _TIMER_FLAG_=0;
                                      
                                      if ( OTPSECU_OP_OK == CosOperation(OP_PAY_TOKEN, u1Buffer,InputCnt))
                                      {
                                              DotFlag =0x00;
                                              EndFlag =0x00;
                                              InputCnt=0x00;
                                              //DotDisplayFlag = 0;
              #ifdef _FPGA_DEMO_EN_
                                              vLcd_SetStopMode();             
              #endif
                                          //vLcd_Flag_Clear();
                                              vLcd_String_Clear2();
              
                                              vLcd_String_Display2(u1Buffer, 0x06);
              #ifdef _FPGA_DEMO_EN_  
                                              vLcd_SetDisplayMode();          
              #endif
              
                                              _TIMER_FLAG_=0;
                                              vScu_TbcIntEn();
                                              vTbc_Int1HzEn();
                                              
                                              while(1)
                                              {
                                                      vClrWdtCounter();
                                                      Key_Input = ucGetKeyValue();    
                                                      if((Key_Input>=0x30 && Key_Input<=0x3f))
                                                      {
                                                              vScu_TbcIntDis();
                                                              vTbc_Int1HzDis();
                                                              gUseCase = OTPSTATUS_SELECTMODE;
                                                              return;
                                                      }
              
                                                      if(_TIMER_FLAG_>=TIMEOUT_SEC)
                                                      {       
                                                              /**********Ö±½Ó½øÈëÐÝÃß***********/
                                                              vLcd_All_Clear2();
C51 COMPILER V9.01   OTPFRAME                                                              11/23/2016 11:58:15 PAGE 50  

                                                              vScu_SetSysClk32K(); 
                                                              vScu_StandbyModeEn(); 
                                                      }
              
                                                      u2Cnt = 0;
                                                      while(!(SCULCDSWEN&SCUPOWERIOSTS)&&(u2Cnt<2000))
                                                      {
                                                              u2Cnt++ ;
                                                      }
                                                      
                                                      if((u2Cnt<2000)&&(u2Cnt>10))                            //Ç°Ãæ³¬Ê±¹Ø»ú£¬ºóÃæÈ¥¶¶¶¯
                                                      {
                                                              vScu_TbcIntDis();
                                                              vTbc_Int1HzDis();
                                                              gUseCase = OTPSTATUS_SELECTMODE;
                                                              return;
                                                              
                                                      }
                                                      else if(u2Cnt>=2000)
                                                      {
                                                              /*******Ö±½Ó½øÈëÐÝÃß********/
                                                              vLcd_All_Clear2();
                                                              vScu_SetSysClk32K(); 
                                                              vScu_StandbyModeEn();   
                                                      }
              
                                                      #if(YJZX)
                                                       if(gFlag_1S>=2)
                                                       {
                                                              gFlag_1S = 0;
                                                              //vScu_PdrEn();
                                                              vSec_FreqExcepDetectEn();
                                                              vSec_LightDetectEn(0x03);
              
                                                              vScu_SetSysClkOsc2M();
                                                              if((vSec_TMPERDetect())||(gu1DetectErrFlag == 1))
                                                              {
                                                                      gUseCase = OTPSTATUS_INVALID;
                                                                      return;
                                                              }
              
                                                              if(2 == ucPowerDetect())//µÍµçÑ¹
                                                              {          
                                                                      gUseCase = OTPSTATUS_INVALID;
                                                                      return;
                                                              }
                                                              vScu_SetSysClk32K();
                                                              //vAdcBgDis();
                                                              
                                                              //LDO TRIM µ½2.05V
                                                              //ANALOGCTRLTRIMR1=0x00;
                                                              //PDR ¹Ø±ÕµÍµçÑ¹¼ì²â
                                                              //vScu_PdrDis();
                                              
                                                              vAdcFDDis();
                                                              vAdcLDDis();
                                                              //vScu_AnactrlClkDis();  
                                                              //vScu_Osc2MDis();
                                                       }
                                                       #endif
                                              }
                                      }
C51 COMPILER V9.01   OTPFRAME                                                              11/23/2016 11:58:15 PAGE 51  

                                      else
                                      {
                                              DotFlag =0x00;
                                              EndFlag =0x00;
                                              InputCnt=0x00;
                                              //DotDisplayFlag = 0;
              
                                              gUseCase = OTPSTATUS_SELECTMODE;
              #ifdef _FPGA_DEMO_EN_
                                              vLcd_SetStopMode();             
              #endif
                                          //vLcd_Flag_Clear();
                                              //vLcd_String_Clear2();
              
                                              //vLcd_Flag_Display(2,1);                       //´íÎó
                                              vLcd_String_Display2("Error",5);
              #ifdef _FPGA_DEMO_EN_  
                                              vLcd_SetDisplayMode();          
              #endif
                                              vScu_TbcIntEn();
                                              vTbc_Int1HzEn();
                                              gSecCount_10S=0;
                                              while(gSecCount_10S < 2);
                                              vScu_TbcIntDis();
                                              vTbc_Int1HzDis();
                                      }
                                              
                                      
                              }
                              else if(u2Cnt>=2000)
                              {
                                      /*******Ö±½Ó½øÈëÐÝÃß********/
                                      vLcd_All_Clear2();
                                      vScu_SetSysClk32K(); 
                                      vScu_StandbyModeEn();   
                              }
                              #if 1
                              if( (_TIMER_FLAG_ >= TIMEOUT_SEC)) 
                              {
                                      vLcd_All_Clear2();
                                      vScu_SetSysClk32K(); 
                                      vScu_StandbyModeEn(); 
                              }       
                              #endif
              
                              #if(YJZX)
                               if(gFlag_1S>=2)
                               {
                                      gFlag_1S = 0;
                                      //vScu_PdrEn();
                                      vSec_FreqExcepDetectEn();
                                      vSec_LightDetectEn(0x03);
              
                                      vScu_SetSysClkOsc2M();
                                      if((vSec_TMPERDetect())||(gu1DetectErrFlag == 1))
                                      {
                                              gUseCase = OTPSTATUS_INVALID;
                                              return;
                                      }
              
                                      if(2 == ucPowerDetect())//µÍµçÑ¹
                                      {          
C51 COMPILER V9.01   OTPFRAME                                                              11/23/2016 11:58:15 PAGE 52  

                                              gUseCase = OTPSTATUS_INVALID;
                                              return;
                                      }
                                      vScu_SetSysClk32K();
                                      //vAdcBgDis();
                                      
                                      //LDO TRIM µ½2.05V
                                      //ANALOGCTRLTRIMR1=0x00;
                                      //PDR ¹Ø±ÕµÍµçÑ¹¼ì²â
                                      //vScu_PdrDis();
                      
                                      vAdcFDDis();
                                      vAdcLDDis();
                                      //vScu_AnactrlClkDis();  
                                      //vScu_Osc2MDis();
                               }
                               #endif
                                      
                      }
              }
              #endif
3169          /********************************************************************
3170          Function name:       void vOtp_ScrapProcess(void)
3171          Input parameters:
3172              void  
3173          Return:
3174              void
3175          Function:
3176              OTP SCRAP PROCESS WHEN OTP UNLOCK TIME IN MANUAL PASSED SIX TIME    
3177          ********************************************************************/
3178          void vOTP_InvalidProcess(void)
3179          {
3180   1              //u1 i;
3181   1              //u4 Time_Temp;
3182   1              //u2 u2Cnt;
3183   1              //Time_Temp = TBC_COUNT_VALUE;
3184   1      
3185   1              //DispKeyPad[0] = (u1)(Time_Temp>>24);
3186   1              //DispKeyPad[1] = (u1)(Time_Temp>>16);
3187   1              //DispKeyPad[2] = (u1)(Time_Temp>>8);
3188   1              //DispKeyPad[3] = (u1)(Time_Temp);
3189   1              //vLcd_Flag_Clear();
3190   1              //vLcd_String_Clear();
3191   1              //if(u1LowPowerFlag == 1)
3192   1              //{
3193   1              //      vLcd_Flag_Display(10,1);//µÍµç³ØµçÁ¿±êÖ¾
3194   1              //}
3195   1      
3196   1              //for(i=0;i<16;i++)
3197   1              //{
3198   1              //      vLcd_Flag_Display(i,1); 
3199   1              //}
3200   1      
3201   1      //      vLcd_String_Display2("Error",5);                        //Ê§Ð§ºóÉè±¸ÏÔÊ¾Error
3202   1              vPaper_String_Display("55555555",8);
3203   1              memset(gUserInfo,0x00,32);                                              //Çå³ýÖÖ×Ó
3204   1              memset(g_u1SeedKey,0x00,16);                                    //Çå³ýÃÜÔ¿
3205   1              memset(g_u1MacKey,0x00,16);             
3206   1              while(1)
3207   1              {
3208   2                      vClrWdtCounter();
3209   2                      //vScu_SuspendModeEn();
C51 COMPILER V9.01   OTPFRAME                                                              11/23/2016 11:58:15 PAGE 53  

3210   2              }
3211   1      }
3212          
3213          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   3572    ----
   CONSTANT SIZE    =     18    ----
   XDATA SIZE       =     22     137
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
