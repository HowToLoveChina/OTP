C51 COMPILER V9.01   LCDFUNC                                                               11/23/2016 11:58:14 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE LCDFUNC
OBJECT MODULE PLACED IN .\ObjFile\LcdFunc.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE SrcFile\Func\LcdFunc.c LARGE BROWSE INCDIR(.\SrcFile\StartUp\CPU;.\SrcFile\
                    -Frame\Inc;.\SrcFile\Func\Inc;.\SrcFile\Lib;.\SrcFile\App\Inc) DEFINE(_DEV_BOARD_,_FPGA_DEMO_EN_) DEBUG OBJECTEXTEND PRIN
                    -T(.\LstFile\LcdFunc.lst) OBJECT(.\ObjFile\LcdFunc.obj)

line level    source

   1          /********************************************************************
   2                                    Nationz Co.,Ltd
   3                  Copyright (c) 2009－2015 All Rights Reserved
   4           ********************************************************************
   5          File: LcdFunc.c
   6          History：
   7          Version                      Author                     Date
   8          V0.1                         nationz              2013-03-27
   9          
  10          Description:
  11               LcdFunc Source Code File;
  12          Function list:
  13               void vLcdInit(UINT8 BIAS,UINT8 DUTY,UINT8 FRM)；
  14                   void vLcd_Set_All(void)；
  15                   void vLcd_Clear_All(void)；
  16                   void vLcd_Bcd_Shift(UINT8 index)；
  17                   void vLcd_Bcd_Clear(UINT8 index)；
  18                   void vLcd_Bcd_Display(UINT8 index,UINT8 BCD)；
  19                   void vLcd_String_Display(UINT8 cString[],UINT8 cLen)；
  20                   void vLcd_Flag_Display(UINT8 index,UINT8 bOpen)；
  21                   void vLcd_Flag_Clear(void)；        
  22          Special statement:
  23               NULL
  24           *******************************************************************/
  25          #define _LCDFUNC_C_
  26          #include "LCDFRAME.H"
  27          #include "SCUFUNC.H" 
  28          #include "intrins.H"
  29          #include "stdio.H"
  30          #include "LcdFunc.h"
  31          /********************************************************************
  32          Function name:       vLcdInit
  33          Input parameters:
  34              UINT8 BIAS：Lcd Bias Volage Set 
  35                  UINT8 DUTY：Lcd Duty Cycles Set
  36                  UINT8 FRM：     Lcd Scan Freq Set
  37          Return:
  38              void
  39          Function:
  40              Enable LCD Module.
  41          ********************************************************************/
  42          void vDelay1ms(UINT8 Count)
  43          {
  44   1               while(Count--)
  45   1               {
  46   2                       _nop_();
  47   2                       _nop_();
  48   2                       _nop_();
  49   2                       _nop_();
  50   2               }
  51   1      
  52   1      }
  53          #ifndef _DEV_BOARD_ 
C51 COMPILER V9.01   LCDFUNC                                                               11/23/2016 11:58:14 PAGE 2   

              void vLcdInit(UINT8 BIAS,UINT8 DUTY,UINT8 FRM)
              {   
                  vScu_AnactrlClkEn();
              
                      LCDCR&=0x81;
                      LCDCR|=BIAS;
                      LCDCR|=DUTY;
                      LCDCR|=FRM;             
              
                      vLcd_BiasOn();
                      //Delay 10ms
                      //LCDCR=0x59;//for test
                      vDelay1ms(10);
              
              
                      //vLcd_SetDisplayMode();
                      //LCDDSPMOD=0x02;
              
              }
              #else
  74          void vLcdInit(UINT8 BIAS,UINT8 DUTY,UINT8 FRM)
  75          {   
  76   1          vScu_AnactrlClkEn();
  77   1      
  78   1              LCDCR&=0x81;
  79   1              LCDCR|=BIAS;
  80   1              LCDCR|=DUTY;
  81   1              LCDCR|=FRM;             
  82   1      
  83   1              vLcd_BiasOn();  
  84   1              vDelay1ms(10);
  85   1      
  86   1      
  87   1              vLcd_SetDisplayMode();
  88   1              
  89   1      
  90   1      }
  91          #endif
  92          
  93          /********************************************************************
  94          Function name:       vLcd_Set_All
  95          Input parameters:
  96              void
  97          Return:
  98              void
  99          Function:
 100              Light On all dots of Lcd Panel.
 101          ********************************************************************/
 102          #if     0       //ndef _DEV_BOARD_ 
              void vLcd_Set_All(void)
              {
                      UINT8 xdata i=0x22,*pLcdDispReg;
                      pLcdDispReg=(UINT8 xdata *)0x1412;
                      while(i--)
                      {
                              *pLcdDispReg++=0x1f;
                              //*pLcdDispReg++=0xff;
                      }
              }
              //#else
              void vLcd_Set_All(void)
              {
C51 COMPILER V9.01   LCDFUNC                                                               11/23/2016 11:58:14 PAGE 3   

                      UINT8 xdata i=0x1E,*pLcdDispReg;
                      pLcdDispReg=(UINT8 xdata *)0x1416;//SEG4
                      while(i--)
                      {
                              *pLcdDispReg++=0x1f;            
                      }
              }
              #endif
 124          /********************************************************************
 125          Function name:       vLcd_Clear_All
 126          Input parameters:
 127              void
 128          Return:
 129              void
 130          Function:
 131              Shut Off all dots of Lcd Panel.
 132          ********************************************************************/
 133          #if 0
              #ifndef _DEV_BOARD_ 
              void vLcd_Clear_All(void)
              {
                      UINT8 xdata i=0x22,*pLcdDispReg;
                      pLcdDispReg=(UINT8 xdata *)0x1415;
                      while(i--)
                      {
                              *pLcdDispReg++=0x00;
                      }
              }
              //void vLcd_Clear_All_Character(void)
              void vLcd_String_Clear(void)                    //ok
              {
                      UINT8 xdata i=0x22,*pLcdDispReg;
                      //pLcdDispReg=(UINT8 xdata *)0x141a;            //      0x141a  //我司屏0x1419                  //test0526
                      #if(DEBUG)
                      pLcdDispReg = (UINT8 xdata *)0x141a;             //从右到左显示         0x141a  //我司屏从0x1419        
                      #else
                      pLcdDispReg = (UINT8 xdata *)0x1419;             //从右到左显示         0x141a  //我司屏从0x1419        
                      #endif
                      while(i--)
                      {
                              *pLcdDispReg++=0x00;
                      }
              }
              #else
              void vLcd_Clear_All(void)
              {
                      UINT8 xdata i=0x1E,*pLcdDispReg;
                      pLcdDispReg=(UINT8 xdata *)0x1415;
                      while(i--)
                      {
                              *pLcdDispReg++=0x00;
                      }
              }
              //void vLcd_Clear_All_Character(void)
              void vLcd_String_Clear(void)            //ok
              {
                      UINT8 xdata i=0x1a,*pLcdDispReg;
                      //pLcdDispReg=(UINT8 xdata *)0x141a;                    //0x141a                //我司屏0x1419                  //test0526      
                      #if(DEBUG)
                      pLcdDispReg = (UINT8 xdata *)0x141a;             //从右到左显示         0x141a  //我司屏从0x1419        
                      #else
                      pLcdDispReg = (UINT8 xdata *)0x1419;             //从右到左显示         0x141a  //我司屏从0x1419        
C51 COMPILER V9.01   LCDFUNC                                                               11/23/2016 11:58:14 PAGE 4   

                      #endif
                      while(i--)
                      {
                              *pLcdDispReg++=0x00;
                      }
              }
              #endif
              #endif
 186          
 187          /********************************************************************
 188          Function name:       vLcd_Bcd_Shift
 189          Input parameters:
 190              UINT8 index：Specifies the Cursor Position Index
 191          Return:
 192              void
 193          Function:
 194              Specifies the Cursor Position Flashing.
 195          ********************************************************************/
 196          #if     0                       //ndef _DEV_BOARD_ 
              void vLcd_Bcd_Shift(UINT8 index)
              {
                      UINT8 xdata *pLcdDispReg;       
                      pLcdDispReg = (unsigned char xdata*)0x1432;     
                      if(index<14)
                      {
                              *(pLcdDispReg - index*2-1) ^= 0x00;             
                      }
              }
              //#else
              void vLcd_Bcd_Shift(UINT8 index)
              {
                      UINT8 xdata *pLcdDispReg;       
                      pLcdDispReg = (unsigned char xdata*)0x1432;     
                      if(index<14)
                      {
                              *(pLcdDispReg - index*2-1) ^= 0x00;             
                      }
              }
              #endif
 217          /********************************************************************
 218          Function name:       vLcd_Bcd_Clear
 219          Input parameters:
 220              UINT8 index：Specifies the Cursor Position Index
 221          Return:
 222              void
 223          Function:
 224              Specifies the Cursor Position Stop Flashing.
 225          ********************************************************************/
 226          #if 0
              #ifndef _DEV_BOARD_
              void vLcd_Bcd_Clear(UINT8 index)
              {
                      UINT8 xdata *pLcdDispReg;                       
                      //pLcdDispReg = (unsigned char xdata*)0x1432;                   //从右到左显示  0x1432  //我司屏从0x142F                        //test0526
                      #if(DEBUG)
                      pLcdDispReg = (UINT8 xdata *)0x1432;             //从右到左显示         0x1432  //我司屏从0x142F        
                      #else
                      pLcdDispReg = (UINT8 xdata *)0x142F;             //从右到左显示         0x1432  //我司屏从0x142F        
                      #endif
                      if(index<14)
                      {
                              *(pLcdDispReg - index*2+1) = 0;                 
C51 COMPILER V9.01   LCDFUNC                                                               11/23/2016 11:58:14 PAGE 5   

                              *(pLcdDispReg - index*2) = 0;           
                      }
              }
              #else
              void vLcd_Bcd_Clear(UINT8 index)
              {
                      UINT8 xdata *pLcdDispReg;                       
                      //pLcdDispReg = (unsigned char xdata*)0x1432;                   //从右到左显示  0x1432  //我司屏从0x142F                        //test0526
                      #if(DEBUG)
                      pLcdDispReg = (UINT8 xdata *)0x1432;             //从右到左显示         0x1432  //我司屏从0x142F        
                      #else
                      pLcdDispReg = (UINT8 xdata *)0x142F;             //从右到左显示         0x1432  //我司屏从0x142F        
                      #endif
                      //if(index<14)
                      if(index<14)
                      {
                              *(pLcdDispReg - index*2+1) = 0;                 
                              *(pLcdDispReg - index*2) = 0;           
                      }
              }
              #endif
              #endif
 262          /********************************************************************
 263          Function name:       vLcd_Bcd_Display
 264          Input parameters:
 265              UINT8 index：Specifies the Display Cursor Position Index
 266                  UINT8 BCD：Index Content to  Dispaly(must be Binary-Coded Decimal)
 267          Return:
 268              void
 269          Function:
 270              Display the Specifies Content.
 271          ********************************************************************/
 272          #ifdef _RIGHT_DISP_
 273          
 274          #if 0
              void vLcd_Bcd_Display1(UINT8 index,UINT8 BCD, UINT8 flag)                       //是这个                ok
              {
                      UINT8 xdata *pLcdDispReg;
                      //pLcdDispReg=(UINT8 xdata *)0x1432; //从右到左显示     0x1432  //我司屏从0x142F                //test0526
                      #if(DEBUG)
                      pLcdDispReg = (UINT8 xdata *)0x1432;             //从右到左显示         0x1432  //我司屏从0x142F        
                      #else
                      pLcdDispReg = (UINT8 xdata *)0x142F;             //从右到左显示         0x1432  //我司屏从0x142F        
                      #endif
                      //vScu_SetSysClkOsc2M();
              
                      if(flag == 0)
                      {
                              if(index<14)
                              {
                                      *(pLcdDispReg-index*2+1) = Num[BCD][1];         
                                      *(pLcdDispReg - index*2) = (Num[BCD][0]);
                                      
                              }
                      }
                      else
                      {
                              if(index<14)
                              {
                                      *(pLcdDispReg-index*2+1) = Num[BCD][1]|0x08;            
                                      *(pLcdDispReg - index*2) = (Num[BCD][0]);                       //小数点
                                      
C51 COMPILER V9.01   LCDFUNC                                                               11/23/2016 11:58:14 PAGE 6   

                              }
                      }
                      //vScu_SetSysClk32K();
              }
              #endif
 307          
 308          void vLcd_Bcd_Display2(UINT8 index,UINT8 BCD)//, UINT8 flag)  //seg0 是0x1412，我们从seg3开始，即0x1415
 309          {
 310   1              UINT8 xdata *pLcdDispReg;
 311   1              //#if(DEBUG)
 312   1              pLcdDispReg = (UINT8 xdata *)0x1431;                    //0x1416
 313   1              //#endif
 314   1      
 315   1              if(index%2)                                             //单数    整开始
 316   1              {
 317   2                      index = (index-1)/2;
 318   2                      *(pLcdDispReg - index*7) = Num1[BCD][0];                
 319   2                      *(pLcdDispReg - (index*7+1)) = (Num1[BCD][1]);
 320   2                      *(pLcdDispReg - (index*7+2)) = (Num1[BCD][2]);
 321   2                      *(pLcdDispReg - (index*7+3)) &= 0x05;
 322   2                      *(pLcdDispReg - (index*7+3)) |= (Num1[BCD][3]);
 323   2              }
 324   1              else                                                            //双数   半开始
 325   1              {
 326   2                      index = (index-1)/2;
 327   2                      *(pLcdDispReg - (index*7+3)) &= 0x0a;
 328   2                      *(pLcdDispReg - (index*7+3)) |= Num2[BCD][0];                   
 329   2                      *(pLcdDispReg - (index*7+4)) = (Num2[BCD][1]);
 330   2                      *(pLcdDispReg - (index*7+5)) = (Num2[BCD][2]);
 331   2                      *(pLcdDispReg - (index*7+6)) = (Num2[BCD][3]);
 332   2              }
 333   1      }
 334          
 335          
 336          void vLcd_String_Display2(UINT8 cString[],UINT8 cLen)                   //ok
 337          {
 338   1              UINT8 i,j;
 339   1              //UINT8 Temp;
 340   1              //为演示效果切换时钟
 341   1              //vScu_SetSysClkOsc500K();
 342   1              vScu_SetSysClkOsc2M();                          //这个会不会影响
 343   1      
 344   1              for(i=0;i<cLen;i++)
 345   1              {
 346   2                      if(cString[i]&0x80)                             //有小数点
 347   2                      {
 348   3                              cString[i] = cString[i]&0x7f;
 349   3                      }
 350   2                      
 351   2                      for(j=0;j<21;j++)                       //text26        
 352   2                      {       
 353   3                              if(cString[i] ==  Num_Assic1[j])
 354   3                              {
 355   4                                      vLcd_Bcd_Display2(9-cLen+i,j);                  //(cLen-i-1)
 356   4                                      continue;
 357   4                              }
 358   3                      }
 359   2              }
 360   1              //切回32K
 361   1              vScu_SetSysClk32K();
 362   1      }
 363          
C51 COMPILER V9.01   LCDFUNC                                                               11/23/2016 11:58:14 PAGE 7   

 364          void vLcd_String_Clear2(void)                   //ok
 365          {
 366   1              UINT8 xdata i=0x1d,*pLcdDispReg;                                        //0x1e
 367   1              
 368   1              pLcdDispReg = (UINT8 xdata *)0x1415;                            //0x1416
 369   1              
 370   1              while(i--)
 371   1              {
 372   2                      *pLcdDispReg++=0x00;
 373   2              }
 374   1      }
 375          
 376          void vLcd_All_Clear2(void)                      //ok
 377          {
 378   1              UINT8 xdata i=0x1e,*pLcdDispReg;
 379   1              
 380   1              pLcdDispReg = (UINT8 xdata *)0x1415;
 381   1              
 382   1              while(i--)
 383   1              {
 384   2                      *pLcdDispReg++=0x00;
 385   2              }
 386   1      }
 387          
 388          void vLcd_All_Display2(void)    
 389          {
 390   1              UINT8 xdata i=0x1e,*pLcdDispReg;
 391   1              
 392   1              pLcdDispReg = (UINT8 xdata *)0x1415;
 393   1              
 394   1              while(i--)
 395   1              {
 396   2                      *pLcdDispReg++=0x0f;
 397   2              }
 398   1      }
 399          
 400          void vLcd_Flag_Display2(UINT8 u1Flag)
 401          {
 402   1              UINT8 xdata *pLcdDispReg;
 403   1              UINT8 xdata *pLcdDispReg1;
 404   1              pLcdDispReg = (UINT8 xdata *)0x1432;                    //SEG3 0x1415--- SEG32  0x1432
 405   1              pLcdDispReg1 = (UINT8 xdata *)0x1415;                   //SEG32 0x1432 -- SEG 3  0x1415
 406   1      
 407   1              if(u1Flag==1)
 408   1              {
 409   2                      *(pLcdDispReg) = 0x08;
 410   2              }
 411   1              else if(u1Flag==2)
 412   1              {
 413   2                      *(pLcdDispReg) = 0x0c;
 414   2              }
 415   1              else if(u1Flag==3)
 416   1              {
 417   2                      *(pLcdDispReg) = 0x0e;
 418   2                      
 419   2              }
 420   1              else if(u1Flag==4)
 421   1              {
 422   2                      *(pLcdDispReg) = 0x0f;
 423   2                      *(pLcdDispReg1) &= 0x0e;
 424   2                      
 425   2              }
C51 COMPILER V9.01   LCDFUNC                                                               11/23/2016 11:58:14 PAGE 8   

 426   1              else if(u1Flag==5)
 427   1              {
 428   2                      *(pLcdDispReg) = 0x0f;
 429   2                      *(pLcdDispReg1) = 0x01;
 430   2              }
 431   1              else
 432   1              {
 433   2                      *(pLcdDispReg) = 0x00;
 434   2                      *(pLcdDispReg1) &= 0x0e;
 435   2                      
 436   2              }
 437   1      }
 438          
 439          void vLcd_Dot_Display(UINT8 u1DotFlag)
 440          {
 441   1              UINT8 xdata *pLcdDispReg;
 442   1      
 443   1              pLcdDispReg = (UINT8 xdata *)0x1415;                    //SEG32 0x1432 ---  SEG2 0x1415
 444   1      
 445   1              if(u1DotFlag == 1)
 446   1              {
 447   2                      *pLcdDispReg &= 0x01;
 448   2                      *pLcdDispReg |= 0x08;
 449   2              }
 450   1              else if(u1DotFlag == 2)
 451   1              {
 452   2                      *pLcdDispReg &= 0x01;
 453   2                      *pLcdDispReg |= 0x04;
 454   2              }
 455   1              else if(u1DotFlag == 3)
 456   1              {
 457   2                      *pLcdDispReg &= 0x01;
 458   2                      *pLcdDispReg |= 0x02;
 459   2              }
 460   1              else
 461   1              {
 462   2                      *pLcdDispReg &= 0x01;
 463   2              }
 464   1      }
 465          
 466          #if     0                       //ndef _DEV_BOARD_
              void vLcd_Bcd_Display(UINT8 index,UINT8 BCD)
              {
                      UINT8 xdata *pLcdDispReg;
                      pLcdDispReg=(UINT8 xdata *)0x1432; //从右到左显示       
                      if(index<14)
                      {           
                                *(pLcdDispReg-index*2+1) = Num[BCD][1];               
                                *(pLcdDispReg - index*2) = (Num[BCD][0]);             
                              
                      }
              }
              
              void vLcd_Point_Display(UINT8 index)
              {
                      UINT8 xdata *pLcdDispReg;
                      pLcdDispReg=(UINT8 xdata *)0x1432; //从右到左显示       
                      if(index<14)
                      {           
                                *(pLcdDispReg-index*2+1) |= 0x08;                             
                              
                      }
C51 COMPILER V9.01   LCDFUNC                                                               11/23/2016 11:58:14 PAGE 9   

              }
              
              //#else
              void vLcd_Bcd_Display(UINT8 index,UINT8 BCD)
              {
                      UINT8 xdata *pLcdDispReg;
                      pLcdDispReg=(UINT8 xdata *)0x1432; //从右到左显示       
                      if(index<14)
                      {
                              *(pLcdDispReg-index*2+1) = Num[BCD][1];         
                              *(pLcdDispReg - index*2) = (Num[BCD][0]);
                              
                      }
              }
              #endif
 503          
 504          //#else
 505          
 506          #if     0                               //ndef _DEV_BOARD_
              void vLcd_Bcd_Display(UINT8 index,UINT8 BCD)
              {
                      UINT8 xdata *pLcdDispReg;
                      pLcdDispReg=(UINT8 xdata *)0x141a; //从左到右显示       
                      if(index<14)
                      {
                              *(pLcdDispReg+index*2) = Num[BCD][0];           
                              *(pLcdDispReg+index*2+1) = (Num[BCD][1]);
                              
                      }
              }
              //#else
              void vLcd_Bcd_Display(UINT8 index,UINT8 BCD)
              {
                      UINT8 xdata *pLcdDispReg;
                      pLcdDispReg=(UINT8 xdata *)0x141a; //从左到右显示       
                      if(index<14)
                      {
                              *(pLcdDispReg+index*2) = Num[BCD][0];           
                              *(pLcdDispReg+index*2+1) = (Num[BCD][1]);
                              
                      }
              }
              #endif
 531          
 532          #endif
 533          /********************************************************************
 534          Function name:       vLcd_String_Display
 535          Input parameters:
 536              UINT8 cString[]：The Addr of Display Content
 537                  UINT8 cLen：The Length of cString
 538          Return:
 539              void
 540          Function:
 541              Display the cString Content.
 542          ********************************************************************/
 543          #if 0
              void vLcd_String_Display(UINT8 cString[],UINT8 cLen)
              {
                      UINT8 i,j,k=0;
                      //为演示效果切换时钟
                      vScu_SetSysClkOsc500K();
              
C51 COMPILER V9.01   LCDFUNC                                                               11/23/2016 11:58:14 PAGE 10  

                      for(i=0;i<cLen;i++)
                      {
                              for(j=0;j<27;j++)               
                              {
                                      if(cString[i] ==  Num_Assic[j])
                                      {                                                   
                                              vLcd_Bcd_Display((cLen-i-1),j);
                                              
                                              continue;
                                      }
                              }
                      }
                      //切回32K
                      vScu_SetSysClk32K();
              }
              #endif
 566          #if 0
              void vLcd_String_Display(UINT8 cString[],UINT8 cLen)                    //ok
              {
                      UINT8 i,j;
                      UINT8 Temp;
                      //为演示效果切换时钟
                      //vScu_SetSysClkOsc500K();
                      vScu_SetSysClkOsc2M();                          //这个会不会影响
              
                      for(i=0;i<cLen;i++)
                      {
                              for(j=0;j<27;j++)                       //text26        
                              {
                                      if(cString[i]&0x80)                             //有小数点
                                      {
                                              Temp = cString[i]&0x7f;                 //还原
                                              if(Temp ==  Num_Assic[j])
                                              {
                                                      vLcd_Bcd_Display1((cLen-i-1),j,1);
                                                      continue;
                                              }
                                      }
                                      else
                                      {
                                              if(cString[i] ==  Num_Assic[j])
                                              {
                                                      vLcd_Bcd_Display1((cLen-i-1),j, 0);
                                                      continue;
                                              }
                                      }
                              }
                      }
                      //切回32K
                      vScu_SetSysClk32K();
              }
              #endif
 602          /********************************************************************
 603          Function name:       vLcd_Flag_Display
 604          Input parameters:
 605              UINT8 index：Specifies the Display Flag Index
 606                  UINT8 bOpen：1：Display  On the Specifies Flag 
 607                               0：Display  Off the Specifies Flag
 608          Return:
 609              void
 610          Function:
 611              Display the Specifies Flag.
C51 COMPILER V9.01   LCDFUNC                                                               11/23/2016 11:58:14 PAGE 11  

 612          ********************************************************************/
 613          #if 0
              #ifndef _DEV_BOARD_
              void vLcd_Flag_Display(UINT8 index,UINT8 bOpen)                 //ok
              {
                      UINT8 xdata *pLcdDispReg;
                      //pLcdDispReg = (UINT8 xdata *)0x1415;  //0x1418                        //我司屏0x1415          //test0526
                      #if(DEBUG)
                      pLcdDispReg = (UINT8 xdata *)0x1418;            //0x1418                //我司屏0x1415  
                      #else
                      pLcdDispReg = (UINT8 xdata *)0x1415;            ///我司屏0x1415                 //test0526
                      #endif
                      
                      if(index<16)
                      {
                              if(bOpen==0)//清除显示
                              {
                                      *(pLcdDispReg+(Flag[index][0])) &= (~Flag[index][1]);
                              }
                              else
                              {
                                      *(pLcdDispReg+(Flag[index][0])) |= Flag[index][1];
                              }
                      }
              }
              #if 0
              void vLcd_Flag_Display_ForIsr(UINT8 index,UINT8 bOpen)
              {
                      UINT8 xdata *pLcdDispReg;
                      pLcdDispReg = (UINT8 xdata *)0x1415;
                      
                      if(index<16)
                      {
                              if(bOpen==0)//清除显示
                              {
                                      *(pLcdDispReg+(Flag[index][0])) &= (~Flag[index][1]);
                              }
                              else
                              {
                                      *(pLcdDispReg+(Flag[index][0])) |= Flag[index][1];
                              }
                      }
              }
              #endif
              #else
              void vLcd_Flag_Display(UINT8 index,UINT8 bOpen)         //ok
              {
                      UINT8 xdata *pLcdDispReg;
                      #if(DEBUG)
                      pLcdDispReg = (UINT8 xdata *)0x1418;            //0x1418                //我司屏0x1415  
                      #else
                      pLcdDispReg = (UINT8 xdata *)0x1415;            ///我司屏0x1415                 //test0526
                      #endif
                      if(index<16)
                      {
                              if(bOpen==0)//清除显示
                              {
                                      *(pLcdDispReg+Flag[index][0]) &= (~Flag[index][1]);
                              }
                              else
                              {
                                      *(pLcdDispReg+Flag[index][0]) |= Flag[index][1];
C51 COMPILER V9.01   LCDFUNC                                                               11/23/2016 11:58:14 PAGE 12  

                              }
                      }
              }
              #if 0
              void vLcd_Flag_Display_ForIsr(UINT8 index,UINT8 bOpen)
              {
                      UINT8 xdata *pLcdDispReg;
                      pLcdDispReg = (UINT8 xdata *)0x1415;
                      
                      if(index<16)
                      {
                              if(bOpen==0)//清除显示
                              {
                                      *(pLcdDispReg+(Flag[index][0])) &= (~Flag[index][1]);
                              }
                              else
                              {
                                      *(pLcdDispReg+(Flag[index][0])) |= Flag[index][1];
                              }
                      }
              }
              #endif
              #endif
              /********************************************************************
              Function name:       vLcd_Flag_Clear
              Input parameters:
                  void
              Return:
                  void
              Function:
                  Display Off All Flag.
              ********************************************************************/ 
              #if 1
              void vLcd_Flag_Clear(void)              //ok
              {       UINT8 i;
                      for(i=0;i<16;i++)
                      {
                              vLcd_Flag_Display(i,0);
                      }
              }
              #endif
              #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    944    ----
   CONSTANT SIZE    =    189    ----
   XDATA SIZE       =   ----      18
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
