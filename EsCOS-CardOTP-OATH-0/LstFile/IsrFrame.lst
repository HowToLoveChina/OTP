C51 COMPILER V9.01   ISRFRAME                                                              11/23/2016 11:58:15 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE ISRFRAME
OBJECT MODULE PLACED IN .\ObjFile\IsrFrame.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE SrcFile\Frame\IsrFrame.c LARGE BROWSE INCDIR(.\SrcFile\StartUp\CPU;.\SrcFil
                    -e\Frame\Inc;.\SrcFile\Func\Inc;.\SrcFile\Lib;.\SrcFile\App\Inc) DEFINE(_DEV_BOARD_,_FPGA_DEMO_EN_) DEBUG OBJECTEXTEND PR
                    -INT(.\LstFile\IsrFrame.lst) OBJECT(.\ObjFile\IsrFrame.obj)

line level    source

   1          #define _ISRFRAME_C_
   2          #include "REG_Z8D16R_2.h"
   3          #include "Debug.h"
   4          #include "stdio.H"
   5          #include "TimerFunc.H"  
   6          #include "IomFunc.h" 
   7          #include "SCUFRAME.h" 
   8          //#include "TokenApp.h"
   9          #include "WDTFRAME.h" 
  10          
  11          
  12          extern void vSaveCurrent(void);
  13          extern void vLoadCurrent(void);
  14          
  15          //UINT8 iFlag;
  16          
  17          void vEX0_ISR(void) interrupt 0 
  18          {
  19   1              vSaveCurrent(); 
  20   1              EX0=0;
  21   1              //WDT
  22   1      
  23   1              if(SCUIS1&0x01)
  24   1              {
  25   2                   //vClrWdtCounter();
  26   2                      // _WDT_FLAG_=0x55;
  27   2                       SCUIS1|=0x01;           
  28   2              }
  29   1              //POWER WAKE IO
  30   1              if(SCUIS1&0x04)
  31   1              {
  32   2                       SCUIS1|=0x04;
  33   2              }
  34   1              
  35   1              //SEC
  36   1              if(SCUIS1&0x02)
  37   1              {
  38   2                      #if(YJZX)
                              ANALOGCTRLSR1 = 0xff;
                              ANALOGCTRLSR2 = 0xff;
                              //while(1);
                              gu1DetectErrFlag = 1;
                              #endif
  44   2              }
  45   1              //DebugPrintf("vEX0_ISR Int\r\n");
  46   1              EX0=1;  
  47   1              vLoadCurrent();
  48   1      }
  49          
  50          
  51          void vTF0_ISR(void) interrupt 1
  52          {
  53   1              vSaveCurrent();         
C51 COMPILER V9.01   ISRFRAME                                                              11/23/2016 11:58:15 PAGE 2   

  54   1              ET0=0;
  55   1              //TBC
  56   1      
  57   1              if(SCUIS0&0x40)
  58   1              {
  59   2                  //DebugPrintf("vTF0_ISR Int!TBCINTSTS=%02bx\r\n",TBCINTSTS);
  60   2                      gSecCount_10S++;
  61   2                      #if(YJZX)
                              gFlag_1S++;
                              #endif
  64   2                      _TIMER_FLAG_++;
  65   2                      //_TIMER_FLAG_1_++;
  66   2                      //TBCINTSTS|=(0x0f|TBCINTSTS<<4);
  67   2                      TBCINTSTS|=(0x0f);
  68   2                      //gFlag_1S=0x5a;
  69   2              }
  70   1              
  71   1              ET0=1;  
  72   1              vLoadCurrent();
  73   1      } 
  74          
  75          void vEX1_ISR(void) interrupt 2
  76          {    
  77   1              vSaveCurrent(); 
  78   1              EX1=0;
  79   1      
  80   1          #if 1
  81   1              //TIMER
  82   1              //ReceiveCompleteFlag = 1;                      //test
  83   1              if(SCUIS0&0x10) //TIMER0
  84   1              {               
  85   2                      TM1INTSTS|=0x01;
  86   2                      //iFlag=0;
  87   2                      
  88   2                      //IOMP0DOUT^=(0x08);     
  89   2                      ReceiveCompleteFlag = 1;
  90   2                                      
  91   2              }
  92   1              if(SCUIS0&0x20) //TIMER1
  93   1              {
  94   2                  TM1INTSTS|=0x02;
  95   2                      //iFlag=1;
  96   2                      vTimer0_Stop();
  97   2                      //IOMP0DOUT^=(0x08);             
  98   2                      //DebugPrintf("TM1INTSTS=%02bx\r\n",TM1INTSTS);
  99   2                      vTimer1Start1(0,TIMER_MODE2,0x8000,TM1_32KEN);
 100   2                      ReceiveCompleteFlag = 1;
 101   2                      //_TIMER_FLAG_++;
 102   2              }
 103   1              if(SCUIS0&0x80) //TIMER2
 104   1              {
 105   2                  TM2INTSTS|=0x01;
 106   2                      //iFlag=2;
 107   2      
 108   2                      //IOMP0DOUT^=(0x10);
 109   2                      //ReceiveCompleteFlag = 1;
 110   2              }
 111   1              if(SCUIS1&0x80) //TIMER3
 112   1              {
 113   2                      //SCUIS0|=0x80;
 114   2                      TM2INTSTS|=0x02;
 115   2                      //iFlag=3;
C51 COMPILER V9.01   ISRFRAME                                                              11/23/2016 11:58:15 PAGE 3   

 116   2                              
 117   2                      //IOMP0DOUT^=(0x10);
 118   2                      //DebugPrintf("TM2INTSTS=%02bx\r\n",TM2INTSTS);
 119   2                      //vTimer2Start(2,2,0x0001,TM2_64KEN);
 120   2                      //DebugPrintf("Timer%d Int",(UINT16)iFlag);             
 121   2              }
 122   1              //DebugPrintf("Timer%02bx Int",iFlag);  
 123   1              #endif
 124   1      
 125   1              EX1=1;  
 126   1              vLoadCurrent();
 127   1      }
 128          void vTF1_ISR(void) interrupt 3
 129          {
 130   1              vSaveCurrent();                            
 131   1              ET1=0;
 132   1              //IOMP0DOUT&=(~0x08);   
 133   1              //Wakeup Timer
 134   1              
 135   1              if(SCUIS1&0x08)
 136   1              {
 137   2                  SCUIS1|=0x08;
 138   2                      //_SCU_FLAG_++;
 139   2                      //DebugPrintf("Wakeup Timer Int \r\n");
 140   2              }
 141   1              
 142   1              //Suspend Timeout
 143   1              if(SCUIS1&0x10)
 144   1              {
 145   2                      SCUIS1|=0x10;
 146   2                      //DebugPrintf("Suspend Timeout Int\r\n");
 147   2              }
 148   1              //DebugPrintf("vTF1_ISR Int\r\n");
 149   1              //IOMP0DOUT|=0x08;
 150   1              ET1=1;          
 151   1              vLoadCurrent();
 152   1      }
 153          
 154          void vSI_ISR(void) interrupt 4
 155          {
 156   1               vSaveCurrent();         
 157   1               ES=0;
 158   1               //SM3
 159   1               //Uart
 160   1               if(SCUIS0&0x04)
 161   1               {
 162   2                       g_UART_COM_BUF[g_UART_BUF_LEN++]=UARTBUF;
 163   2                       UARTSTAT|=0x1f;
 164   2                       if(5==g_UART_BUF_LEN)
 165   2                       {
 166   3                          //g_UART_RECEIVE_OK=0x55;
 167   3                       }
 168   2               }
 169   1               //GPIO
 170   1               #if 0
                       if((SCUIS0&0x02))
                       {
                           _IOM_FLAG_=IOMP1ISR;
                               
                               if(IOMP1ISR&0x0f) //лл
                               {
                                    IOMP1INTS1=0x00;                    
C51 COMPILER V9.01   ISRFRAME                                                              11/23/2016 11:58:15 PAGE 4   

                                        //DebugPrintf("IOMP1ISR111=%02bx\r\n",_IOM_FLAG_);
                               }
                               else if(IOMP1ISR&0xf0)//┴л
                               {
                                    IOMP1INTS2=0x00;                   
                                        //DebugPrintf("IOMP1ISR222=%02bx\r\n",_IOM_FLAG_);
                               }
              
                               IOMP1ISR|= 0xff;
                               _KBC_INT_FLAG_=0X55;
                               
                               //DebugPrintf("IOMP1ISR=%02bx\r\n",IOMP1ISR);
                       }
                       #endif
 192   1               
 193   1               //ADC
 194   1               //DebugPrintf("vSI_ISR Int\r\n");
 195   1               ES=1;  
 196   1           vLoadCurrent();
 197   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    474    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
