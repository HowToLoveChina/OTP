C51 COMPILER V9.00   TOKENAPP                                                              03/23/2015 15:38:06 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE TOKENAPP
OBJECT MODULE PLACED IN .\ObjFile\TokenApp.obj
COMPILER INVOKED BY: H:\Keil\C51\BIN\C51.EXE SrcFile\App\TokenApp.c LARGE BROWSE INCDIR(.\SrcFile\StartUp\CPU;.\SrcFile\
                    -Frame\Inc;.\SrcFile\Func\Inc;.\SrcFile\Lib;.\SrcFile\App\Inc) DEFINE(_DEV_BOARD_) DEBUG OBJECTEXTEND PRINT(.\LstFile\Tok
                    -enApp.lst) OBJECT(.\ObjFile\TokenApp.obj)

line level    source

   1          #define _TOKENAPP_C_    
   2          #include "TokenApp.H" 
   3          #include "String.H" 
   4          #include "Sm3Frame.H"
   5          #include "Debug.H"
*** WARNING C318 IN LINE 3 OF .\SRCFILE\FRAME\INC\OTPFRAME.H: can't open file 'REG_Z8D16R.h'
*** ERROR C231 IN LINE 42 OF .\SRCFILE\FRAME\INC\OTPFRAME.H: 'gUnlockPinErr_Count': redefinition
*** ERROR C231 IN LINE 49 OF .\SRCFILE\FRAME\INC\OTPFRAME.H: 'gPin_Save': redefinition
*** WARNING C318 IN LINE 3 OF .\SRCFILE\FRAME\INC\OTPFRAME.H: can't open file 'REG_Z8D16R.h'
*** ERROR C231 IN LINE 42 OF .\SRCFILE\FRAME\INC\OTPFRAME.H: 'gUnlockPinErr_Count': redefinition
*** ERROR C231 IN LINE 49 OF .\SRCFILE\FRAME\INC\OTPFRAME.H: 'gPin_Save': redefinition
   6          #include "EWATCHAPP.H" 
   7          
   8          void vTokenApp(void)
   9          {
  10   1              vScu_SetSysClk32K();    
  11   1      
  12   1              //RTC时钟和中断使能开启
  13   1              vScu_TbcClkEn();
  14   1              //若芯片复位，判断TBC是否复位
  15   1              if(!(SCUCTRL&0x01))
  16   1              {
  17   2                      SCUCTRL|=0x01;
  18   2                      if(!(TBCSTART&0x04))//RSTMASK 为0
  19   2                      {
  20   3                              if(!(TBCSTART&0x08)) //PARITYDIFF为0,TBC模块被异常复位
  21   3                              {
  22   4                                      vTbcInit();
  23   4                              }
  24   3                      }
  25   2              }
  26   1              vScu_TbcWakeupEn();
  27   1              ET0=1;
  28   1              EA=1;
  29   1              if(FALSE==gActive)
  30   1              {
  31   2                      vUartInit();
  32   2              }
  33   1              if(3==gUseCase||7==gUseCase)
  34   1              {
  35   2                  gUseCase=1;
  36   2              }
  37   1              if(4==gUseCase) //定时解锁
  38   1              {
  39   2                  //采用备份计数器计时
  40   2                      vTbc_ReadBakCounter();
  41   2                               
  42   2                      if(3600<=(TBC_COUNT_VALUE-gPinErr_Time))
  43   2                      {
  44   3                      gUseCase=1;
  45   3                      }
  46   2              }
  47   1      
C51 COMPILER V9.00   TOKENAPP                                                              03/23/2015 15:38:06 PAGE 2   

  48   1              //vIom_GpioConfig(3,1);
  49   1              //vIom_GpioConfig(4,1);
  50   1      
  51   1              vLcdInit(LCD_BIAS_1O3,LCD_DUTY_1O4,LCD_FRM_64HZ);
  52   1      #ifdef _FPGA_DEMO_EN_
                      vLcd_SetStopMode();     
              #endif
  55   1          vLcd_Flag_Clear();
  56   1              vLcd_String_Clear();
  57   1              vLcd_Flag_Display(4,1);
  58   1              vLcd_Flag_Display(9,1); 
  59   1              
  60   1              vLcd_String_Display("0123456789",10);
  61   1              vLcd_SetDisplayMode();          
  62   1      
  63   1              vKeboardInit(); 
  64   1      
  65   1          while(1)
  66   1              {
  67   2                      switch(gUseCase)
  68   2                      {
  69   3                          case 0:            //种子输入
  70   3                                  vToken_SeedImport();
  71   3                                      break;
  72   3                              case 1:                 //输入PIN                       
  73   3                                      vToken_InputPin();                              
  74   3                                      break;
  75   3                              case 2:                 //更改、设置PIN码                       
  76   3                                      vToken_SetPin();
  77   3                                      break;
  78   3                              case 3:                 //正常状态,常显或者挑战状态，或者切换到更改PIN码状态
  79   3                                      vToken_RunMode();
  80   3                                      break;
  81   3                              case 4:                 //手动解除锁定
  82   3                                      vToken_UnlockPin();
  83   3                                      break;
  84   3                              case 5:                 //激活流程              
  85   3                                      vToken_Active();
  86   3                                      break;
  87   3                              case 6:         //手动解锁错误6次，失效 
  88   3                                  vToken_Invalid();   
  89   3                                      break;
  90   3                              case 7://EWATCH
  91   3                                  
  92   3                                      vUtc_To_GTM8();
  93   3                                  break;
  94   3                              default:
  95   3                                  break;                                      
  96   3                       }
  97   2               }
  98   1      }
  99          
 100          static void vFlag1S_DispClr(void)
 101          {
 102   1                      //10s钟时间提醒
 103   1              if(10==gSecCount_10S)
 104   1              {
 105   2      #ifdef _FPGA_DEMO_EN_
                          vLcd_SetStopMode();                 
              #endif
 108   2              vLcd_Flag_Display_ForIsr(8,0);
 109   2      #ifdef _FPGA_DEMO_EN_  
C51 COMPILER V9.00   TOKENAPP                                                              03/23/2015 15:38:06 PAGE 3   

                          vLcd_SetDisplayMode();              
              #endif
 112   2              }
 113   1              else if(20==gSecCount_10S)
 114   1              {
 115   2      #ifdef _FPGA_DEMO_EN_
                          vLcd_SetStopMode();                 
              #endif
 118   2                      vLcd_Flag_Display_ForIsr(12,0);
 119   2      #ifdef _FPGA_DEMO_EN_  
                          vLcd_SetDisplayMode();              
              #endif
 122   2              }
 123   1              else if(30==gSecCount_10S)
 124   1              {
 125   2      #ifdef _FPGA_DEMO_EN_
                          vLcd_SetStopMode();                 
              #endif
 128   2                      vLcd_Flag_Display_ForIsr(13,0);
 129   2      #ifdef _FPGA_DEMO_EN_  
                          vLcd_SetDisplayMode();              
              #endif
 132   2              }
 133   1              else if(40==gSecCount_10S)
 134   1              {
 135   2      #ifdef _FPGA_DEMO_EN_
                          vLcd_SetStopMode();                 
              #endif
 138   2                      vLcd_Flag_Display_ForIsr(14,0);
 139   2      #ifdef _FPGA_DEMO_EN_  
                          vLcd_SetDisplayMode();              
              #endif
 142   2              }
 143   1              else if(50==gSecCount_10S)
 144   1              {
 145   2      #ifdef _FPGA_DEMO_EN_
                          vLcd_SetStopMode();                 
              #endif
 148   2                      vLcd_Flag_Display_ForIsr(15,0);
 149   2      #ifdef _FPGA_DEMO_EN_  
                          vLcd_SetDisplayMode();              
              #endif
 152   2              }
 153   1              else if(60==gSecCount_10S)
 154   1              {
 155   2                       gSecCount_10S=0;
 156   2                       //vScu_TbcIntDis();
 157   2                       //vScu_TbcWakeupDis();                  
 158   2                       //进入STANDBY MODE
 159   2                       vScu_SuspendModeEn();
 160   2                       
 161   2              }
 162   1      
 163   1      }
 164          
 165          /****************************************************************************************
 166          Function name:   void MessageExpand(unsigned char EventLen,unsigned char ChallengeCodeLen)
 167          Input parameters:
 168              unsigned char EventLen:      Event factor, An Option parameter in OTP arithmetic Operation
 169                  unsigned char ChallengeCodeLen:Challenge factor,An Option parameter in OTP arithmetic Operation
 170           
 171          Return:
C51 COMPILER V9.00   TOKENAPP                                                              03/23/2015 15:38:06 PAGE 4   

 172              void
 173          Function:  
 174             package  the Current RTC Time ,OTP Key Seed and Event/ChallengeCode factor(if necessary) 
 175             and padding these Data According to the requirement of the SM3 arithmetic
 176             Note:
 177                 For SM3 arithmetic perfermance ,the Buffer is dealcred at 0x03A0.
 178          ******************************************************************************************/
 179          //对消息，计时时间进行扩展 
 180          void MessageExpand(unsigned char EventLen,unsigned char ChallengeCodeLen)
 181          {
 182   1              unsigned char offset=0;                 
 183   1              memset(MessBuf,0,64);
 184   1              //种子密钥 16B  
 185   1              memcpy(MessBuf,KeySeed,16);
 186   1              offset=16;
 187   1              //附加上时间 8B 
 188   1              memset(MessBuf+offset,0,4);//gTime_Base偏移时间
 189   1              memcpy(MessBuf+offset+4,(unsigned char *)&gTimer_Count,4);
 190   1              offset+=8;
 191   1              //事件因子 4B 
 192   1              if(EventLen!=NULL)
 193   1              {
 194   2                      memcpy(MessBuf+offset,(unsigned char *)&gEvent,EventLen);
 195   2                      offset+=EventLen;
 196   2              }
 197   1              //挑战因子 6B 
 198   1      
 199   1              if(ChallengeCodeLen!=NULL)
 200   1              {          
 201   2      
 202   2              memcpy(MessBuf+offset,gPin_Key,ChallengeCodeLen);       
 203   2                  offset+=ChallengeCodeLen;
 204   2      
 205   2              }
 206   1              
 207   1      
 208   1              //数据长度填充，此处已经固定参与运算的OTP数据长度小于64Byte     
 209   1              MessBuf[offset]=0x80; 
 210   1              if(offset>=32)
 211   1              {
 212   2                  MessBuf[62]=0x01;
 213   2                  MessBuf[63]=(offset-32)<<3;
 214   2              }
 215   1              else
 216   1              {
 217   2                      MessBuf[63]=offset<<3;
 218   2              }
 219   1      }  
 220          /********************************************************************
 221          Function name:       void DynPassWord_SM3(char *DynCode)
 222          Input parameters:
 223              unsigned char *DynCode: Save The Dynamic password  
 224          Return:
 225              void
 226          Function:
 227              Generate Dynamic password   
 228          ********************************************************************/
 229          void DynPassWord_SM3(unsigned char *DynCode)
 230          {
 231   1          //unsigned char data i,a;
 232   1              unsigned long int xdata *p;
 233   1              unsigned long int OD; 
C51 COMPILER V9.00   TOKENAPP                                                              03/23/2015 15:38:06 PAGE 5   

 234   1              
 235   1      #if 0                           
                      DebugPrintBuf(MessBuf, 64, "MessBuf");
                      IOMP0DOUT|=0x08; 
              #endif          
 239   1              vSm3Hash();     
 240   1      #if 0
                      IOMP0DOUT&=(~0x08);    
                      DebugPrintBuf(DynBuf, 32, "DynBuf");
                      DebugPrintBuf(DynCode, 8, "DynCode"); 
                      IOMP0DOUT|=0x08;
              #endif
 246   1      
 247   1              p=(unsigned long int *)DynBuf;
 248   1              OD=(p[0]+p[1]+p[2]+p[3]+p[4]+p[5]+p[6]+p[7]);
 249   1      
 250   1      #if 0
                      IOMP0DOUT&=(~0x08); 
                      DebugPrintf("p[0]=%08lx\r\n",p[0]);
                      DebugPrintf("p[1]=%08lx\r\n",p[1]);
                      DebugPrintf("p[2]=%08lx\r\n",p[2]);
                      DebugPrintf("p[3]=%08lx\r\n",p[3]);
                      DebugPrintf("p[4]=%08lx\r\n",p[4]);
                      DebugPrintf("p[5]=%08lx\r\n",p[5]);
                      DebugPrintf("p[6]=%08lx\r\n",p[6]);     
                      DebugPrintf("p[7]=%08lx\r\n",p[7]);
                      DebugPrintf("OD0=%08lx\r\n",OD);
                      DebugPrintf("OD1=%10lu\r\n",OD);
                      DebugPrintf("OD2=%10ld\r\n",OD);        
                      IOMP0DOUT|=0x08;
              #endif   
 265   1      
 266   1              //OD=OD%(int)pow(10,_DYNDISP_NUM_);
 267   1              //OD=OD%(int)(10*10*10*10*10*10*10*10);//根据 _DYNDISP_NUM_调整，DEMO中_DYNDISP_NUM_==8 
 268   1              //sprintf(DynCode,"%10ld",OD);
 269   1              sprintf(DynCode,"%10lu",OD);
 270   1          
 271   1      #if 0     
                      IOMP0DOUT&=(~0x08);     
                      DebugPrintBuf(DynCode, 8, "DynCode");
              
              #endif  
 276   1              
 277   1      }
 278          /********************************************************************
 279          Function name:       void vToken_SeedImport(void)
 280          Input parameters:
 281              void  
 282          Return:
 283              void
 284          Function:
 285              Toekn KEY SEED IMPORT PROCESS       
 286          ********************************************************************/
 287          void vToken_SeedImport(void)
 288          {
 289   1      #ifdef _FPGA_DEMO_EN_
                  vLcd_SetStopMode();
              #endif  
 292   1              vLcd_String_Display("---nodA---",10);
 293   1      #ifdef _FPGA_DEMO_EN_   
                      vLcd_SetDisplayMode(); 
              #endif
C51 COMPILER V9.00   TOKENAPP                                                              03/23/2015 15:38:06 PAGE 6   

 296   1              while(FALSE==gActive)
 297   1              {
 298   2                  /*if(0x3e==ucGetKeyValue())//功能键，演示时使用
 299   2                      {
 300   2                               gActive=1;
 301   2                               gUseCase=5;//Set Pin Mode
 302   2      #ifdef _FPGA_DEMO_EN_
 303   2                   vLcd_SetStopMode();
 304   2      #endif  
 305   2                   vLcd_String_Clear();
 306   2                       vLcd_String_Display("-o-o-o-o-",9);
 307   2      #ifdef _FPGA_DEMO_EN_   
 308   2                       vLcd_SetDisplayMode(); 
 309   2      #endif          
 310   2                   //SUSPEND超时2分钟进入STANDBY MODE
 311   2                               vScu_SetSuspendOT_120S();
 312   2                       vScu_SuspendOT_ResultStandby();
 313   2                       vScu_SuspendOTEn();
 314   2                               //TBC开启
 315   2                               vTbcInit();
 316   2                               //定时唤醒TIMER
 317   2                               //vScu_SetTimerWakeup_1H();    
 318   2                       //vScu_WtWakeupEn();            
 319   2                       //vScu_TimerWakeupEn();        
 320   2                       ET1=1;
 321   2                       EA=1;  
 322   2                      } */
 323   2              #ifndef _UART_INTER_EN_
 324   2                  DebugPrintf("Seed Data Receive:\r\n");
 325   2                  vUartRecvData(g_UART_COM_BUF,64);
 326   2                      g_UART_RECEIVE_OK=1;
 327   2                      //DebugPrintBuf(g_UART_COM_BUF,64,"Recvive Data:");
 328   2              #endif
 329   2                      
 330   2                  if(1==g_UART_RECEIVE_OK)
 331   2                      {
 332   3                           //关闭UART中断接收
 333   3                           vScu_UartIntDis();
 334   3                       UARTCON=0x00;
 335   3                               //获取TBC的累计时间（UTC：国际协调时间）
 336   3                               gTimer_Count_Base=((UINT32)g_UART_COM_BUF[3]<<24|(UINT32)g_UART_COM_BUF[2]<<16|(UINT32)g_UART_COM_BUF[
             -1]<<8|(UINT32)g_UART_COM_BUF[0]);
 337   3                               //DebugPrintf("gTimer_Count_Base=%08lx",gTimer_Count_Base);
 338   3                               //晶体PPM调节
 339   3                               vScu_TbcClkEn();
 340   3                   if(0x80&g_UART_COM_BUF[4]) //-ppm
 341   3                               {
 342   4                                        TBCADJL=(UINT8)((0x7FFF-((UINT16)(g_UART_COM_BUF[5]<<1))));
 343   4                            TBCADJH=(UINT8)((0x7FFF-((UINT16)(g_UART_COM_BUF[5]<<1))>>8));                              
 344   4                               }
 345   3                               else //+ppm
 346   3                               {
 347   4                                        TBCADJL=(UINT8)((0x7FFF+((UINT16)(g_UART_COM_BUF[5]<<1))));
 348   4                            TBCADJH=(UINT8)((0x7FFF+((UINT16)(g_UART_COM_BUF[5]<<1))>>8));
 349   4                                        
 350   4                               }
 351   3                               //TBC开启
 352   3                               vTbcInit();
 353   3                               //采用备份计数器计时
 354   3                               vTbc_ReadBakCounter();
 355   3                               gBackupInitVal= TBC_COUNT_VALUE;
 356   3                               DebugPrintf("gBackupInitVal=%08lx\r\n",gBackupInitVal);
C51 COMPILER V9.00   TOKENAPP                                                              03/23/2015 15:38:06 PAGE 7   

 357   3      
 358   3                               g_UART_RECEIVE_OK=0;
 359   3                               //测试种子密钥
 360   3                               memcpy(KeySeed,&g_UART_COM_BUF[6],16);
 361   3                               //备份接收的用户信息，原始种子密钥
 362   3                               memcpy(gUserInfo,&g_UART_COM_BUF[22],32);
 363   3                               
 364   3                               //提示用户输入激活码
 365   3      #ifdef _FPGA_DEMO_EN_ 
                               vLcd_SetStopMode();
              #endif                   
 368   3                               vLcd_String_Clear();
 369   3                               vLcd_String_Display("oAbCdEFo",8);
 370   3      #ifdef _FPGA_DEMO_EN_  
                               vLcd_SetDisplayMode();         
              #endif
 373   3                               
 374   3                               //激活完成，状态切换
 375   3                               gActive=1;
 376   3                               gUseCase=5;//Set Pin Mode
 377   3      
 378   3                               
 379   3                               //SUSPEND超时2分钟进入STANDBY MODE
 380   3                               vScu_SetSuspendOT_120S();
 381   3                       vScu_SuspendOT_ResultStandby();
 382   3                       vScu_SuspendOTEn();
 383   3                               
 384   3                               //定时唤醒TIMER
 385   3                               //vScu_SetTimerWakeup_1H();             
 386   3                       //vScu_TimerWakeupEn();        
 387   3                       ET1=1;
 388   3                       EA=1;
 389   3                               
 390   3                               //vScu_StandbyModeEn();                         
 391   3                      }
 392   2                      else
 393   2                      {
 394   3                           //低功耗STANDBY MODE，若一直未有动作，待机                  
 395   3                               //vScu_SuspendModeEn();        //若UART采用查询方式，则屏蔽此语句
 396   3                               vFlag1S_DispClr();
 397   3                      }       
 398   2              }
 399   1              
 400   1          //关闭UART时钟，降低功耗
 401   1      #ifndef _Debug_ 
                      vScu_UartClkDis();//调试时不能关闭时钟
              #endif
 404   1              //关闭UART中断接收
 405   1              vScu_UartIntDis();
 406   1              UARTCON=0x00;
 407   1              ES=1; 
 408   1      }
 409          
 410          /********************************************************************
 411          Function name:       void vInputPin(void)
 412          Input parameters:
 413              void  
 414          Return:
 415              void
 416          Function:
 417              Input Pin Code Process when OTP(been Actived) Power On      
 418          ********************************************************************/
C51 COMPILER V9.00   TOKENAPP                                                              03/23/2015 15:38:06 PAGE 8   

 419          //输入PIN 操作
 420          void vToken_InputPin(void)
 421          {
 422   1              UINT8 Key_Input=15,j,i=0,bInputPin = 1;
 423   1              gUseCase = 1;                   //系统提示为设置PIN
 424   1              i = 0;
 425   1              gCursor_Flag = 0;
 426   1              gPinErr_Count = 0;      
 427   1              //LCD提示用户输入PIN
 428   1      #ifdef _FPGA_DEMO_EN_
                      vLcd_SetStopMode();                     
              #endif
 431   1          vLcd_Flag_Clear();
 432   1              vLcd_String_Clear();
 433   1              vLcd_Flag_Display(8,1);
 434   1              vLcd_Flag_Display(12,1);
 435   1              vLcd_Flag_Display(13,1);
 436   1              vLcd_Flag_Display(14,1);
 437   1              vLcd_Flag_Display(15,1);
 438   1                              
 439   1              vLcd_Flag_Display(9,1);
 440   1              vLcd_Flag_Display(3,1);
 441   1      #ifdef _FPGA_DEMO_EN_  
                      vLcd_SetDisplayMode();          
              #endif
 444   1          //10s重新定时开始
 445   1              vScu_TbcIntEn();
 446   1              vTbc_Int1HzEn();
 447   1              gSecCount_10S=0;
 448   1      
 449   1              //SUSPEND超时2分钟进入STANDBY MODE
 450   1              vScu_SetSuspendOT_120S();
 451   1              vScu_SuspendOT_ResultStandby();
 452   1              vScu_SuspendOTEn();
 453   1      
 454   1              while(bInputPin==1)
 455   1              {
 456   2                      Key_Input = ucGetKeyValue();    
 457   2                      if(Key_Input>=0x30 && Key_Input<=0x3f)
 458   2                      {       
 459   3      #ifdef _FPGA_DEMO_EN_
                              vLcd_SetStopMode();                                     
              #endif  
 462   3                  vLcd_Flag_Clear();
 463   3                  vLcd_Flag_Display(8,1);
 464   3                              vLcd_Flag_Display(12,1);
 465   3                              vLcd_Flag_Display(13,1);
 466   3                              vLcd_Flag_Display(14,1);
 467   3                              vLcd_Flag_Display(15,1);
 468   3                              vLcd_Flag_Display(9,1);
 469   3                              vLcd_Flag_Display(3,1);
 470   3      
 471   3                              //10s重新定时开始
 472   3                  gSecCount_10S=0;
 473   3      #ifdef _FPGA_DEMO_EN_  
                              vLcd_SetDisplayMode();          
              #endif  
 476   3      
 477   3                              //如果是正常的数据，存入接受数组
 478   3                              //如果移动了光标位置，则修改光标位置的数据
 479   3                              switch(Key_Input)
 480   3                              {
C51 COMPILER V9.00   TOKENAPP                                                              03/23/2015 15:38:06 PAGE 9   

 481   4                                      case '0':
 482   4                                      case '1':
 483   4                                      case '2':
 484   4                                      case '3':
 485   4                                      case '4':
 486   4                                      case '5':
 487   4                                      case '6':
 488   4                                      case '7':
 489   4                                      case '8':
 490   4                                      case '9':
 491   4                                           if(gCursor_Flag )          //有光标移到，则修改光标移动位置的数据
 492   4                                           {
 493   5                                                   gCursor_Flag = 0;
 494   5                                                   gPin_Key[i-gCursor_Count] = Key_Input;
 495   5      #ifdef _FPGA_DEMO_EN_
                                           vLcd_SetStopMode();                                                    
              #endif
 498   5                               //vLcd_String_Clear();
 499   5                                                   vLcd_String_Display(gPin_Key,i);
 500   5      #ifdef _FPGA_DEMO_EN_  
                                           vLcd_SetDisplayMode();             
              #endif
 503   5                                                   gCursor_Count = 0;
 504   5                                                              
 505   5                                           }
 506   4                                           else
 507   4                                           {
 508   5                                                   if(i<6)
 509   5                                                   {
 510   6                                                           
 511   6      
 512   6                                                           gPin_Key[i] = Key_Input;
 513   6                                                           i++;
 514   6      #ifdef _FPGA_DEMO_EN_
                                               vLcd_SetStopMode();                                                             
              #endif
 517   6                                   //vLcd_String_Clear();
 518   6                                                           vLcd_String_Display(gPin_Key,i);
 519   6      #ifdef _FPGA_DEMO_EN_  
                                               vLcd_SetDisplayMode();         
              #endif                                          
 522   6                                   
 523   6                                                   }                                          
 524   5                                           }                                  
 525   4                                           break;
 526   4                                      case 0x3a:                                           
 527   4                                               i = 0;
 528   4                                               for(j=0;j<6;j++)
 529   4                                               {
 530   5      #ifdef _FPGA_DEMO_EN_
                                           vLcd_SetStopMode();                                                    
              #endif
 533   5                               vLcd_String_Clear();
 534   5                                                       vLcd_Bcd_Clear(j);
 535   5      #ifdef _FPGA_DEMO_EN_  
                                           vLcd_SetDisplayMode();             
              #endif
 538   5                                               }
 539   4                                               break;
 540   4                                      case 0x3c:                      //左移动光标                            
 541   4                                               if(i>0)
 542   4                                               {
C51 COMPILER V9.00   TOKENAPP                                                              03/23/2015 15:38:06 PAGE 10  

 543   5                                                       gCursor_Flag = 1;
 544   5                                                       if(gCursor_Count < i)
 545   5                                                       {
 546   6                                                               gCursor_Count++;
 547   6                                                       }
 548   5                                                       else
 549   5                                                       {
 550   6                                                               gCursor_Count = 1;
 551   6                                                       }
 552   5      #ifdef _FPGA_DEMO_EN_
                                           vLcd_SetStopMode();                                                     
              #endif
 555   5                               //vLcd_String_Clear();
 556   5                                                       vLcd_String_Display(gPin_Key,i);
 557   5                                                       vLcd_Bcd_Clear(gCursor_Count-1);
 558   5      #ifdef _FPGA_DEMO_EN_  
                                           vLcd_SetDisplayMode();             
              #endif                                           
 561   5                                               }
 562   4                                               break;
 563   4                                      case 0x3d:                      //右移动光标
 564   4                                               if(i>0)
 565   4                                               {
 566   5                                                       gCursor_Flag = 1;
 567   5                                                       if(gCursor_Count > 1)
 568   5                                                       {
 569   6                                                               gCursor_Count--;
 570   6                                                       }
 571   5                                                       else
 572   5                                                       {
 573   6                                                               gCursor_Count = i;
 574   6                                                       }
 575   5      #ifdef _FPGA_DEMO_EN_
                                           vLcd_SetStopMode();                                                    
              #endif
 578   5                               //vLcd_String_Clear();
 579   5                                                       vLcd_String_Display(gPin_Key,i);
 580   5                                                       vLcd_Bcd_Clear(gCursor_Count-1);
 581   5      #ifdef _FPGA_DEMO_EN_  
                                           vLcd_SetDisplayMode();             
              #endif                                           
 584   5                                               }
 585   4                                               break;
 586   4                                      case 0x3E:
 587   4                                      
 588   4                                               break;
 589   4                                      case 0x3b:                      //确认                          
 590   4                                               //如果数据长度满足要求，则进行下一步操作
 591   4                                               if(i==6)
 592   4                                               {                                              
 593   5                                                       //开始计算,选择加密算法
 594   5                                                       if(memcmp(gPin_Save,gPin_Key,6)==0)
 595   5                                                       {
 596   6      #ifdef _FPGA_DEMO_EN_
                                               vLcd_SetStopMode();                                                            
              #endif
 599   6                                   //vLcd_String_Clear();
 600   6                                                               vLcd_String_Display("-o-o-o-",7); 
 601   6      #ifdef _FPGA_DEMO_EN_  
                                               vLcd_SetDisplayMode();         
              #endif                                                   
 604   6                                                               Key_Input = 0;
C51 COMPILER V9.00   TOKENAPP                                                              03/23/2015 15:38:06 PAGE 11  

 605   6                                                               while(Key_Input > 0x3F || Key_Input < 0x30)
 606   6                                                               {
 607   7                                                                       Key_Input = ucGetKeyValue();
 608   7                                                               }
 609   6                                                              
 610   6                                                               gUseCase = 3;                                                                                                  
 611   6                                                               bInputPin = 0;
 612   6                                                       }
 613   5                                                       else
 614   5                                                       {
 615   6                                                               for(j=0;j<8;j++)
 616   6                                                           {
 617   7                                                                   vLcd_Bcd_Clear(j);
 618   7                                                           }
 619   6                                                               gPinErr_Count++; 
 620   6                                                               //gErr[6] =(gPinErr_Count/10)+0x30;
 621   6                                                               //gErr[7] =(gPinErr_Count%10)+0x30; 
 622   6                                                               gErr[7] =gPinErr_Count+0x30;                    
 623   6      
 624   6                                                               //提示错误信息                                                                                                                                                                         
 625   6                                                               if(gPinErr_Count>=6)
 626   6                                                               {
 627   7                                                                       gPinErr_6TimeFlag = 1;
 628   7                                                                       //gPinErr_Time = gTimer_Count_Base+TBC_COUNT_VALUE ; //记录锁定的时间，n小时后自动解锁
 629   7                                                                       //采用备份计数器计时
 630   7                                                   vTbc_ReadBakCounter();
 631   7      
 632   7                                                                       gPinErr_Time = (TBC_COUNT_VALUE) ;
 633   7                                                                       //提示锁定口令
 634   7      #ifdef _FPGA_DEMO_EN_
                                                   vLcd_SetStopMode();                                                                         
             -    
              #endif
 637   7                                       vLcd_Flag_Clear();
 638   7                                                                       vLcd_Flag_Display(6,1);
 639   7                                                                       //vLcd_Flag_Display(0,1);
 640   7      #ifdef _FPGA_DEMO_EN_  
                                                   vLcd_SetDisplayMode();             
              #endif
 643   7      
 644   7                                                                       Key_Input = 0;
 645   7                                                                       while(Key_Input > 0x3F || Key_Input < 0x30)
 646   7                                                                       {
 647   8                                                                               Key_Input = ucGetKeyValue();
 648   8                                                                       }
 649   7                                                                       gUseCase = 4;
 650   7                                                                       bInputPin = 0;
 651   7      
 652   7                                                                       gPinErr_Count=0;
 653   7                                                               }
 654   6                                                               else
 655   6                                                               {
 656   7                                                                       //交易口令
 657   7      #ifdef _FPGA_DEMO_EN_
                                                   vLcd_SetStopMode();                                                                         
             -   
              #endif
 660   7                                       vLcd_Flag_Clear();
 661   7                                                                       //vLcd_String_Clear();
 662   7                                                                       vLcd_Flag_Display(3,1);
 663   7                                                                       vLcd_Flag_Display(11,1);
 664   7                                                                       vLcd_String_Display(gErr,8);
C51 COMPILER V9.00   TOKENAPP                                                              03/23/2015 15:38:06 PAGE 12  

 665   7      #ifdef _FPGA_DEMO_EN_  
                                                   vLcd_SetDisplayMode();             
              #endif
 668   7                                                                       //Key_Input = 0;
 669   7                                                                       //while(Key_Input > 0x3F || Key_Input < 0x30)
 670   7                                                                       //{
 671   7                                                                               //Key_Input = ucGetKeyValue();
 672   7                                                                       //}
 673   7                                                               }                                                                                                              
 674   6                                                       }                                              
 675   5                                                       i = 0;
 676   5                                                       gCursor_Flag = 0;
 677   5                                               }
 678   4                                               break;
 679   4                                }
 680   3                                                      
 681   3                       }
 682   2                       else
 683   2                       {
 684   3                               //低功耗STANDBY MODE                    
 685   3                               //vScu_SuspendModeEn();
 686   3                               vFlag1S_DispClr();
 687   3                       }
 688   2              }
 689   1              vScu_TbcIntDis();
 690   1      }
 691          
 692          /********************************************************************
 693          Function name:       void vOTP_SetPinProcess(void)
 694          Input parameters:
 695              void  
 696          Return:
 697              void
 698          Function:
 699              Setting Pin Code Process when The OTP Power On The First Time       
 700          ********************************************************************/
 701          //设置PIN 操作
 702          void vToken_SetPin(void)
 703          {
 704   1              
 705   1              UINT8 Key_Input=15,j,i=0,KBuff[8],bSetPin = 1,bSecondInput=0;
 706   1              gUseCase = 2;                   //系统提示为设置PIN
 707   1              i = 0;
 708   1              gCursor_Flag = 0;
 709   1              gPinErr_Count = 0; //错误Pin计数清零
 710   1      
 711   1      
 712   1      
 713   1              
 714   1      #ifdef _FPGA_DEMO_EN_
                      vLcd_SetStopMode();      
              #endif
 717   1          vLcd_Flag_Clear();
 718   1              vLcd_String_Clear();
 719   1              vLcd_Flag_Display(8,1);
 720   1              vLcd_Flag_Display(12,1);
 721   1              vLcd_Flag_Display(13,1);
 722   1              vLcd_Flag_Display(14,1);
 723   1              vLcd_Flag_Display(15,1);
 724   1      
 725   1              vLcd_Flag_Display(3,1);
 726   1              vLcd_Flag_Display(4,1);
C51 COMPILER V9.00   TOKENAPP                                                              03/23/2015 15:38:06 PAGE 13  

 727   1              vLcd_Flag_Display(9,1); 
 728   1      
 729   1              
 730   1              vLcd_Bcd_Display(10,19);
 731   1              vLcd_Bcd_Display(9,20);
 732   1          vLcd_Bcd_Display(8,1);
 733   1      
 734   1      #ifdef _FPGA_DEMO_EN_  
                      vLcd_SetDisplayMode();          
              #endif
 737   1          //10s重新定时开始
 738   1              vScu_TbcIntEn();
 739   1              vTbc_Int1HzEn();
 740   1              gSecCount_10S=0;
 741   1      
 742   1      
 743   1              //SUSPEND超时2分钟进入STANDBY MODE
 744   1              vScu_SetSuspendOT_120S();
 745   1              vScu_SuspendOT_ResultStandby();
 746   1              vScu_SuspendOTEn();
 747   1      
 748   1              while(bSetPin==1)
 749   1              {  
 750   2                          
 751   2                      
 752   2                      Key_Input = ucGetKeyValue();    
 753   2                      if(Key_Input>=0x30 && Key_Input<=0x3F)
 754   2                      {
 755   3      
 756   3                              //第二遍输入
 757   3      //                      if(bSecondInput)
 758   3      //                      {
 759   3      //#ifdef _FPGA_DEMO_EN_
 760   3      //                  vLcd_SetStopMode();
 761   3      //                  vLcd_String_Clear();
 762   3      //                  vLcd_SetDisplayMode();
 763   3      //                              vDelay1ms(200);
 764   3      //                  vLcd_SetStopMode();
 765   3      //#endif                                        
 766   3      //                              vLcd_Flag_Display(3,1);
 767   3      //                  vLcd_Flag_Display(4,1);
 768   3      //                  vLcd_Flag_Display(9,1);
 769   3      //#ifdef _FPGA_DEMO_EN_  
 770   3      //                  vLcd_SetDisplayMode();              
 771   3      //#endif
 772   3      //                      }
 773   3                              //如果是正常的数据，存入接受数组
 774   3                              //如果移动了光标位置，则修改光标位置的数据
 775   3                              switch(Key_Input)
 776   3                              {
 777   4                                      case '0':
 778   4                                      case '1':
 779   4                                      case '2':
 780   4                                      case '3':
 781   4                                      case '4':
 782   4                                      case '5':
 783   4                                      case '6':
 784   4                                      case '7':
 785   4                                      case '8':
 786   4                                      case '9':
 787   4                                               if(gCursor_Flag )              //有光标移到，则修改光标移动位置的数据
 788   4                                               {
C51 COMPILER V9.00   TOKENAPP                                                              03/23/2015 15:38:06 PAGE 14  

 789   5                                                        gCursor_Flag = 0;
 790   5                                                        gPin_Key[i-gCursor_Count] = Key_Input;
 791   5      #ifdef _FPGA_DEMO_EN_
                                            vLcd_SetStopMode();                                                 
              #endif
 794   5                                //vLcd_String_Clear();
 795   5                                                        vLcd_String_Display(gPin_Key,i);
 796   5      #ifdef _FPGA_DEMO_EN_  
                                            vLcd_SetDisplayMode();            
              #endif
 799   5                                                        gCursor_Count = 0;
 800   5                                                              
 801   5                                               }
 802   4                                               else
 803   4                                               {
 804   5                                                       if(i<6)
 805   5                                                       {
 806   6                                                           //IOMP0DOUT|=(0x08);
 807   6      
 808   6                                                               gPin_Key[i] = Key_Input;
 809   6                                                               i++;
 810   6      #ifdef _FPGA_DEMO_EN_
                                               vLcd_SetStopMode();                                                            
              #endif
 813   6                                   //vLcd_String_Clear();
 814   6                                                               vLcd_String_Display(gPin_Key,i);
 815   6      #ifdef _FPGA_DEMO_EN_  
                                               vLcd_SetDisplayMode();         
              #endif
 818   6                                   
 819   6                                                               //IOMP0DOUT&=(~0x08);
 820   6                                                      
 821   6                                                       }
 822   5                                               }
 823   4                                               break;
 824   4                                      case 0x3a:   //清屏幕
 825   4                                               i = 0;
 826   4                                               for(j=0;j<6;j++)
 827   4                                               {
 828   5      #ifdef _FPGA_DEMO_EN_
                                           vLcd_SetStopMode();                                                    
              #endif
 831   5                               //vLcd_String_Clear();
 832   5                                                       vLcd_Bcd_Clear(j);
 833   5      #ifdef _FPGA_DEMO_EN_  
                                           vLcd_SetDisplayMode();             
              #endif
 836   5                                               }
 837   4                                               break;
 838   4                                      case 0x3c:                      //左移动光标
 839   4                                               if(i>0)
 840   4                                               {
 841   5                                                       gCursor_Flag = 1;
 842   5                                                       if(gCursor_Count < i)
 843   5                                                       {
 844   6                                                               gCursor_Count++;
 845   6                                                       }
 846   5                                                       else
 847   5                                                       {
 848   6                                                               gCursor_Count = 1;
 849   6                                                       }
 850   5      #ifdef _FPGA_DEMO_EN_
C51 COMPILER V9.00   TOKENAPP                                                              03/23/2015 15:38:06 PAGE 15  

                                           vLcd_SetStopMode();                                                    
              #endif
 853   5                               //vLcd_String_Clear();
 854   5                                                       vLcd_String_Display(gPin_Key,i);
 855   5                                                       vLcd_Bcd_Clear(gCursor_Count-1);
 856   5      #ifdef _FPGA_DEMO_EN_  
                                           vLcd_SetDisplayMode();             
              #endif
 859   5                                               }
 860   4                                               break;
 861   4                                      case 0x3d:                      //右移动光标
 862   4                                               if(i>0)
 863   4                                               {
 864   5                                                       gCursor_Flag = 1;
 865   5                                                       if(gCursor_Count > 1)
 866   5                                                       {
 867   6                                                               gCursor_Count--;
 868   6                                                       }
 869   5                                                       else
 870   5                                                       {
 871   6                                                               gCursor_Count = i;
 872   6                                                       }
 873   5      #ifdef _FPGA_DEMO_EN_
                                           vLcd_SetStopMode();                                                     
              #endif
 876   5                               //vLcd_String_Clear();
 877   5                                                       vLcd_String_Display(gPin_Key,i);
 878   5                                                       vLcd_Bcd_Clear(gCursor_Count-1);
 879   5      #ifdef _FPGA_DEMO_EN_  
                                           vLcd_SetDisplayMode();             
              #endif
 882   5                                               }
 883   4                                               break;
 884   4                                      case 0x3E:
 885   4                                              
 886   4                                               break;
 887   4                                      case 0x3b:                      //确认
 888   4                                               //如果数据长度满足要求，则进行下一步操作
 889   4                                               if(i==6)
 890   4                                               {
 891   5                                                       for(j=0;j<6;j++)
 892   5                                                       {
 893   6      #ifdef _FPGA_DEMO_EN_
                                               vLcd_SetStopMode();                                                             
              #endif
 896   6                                   //vLcd_String_Clear();
 897   6                                                               vLcd_Bcd_Clear(j);
 898   6      #ifdef _FPGA_DEMO_EN_  
                                               vLcd_SetDisplayMode();         
              #endif
 901   6                                                       }
 902   5                                                       i = 0;
 903   5                                                       gCursor_Flag = 0;
 904   5                                                       if(bSecondInput == 0)          //第一遍输入
 905   5                                                       {
 906   6                                                               bSecondInput = 1;
 907   6      #ifdef _FPGA_DEMO_EN_
                                               vLcd_SetStopMode();                                                             
              #endif
 910   6                                   //vLcd_String_Clear();
 911   6                                                               vLcd_String_Display("P----1",6);
 912   6                                                               
C51 COMPILER V9.00   TOKENAPP                                                              03/23/2015 15:38:06 PAGE 16  

 913   6      #ifdef _FPGA_DEMO_EN_  
                                               vLcd_SetDisplayMode();         
              #endif
 916   6                                                               memcpy(KBuff,gPin_Key,6);
 917   6                                                               
 918   6                                                       }
 919   5                                                       else                                                                           //第二遍输入
 920   5                                                       {
 921   6                                                               //开始计算,选择加密算法
 922   6                                                               if(memcmp(KBuff,gPin_Key,6)==0)
 923   6                                                               {
 924   7                                                                       memcpy(gPin_Save,KBuff,6);
 925   7      #ifdef _FPGA_DEMO_EN_
                                                   vLcd_SetStopMode();                                                                 
             -    
              #endif
 928   7                                       //vLcd_String_Clear();
 929   7                                                                       vLcd_String_Display("P----2",6);
 930   7      #ifdef _FPGA_DEMO_EN_  
                                                   vLcd_SetDisplayMode();             
              #endif
 933   7                                                                       gUseCase = 3;
 934   7                                                                       bSetPin = 0;
 935   7      
 936   7                                                                       vDelay1ms(200);
 937   7                                                               }
 938   6                                                               else
 939   6                                                               {
 940   7                                                                       //两次输入不一致
 941   7      #ifdef _FPGA_DEMO_EN_
                                                   vLcd_SetStopMode();                                                                  
             -   
              #endif
 944   7                                       //vLcd_String_Clear();
 945   7                                                                       vLcd_String_Display("P---no",6);
 946   7      #ifdef _FPGA_DEMO_EN_  
                                                   vLcd_SetDisplayMode();             
              #endif
 949   7                                                                       bSecondInput = 0;
 950   7      
 951   7                                                                       vDelay1ms(200);                                                                
 952   7                                                               }
 953   6                                                       }
 954   5                                                       Key_Input = 0;
 955   5                                                       /*while(Key_Input > 0x3F || Key_Input < 0x30)
 956   5                                                       {
 957   5                                                               Key_Input = ucGetKeyValue();
 958   5                                                       }*/
 959   5                                                       for(j=0;j<6;j++)
 960   5                                                       {
 961   6      #ifdef _FPGA_DEMO_EN_
                                               vLcd_SetStopMode();                                                             
              #endif
 964   6                                   //vLcd_String_Clear();
 965   6                                                               vLcd_Bcd_Clear(j);
 966   6      #ifdef _FPGA_DEMO_EN_  
                                               vLcd_SetDisplayMode();         
              #endif
 969   6                                                       }
 970   5      #ifdef _FPGA_DEMO_EN_
                                           vLcd_SetStopMode();                                
              #endif
C51 COMPILER V9.00   TOKENAPP                                                              03/23/2015 15:38:06 PAGE 17  

 973   5                               vLcd_Flag_Clear();
 974   5                                   vLcd_String_Clear();
 975   5                                   vLcd_Flag_Display(8,1);
 976   5                                   vLcd_Flag_Display(12,1);
 977   5                                   vLcd_Flag_Display(13,1);
 978   5                                   vLcd_Flag_Display(14,1);
 979   5                                   vLcd_Flag_Display(15,1);
 980   5      
 981   5                                   vLcd_Flag_Display(3,1);
 982   5                                   vLcd_Flag_Display(4,1);
 983   5                                   vLcd_Flag_Display(9,1);
 984   5                                                       
 985   5                                                        if(bSecondInput == 0)         //第一遍输入
 986   5                                                        {
 987   6                                                            vLcd_Bcd_Display(10,19);
 988   6                                        vLcd_Bcd_Display(9,20);
 989   6                                            vLcd_Bcd_Display(8,1);    
 990   6                                                       }
 991   5                                                       else
 992   5                                                       {
 993   6                                                               vLcd_Bcd_Display(10,19);
 994   6                                       vLcd_Bcd_Display(9,20);
 995   6                                           vLcd_Bcd_Display(8,2);
 996   6                                                       }
 997   5      #ifdef _FPGA_DEMO_EN_  
                                           vLcd_SetDisplayMode();             
              #endif
1000   5                               //10s重新定时开始
1001   5                                   gSecCount_10S=0;
1002   5                                               }
1003   4                                               break;
1004   4                               }
1005   3                                                      
1006   3                       }
1007   2                       else
1008   2                       {
1009   3                                //低功耗suspend MODE                    
1010   3                                //vScu_SuspendModeEn();
1011   3                                 vFlag1S_DispClr();
1012   3                       }
1013   2               }
1014   1               vScu_TbcIntDis();
1015   1               vScu_TbcWakeupDis();
1016   1      }
1017          /********************************************************************
1018          Function name:       void vOTP_UnlockPinProcess(void)
1019          Input parameters:
1020              void  
1021          Return:
1022              void
1023          Function:
1024              Unlock The OTP in Manual Operation when The OTP Been Locked         
1025          ********************************************************************/
1026          //解除锁定操作
1027          void vToken_UnlockPin(void)
1028          {
1029   1              UINT8 Key_Input=15,j,i=0,bUnlockPin=1;
1030   1              i = 0;
1031   1              gCursor_Flag = 0;
1032   1      
1033   1              
1034   1      #ifdef _FPGA_DEMO_EN_
C51 COMPILER V9.00   TOKENAPP                                                              03/23/2015 15:38:06 PAGE 18  

                      vLcd_SetStopMode();             
              #endif
1037   1          vLcd_Flag_Clear();
1038   1              vLcd_String_Clear();
1039   1              vLcd_Flag_Display(8,1);
1040   1              vLcd_Flag_Display(12,1);
1041   1              vLcd_Flag_Display(13,1);
1042   1              vLcd_Flag_Display(14,1);
1043   1              vLcd_Flag_Display(15,1);
1044   1                      
1045   1              vLcd_Flag_Display(6,1); 
1046   1      #ifdef _FPGA_DEMO_EN_  
                      vLcd_SetDisplayMode();          
              #endif
1049   1          //10s重新定时开始
1050   1              vScu_TbcIntEn();
1051   1              vTbc_Int1HzEn();
1052   1              gSecCount_10S=0;
1053   1      
1054   1              //SUSPEND超时2分钟进入STANDBY MODE
1055   1              vScu_SetSuspendOT_120S();
1056   1              vScu_SuspendOT_ResultStandby();
1057   1              vScu_SuspendOTEn();
1058   1              while(bUnlockPin==1)
1059   1              {
1060   2                      Key_Input = ucGetKeyValue();    
1061   2                      if(Key_Input>=0x30 && Key_Input<=0x3f)
1062   2                      {
1063   3                              //如果是正常的数据，存入接受数组 
1064   3                              //如果移动了光标位置，则修改光标位置的数据
1065   3                              switch(Key_Input)
1066   3                              {
1067   4                                      case '0':
1068   4                                      case '1':
1069   4                                      case '2':
1070   4                                      case '3':
1071   4                                      case '4':
1072   4                                      case '5':
1073   4                                      case '6':
1074   4                                      case '7':
1075   4                                      case '8':
1076   4                                      case '9':
1077   4                                               if(gCursor_Flag )              //有光标移到，则修改光标移动位置的数据
1078   4                                               {
1079   5                                                        gCursor_Flag = 0;
1080   5                                                        gPin_Key[i-gCursor_Count] = Key_Input;
1081   5      #ifdef _FPGA_DEMO_EN_
                                            vLcd_SetStopMode();                                                    
              #endif
1084   5                                //vLcd_String_Clear();
1085   5                                                        vLcd_String_Display(gPin_Key,i);
1086   5      #ifdef _FPGA_DEMO_EN_  
                                            vLcd_SetDisplayMode();            
              #endif
1089   5                                                        gCursor_Count = 0;                                                    
1090   5                                               }
1091   4                                               else
1092   4                                               {
1093   5                                                       if(i<6)
1094   5                                                       {
1095   6                                                               gPin_Key[i] = Key_Input;
1096   6                                                               i++;
C51 COMPILER V9.00   TOKENAPP                                                              03/23/2015 15:38:06 PAGE 19  

1097   6      #ifdef _FPGA_DEMO_EN_
                                               vLcd_SetStopMode();                                                             
              #endif
1100   6                                   //vLcd_String_Clear();
1101   6                                                               vLcd_String_Display(gPin_Key,i);
1102   6      #ifdef _FPGA_DEMO_EN_  
                                               vLcd_SetDisplayMode();         
              #endif
1105   6                                                       }
1106   5                                               }                                      
1107   4                                               break;
1108   4                                      case 0x3a:
1109   4                                               i = 0;
1110   4                                               for(j=0;j<6;j++)
1111   4                                               {
1112   5      #ifdef _FPGA_DEMO_EN_
                                           vLcd_SetStopMode();                                                     
              #endif
1115   5                               //vLcd_String_Clear();
1116   5                                                       vLcd_Bcd_Clear(j);
1117   5      #ifdef _FPGA_DEMO_EN_  
                                           vLcd_SetDisplayMode();             
              #endif
1120   5                                               }
1121   4                                               break;
1122   4                                      case 0x3c:                      //左移动光标
1123   4                                               if(i>0)
1124   4                                               {
1125   5                                                      gCursor_Flag = 1;
1126   5                                                      if(gCursor_Count < i)
1127   5                                                      {
1128   6                                                              gCursor_Count++;
1129   6                                                      }
1130   5                                                      else
1131   5                                                      {
1132   6                                                              gCursor_Count = 1;
1133   6                                                      }
1134   5      #ifdef _FPGA_DEMO_EN_
                                          vLcd_SetStopMode();                                                     
              #endif
1137   5                             // vLcd_String_Clear();
1138   5                                                      vLcd_String_Display(gPin_Key,i);
1139   5                                                      vLcd_Bcd_Clear(gCursor_Count-1);
1140   5      #ifdef _FPGA_DEMO_EN_  
                                          vLcd_SetDisplayMode();              
              #endif
1143   5                                                      
1144   5                                               }
1145   4                                               break;
1146   4                                      case 0x3d:                      //右移动光标
1147   4                                               if(i>0)
1148   4                                               {
1149   5                                                      gCursor_Flag = 1;
1150   5                                                      if(gCursor_Count > 1)
1151   5                                                      {
1152   6                                                              gCursor_Count--;
1153   6                                                      }
1154   5                                                      else
1155   5                                                      {
1156   6                                                              gCursor_Count = i;
1157   6                                                      }
1158   5      #ifdef _FPGA_DEMO_EN_
C51 COMPILER V9.00   TOKENAPP                                                              03/23/2015 15:38:06 PAGE 20  

                                          vLcd_SetStopMode();                                             
              #endif
1161   5                              //vLcd_String_Clear();
1162   5                                                      vLcd_String_Display(gPin_Key,i);
1163   5                                                      vLcd_Bcd_Clear(gCursor_Count-1);
1164   5      #ifdef _FPGA_DEMO_EN_  
                                          vLcd_SetDisplayMode();              
              #endif
1167   5                                                      
1168   5                                               }
1169   4                                               break;
1170   4                                      case 0x3E:
1171   4                                              
1172   4                                              break;
1173   4                                      case 0x3F:
1174   4                                              {
1175   5      #ifdef _FPGA_DEMO_EN_
                                          vLcd_SetStopMode();                                            
              #endif
1178   5                              //vLcd_String_Clear();
1179   5                                                      vLcd_String_Display(gPin_Save,6);
1180   5      #ifdef _FPGA_DEMO_EN_  
                                          vLcd_SetDisplayMode();              
              #endif
1183   5                                                      Key_Input = 0;
1184   5                                                      while(Key_Input > 0x3F || Key_Input < 0x30)
1185   5                                                      {
1186   6                                                              Key_Input = ucGetKeyValue();
1187   6                                                      }
1188   5                                              }
1189   4                                              break;
1190   4                                      case 0x3b:                      //确认
1191   4                                              //如果数据长度满足要求，则进行下一步操作
1192   4                                              
1193   4                                              if(i==6)
1194   4                                              {
1195   5                                                      //LCD_CLR_ALL();
1196   5                                                      //开始计算,选择加密算法
1197   5                                                      if(strncmp(gPin_Save,gPin_Key,6) == 0)
1198   5                                                      {
1199   6      #ifdef _FPGA_DEMO_EN_
                                              vLcd_SetStopMode();                                                            
              #endif
1202   6                                  //vLcd_String_Clear(); 
1203   6                                                              vLcd_Flag_Clear();
1204   6                                  vLcd_Flag_Display(6,1);
1205   6                                                          vLcd_Flag_Display(10,1);
1206   6                                                              vLcd_String_Display("P------O",8);
1207   6      #ifdef _FPGA_DEMO_EN_  
                                              vLcd_SetDisplayMode();          
              #endif
1210   6                                                              Key_Input = 0;
1211   6      //                                                      while(Key_Input > 0x3F || Key_Input < 0x30)
1212   6      //                                                      {
1213   6      //                                                              Key_Input = ucGetKeyValue();
1214   6      //                                                      }
1215   6                                                              for(j=0;j<8;j++)
1216   6                                                          {
1217   7      #ifdef _FPGA_DEMO_EN_
                                                  vLcd_SetStopMode();                                                           
              #endif
1220   7                                      //vLcd_String_Clear();
C51 COMPILER V9.00   TOKENAPP                                                              03/23/2015 15:38:06 PAGE 21  

1221   7                                                                  vLcd_Bcd_Clear(j);
1222   7      #ifdef _FPGA_DEMO_EN_  
                                                  vLcd_SetDisplayMode();              
              #endif
1225   7                                                          }
1226   6                                                              gUnlockPinErr_Count = 0;
1227   6                                                              gPinErr_Count = 0;
1228   6                                                              bUnlockPin = 0;
1229   6                                                              gUseCase = 2;
1230   6                                                      }
1231   5                                                      else
1232   5                                                      {
1233   6                                                              gPinErr_Count++;                                                        
1234   6                                                               
1235   6                                                              gErr[6] =(gPinErr_Count/10)+0x30;
1236   6                                                              gErr[7] =(gPinErr_Count%10)+0x30;
1237   6      #ifdef _FPGA_DEMO_EN_
                                              vLcd_SetStopMode();                                                            
              #endif
1240   6                                  //vLcd_String_Clear();
1241   6                                                              vLcd_Flag_Clear();
1242   6                                  vLcd_Flag_Display(6,1);
1243   6                                                              vLcd_Flag_Display(11,1);
1244   6                                                              vLcd_String_Display(gErr,8);
1245   6      #ifdef _FPGA_DEMO_EN_  
                                              vLcd_SetDisplayMode();          
              #endif
1248   6                                                              Key_Input = 0;
1249   6                                                              while(Key_Input > 0x3F || Key_Input < 0x30)
1250   6                                                              {
1251   7                                                                      Key_Input = ucGetKeyValue();
1252   7                                                              }
1253   6      #ifdef _FPGA_DEMO_EN_
                                              vLcd_SetStopMode();                                                             
              #endif                                                                      
1256   6                                                              vLcd_String_Clear();
1257   6      #ifdef _FPGA_DEMO_EN_  
                                              vLcd_SetDisplayMode();          
              #endif
1260   6                                                              if(gPinErr_Count>=6)
1261   6                                                              {
1262   7                                                                      //报废                                                          
1263   7                                                                      //gUseCase = 5;
1264   7                                                                      gUseCase = 6;
1265   7                                                                      bUnlockPin = 0;
1266   7                                                                      
1267   7                                                              }
1268   6                                                              else
1269   6                                                              {
1270   7      #ifdef _FPGA_DEMO_EN_
                                                  vLcd_SetStopMode();                                 
              #endif
1273   7                                      vLcd_Flag_Clear();
1274   7                                          vLcd_String_Clear();
1275   7                                          vLcd_Flag_Display(8,1);
1276   7                                          vLcd_Flag_Display(12,1);
1277   7                                          vLcd_Flag_Display(13,1);
1278   7                                          vLcd_Flag_Display(14,1);
1279   7                                          vLcd_Flag_Display(15,1);
1280   7      
1281   7                                          vLcd_Flag_Display(6,1);
1282   7      #ifdef _FPGA_DEMO_EN_  
C51 COMPILER V9.00   TOKENAPP                                                              03/23/2015 15:38:06 PAGE 22  

                                                  vLcd_SetDisplayMode();              
              #endif
1285   7                                      //10s重新定时开始
1286   7                                          gSecCount_10S=0;
1287   7                                                              
1288   7                                                              }
1289   6                                                      }
1290   5                                                      i=0;
1291   5                                                      gCursor_Flag = 0;
1292   5                                              }
1293   4                                              break;
1294   4                              }                       
1295   3                      
1296   3                      }
1297   2                      else
1298   2                      {
1299   3                               //低功耗SUSPEND MODE                    
1300   3                               //vScu_SuspendModeEn();
1301   3                               vFlag1S_DispClr();
1302   3                      }
1303   2              }
1304   1              vScu_TbcIntDis();  
1305   1      
1306   1      }
1307          /********************************************************************
1308          Function name:       void vOtp_RunModeProcesss(void)
1309          Input parameters:
1310              void  
1311          Return:
1312              void
1313          Function:
1314              OTP RUN MODE PROCESS,IT CAN GENERATE THE DYNAMIC  PASSWORD CODE IN THIS STATUS      
1315          ********************************************************************/
1316          //产生挑战码并计算密码PIN密码
1317          void vToken_RunMode(void)
1318          {
1319   1              UINT8 Key_Input=15,i=0,j,bNormal=1;
1320   1              //UINT32        tmp;    
1321   1              UINT8 k = 0;
1322   1              gCursor_Flag = 0;
1323   1              gUnlockPinErr_Count = 0;
1324   1      
1325   1              
1326   1      #ifdef _FPGA_DEMO_EN_
                      vLcd_SetStopMode();             
              #endif
1329   1          vLcd_Flag_Clear();
1330   1              vLcd_String_Clear();
1331   1              vLcd_Flag_Display(8,1);
1332   1              vLcd_Flag_Display(12,1);
1333   1              vLcd_Flag_Display(13,1);
1334   1              vLcd_Flag_Display(14,1);
1335   1              vLcd_Flag_Display(15,1);
1336   1      
1337   1              vLcd_Flag_Display(5,1);
1338   1      #ifdef _FPGA_DEMO_EN_  
                      vLcd_SetDisplayMode();          
              #endif
1341   1          //10s重新定时开始
1342   1              vScu_TbcWakeupEn();
1343   1              vScu_TbcIntEn();
1344   1              vTbc_Int1HzEn();
C51 COMPILER V9.00   TOKENAPP                                                              03/23/2015 15:38:06 PAGE 23  

1345   1              gSecCount_10S=0;
1346   1      
1347   1              //SUSPEND超时2分钟进入STANDBY MODE
1348   1              vScu_SetSuspendOT_120S();
1349   1              vScu_SuspendOT_ResultStandby();
1350   1              vScu_SuspendOTEn();
1351   1      
1352   1              //系统处于正常模式
1353   1              while(bNormal == 1)
1354   1              {
1355   2                      Key_Input = ucGetKeyValue();    
1356   2                      if(Key_Input>=0x30 && Key_Input<=0x3f)
1357   2                      {
1358   3      
1359   3                              //如果移动了光标位置，则修改光标位置的数据
1360   3                              switch(Key_Input)
1361   3                              {
1362   4                                      case '0':
1363   4                                      case '1':
1364   4                                      case '2':
1365   4                                      case '3':
1366   4                                      case '4':
1367   4                                      case '5':
1368   4                                      case '6':
1369   4                                      case '7':
1370   4                                      case '8':
1371   4                                      case '9':
1372   4                                               //if(bAlwaysbdisplay)break;
1373   4                                               if(gCursor_Flag )              //有光标移到，则修改光标移动位置的数据
1374   4                                               {
1375   5                                                      gCursor_Flag = 0;
1376   5                                                      gPin_Key[k-gCursor_Count] = Key_Input;
1377   5      #ifdef _FPGA_DEMO_EN_
                                          vLcd_SetStopMode();                                        
              #endif
1380   5                              //vLcd_String_Clear();  
1381   5                                                      vLcd_String_Display(gPin_Key,k);
1382   5      #ifdef _FPGA_DEMO_EN_  
                                          vLcd_SetDisplayMode();              
              #endif
1385   5                                                      gCursor_Count = 0;
1386   5                                                              
1387   5                                               }
1388   4                                               else
1389   4                                               {
1390   5                                                       if(k<8)
1391   5                                                       {
1392   6                                                              gPin_Key[k] = Key_Input;
1393   6                                                              k++;
1394   6      #ifdef _FPGA_DEMO_EN_
                                              vLcd_SetStopMode();                                                            
              #endif
1397   6                                  //vLcd_String_Clear();
1398   6                                                              vLcd_String_Display(gPin_Key,k);
1399   6      #ifdef _FPGA_DEMO_EN_  
                                              vLcd_SetDisplayMode();          
              #endif
1402   6                                                              
1403   6                                                       }
1404   5                                               }                                      
1405   4                                               break;
1406   4                                      case 0x3a:       //取消
C51 COMPILER V9.00   TOKENAPP                                                              03/23/2015 15:38:06 PAGE 24  

1407   4                                               k = 0;
1408   4      //#ifdef _FPGA_DEMO_EN_
1409   4      //                       vLcd_SetStopMode();                                            
1410   4      //#endif
1411   4      //                     vLcd_Flag_Clear();
1412   4      //                                       vLcd_Flag_Display(4,0);
1413   4      //#ifdef _FPGA_DEMO_EN_  
1414   4      //                       vLcd_SetDisplayMode();         
1415   4      //#endif
1416   4                                               for(j=0;j<8;j++)
1417   4                                               {
1418   5      #ifdef _FPGA_DEMO_EN_
                                           vLcd_SetStopMode();                                                    
              #endif
1421   5                               //vLcd_String_Clear();
1422   5                                                       vLcd_Bcd_Clear(j);
1423   5      #ifdef _FPGA_DEMO_EN_  
                                           vLcd_SetDisplayMode();             
              #endif
1426   5                                               }
1427   4                                               break;
1428   4                                      case 0x3c:                      //左移动光标
1429   4                                               if(k>0)
1430   4                                               {
1431   5                                                       gCursor_Flag = 1;
1432   5                                                       if(gCursor_Count < k)
1433   5                                                       {
1434   6                                                               gCursor_Count++;
1435   6                                                       }
1436   5                                                       else
1437   5                                                       {
1438   6                                                               gCursor_Count = 1;
1439   6                                                       }
1440   5      #ifdef _FPGA_DEMO_EN_
                                           vLcd_SetStopMode();                                                     
              #endif
1443   5                               //vLcd_String_Clear();
1444   5                                                       vLcd_String_Display(gPin_Key,k);
1445   5                                                       vLcd_Bcd_Clear(gCursor_Count-1);
1446   5      #ifdef _FPGA_DEMO_EN_  
                                           vLcd_SetDisplayMode();             
              #endif
1449   5                                                      
1450   5                                               }
1451   4                                               break;
1452   4                                      case 0x3d:                      //右移动光标
1453   4                                               if(k>0)
1454   4                                               {
1455   5                                                       gCursor_Flag = 1;
1456   5                                                       if(gCursor_Count > 1)
1457   5                                                       {
1458   6                                                               gCursor_Count--;
1459   6                                                       }
1460   5                                                       else
1461   5                                                       {
1462   6                                                               gCursor_Count = k;
1463   6                                                       }
1464   5      #ifdef _FPGA_DEMO_EN_
                                           vLcd_SetStopMode();                                                     
              #endif
1467   5                               //vLcd_String_Clear();
1468   5                                                       vLcd_String_Display(gPin_Key,k);
C51 COMPILER V9.00   TOKENAPP                                                              03/23/2015 15:38:06 PAGE 25  

1469   5                                                       vLcd_Bcd_Clear(gCursor_Count-1);
1470   5      #ifdef _FPGA_DEMO_EN_  
                                           vLcd_SetDisplayMode();             
              #endif
1473   5                                                      
1474   5                                               }
1475   4                                               break;
1476   4                                      case 0x3E: //切换到EWatch
1477   4                                               gUseCase=7;
1478   4                                               bNormal =0;
1479   4                                               break;
1480   4                                      case 0x3F:
1481   4                                               //切换到挑战模式，切换到常显模式进行运算
1482   4                                               for(j=0;j<8;j++)
1483   4                                               {
1484   5      #ifdef _FPGA_DEMO_EN_
                                           vLcd_SetStopMode();                                                     
              #endif
1487   5                               //vLcd_String_Clear();
1488   5                                                       vLcd_Bcd_Clear(j);
1489   5      #ifdef _FPGA_DEMO_EN_  
                                           vLcd_SetDisplayMode();             
              #endif
1492   5                                               }
1493   4                                               if(bAlwaysbdisplay)
1494   4                                               {
1495   5                                                       bAlwaysbdisplay = 0;   //关闭常显模式
1496   5                                                       bOpenHash = 0;
1497   5                                                       bCloseLCD = 1;                 //计时关闭LCD
1498   5      #ifdef _FPGA_DEMO_EN_
                                           vLcd_SetStopMode();                                                     
              #endif
1501   5                               vLcd_Flag_Clear();                                                      
1502   5                                                       vLcd_Flag_Display(5,1);
1503   5      #ifdef _FPGA_DEMO_EN_  
                                           vLcd_SetDisplayMode();             
              #endif
1506   5      
1507   5                                               }
1508   4                                               else
1509   4                                               {
1510   5                                                       bAlwaysbdisplay = 1;   //打开常显模式
1511   5                                                       bOpenHash = 1;                 //开始进行计算
1512   5                                                       bCloseLCD = 0;                 //常开LCD
1513   5      #ifdef _FPGA_DEMO_EN_
                                           vLcd_SetStopMode();                                                    
              #endif
1516   5                                                       vLcd_Flag_Clear();
1517   5                                                       vLcd_Flag_Display(4,1); 
1518   5      #ifdef _FPGA_DEMO_EN_  
                                           vLcd_SetDisplayMode();             
              #endif
1521   5                                               }
1522   4                                      case 0x3b:                      //确认
1523   4                                              //if(bAlwaysbdisplay)break;
1524   4                                              //如果数据长度满足要求，则进行下一步操作
1525   4                                              if(k==8)
1526   4                                              {  
1527   5      
1528   5      //#ifdef _FPGA_DEMO_EN_
1529   5      //                          vLcd_SetStopMode();                                                    
1530   5      //#endif
C51 COMPILER V9.00   TOKENAPP                                                              03/23/2015 15:38:06 PAGE 26  

1531   5      //                        vLcd_Flag_Clear();
1532   5      //                                              vLcd_Flag_Display(4,1);
1533   5      //#ifdef _FPGA_DEMO_EN_  
1534   5      //                          vLcd_SetDisplayMode();              
1535   5      //#endif
1536   5                                                      //开始计算,选择加密算法 
1537   5                                                      
1538   5                                                      //采用备份计数器计时
1539   5                                          vTbc_ReadBakCounter();                                      
1540   5                                                      //经过SM3算法计算结果  
1541   5                                                      vScu_Sm3CipherDis();                                            
1542   5                                                      vScu_SetSysClk64K();
1543   5                                                      
1544   5                                                      //tmp=gTimer_Count_Base+TBC_COUNT_VALUE;                                                                                                        
1545   5                                                      //tmp= tmp/60;
1546   5                                                                                  
1547   5      
1548   5                                                      gTimer_Count=((gTimer_Count_Base+TBC_COUNT_VALUE)-gBackupInitVal)/60;                                                                                                   
1549   5                                                      
1550   5                                                      MessageExpand(4,8);
1551   5                                                      DynPassWord_SM3(BCD);
1552   5      
1553   5      #ifdef _FPGA_DEMO_EN_
                                          vLcd_SetStopMode();                                                    
              #endif
1556   5                              vLcd_Flag_Clear();
1557   5                                                      vLcd_Flag_Display(4,1);
1558   5      //#ifdef _FPGA_DEMO_EN_  
1559   5      //                          vLcd_SetDisplayMode();              
1560   5      //#endif                                                                    
1561   5      //                                                      
1562   5      //#ifdef _FPGA_DEMO_EN_
1563   5      //                          vLcd_SetStopMode();                                             
1564   5      //#endif                                        
1565   5                              //vLcd_String_Clear();                                          
1566   5                                                      vLcd_String_Display(BCD+2,8);
1567   5      #ifdef _FPGA_DEMO_EN_  
                                          vLcd_SetDisplayMode();              
              #endif                                  
1570   5                              vScu_SetSysClk32K();
1571   5                                                      //10s重新定时开始
1572   5                                  vScu_TbcIntEn();
1573   5                                  vTbc_Int1HzEn(); 
1574   5                              //10s重新定时开始
1575   5                                  gSecCount_10S=0;
1576   5                                                                              
1577   5                                                      gUseCase = 3;
1578   5                                                      gUnlockPinErr_Count = 0;
1579   5                                                      k=0;
1580   5                                              }
1581   4                                              else
1582   4                                              {  
1583   5      
1584   5      //#ifdef _FPGA_DEMO_EN_
1585   5      //                          vLcd_SetStopMode();                                            
1586   5      //#endif
1587   5      //                        vLcd_Flag_Clear();
1588   5      //                                              vLcd_Flag_Display(4,1);
1589   5      //#ifdef _FPGA_DEMO_EN_  
1590   5      //                          vLcd_SetDisplayMode();              
1591   5      //#endif                                //采用备份计数器计时
1592   5                                          vTbc_ReadBakCounter();
C51 COMPILER V9.00   TOKENAPP                                                              03/23/2015 15:38:06 PAGE 27  

1593   5                                                                              
1594   5                                                      vScu_SetSysClkOsc500K();
1595   5                                                      //tmp=gTimer_Count_Base+TBC_COUNT_VALUE;                                                                                                        
1596   5                                                      //tmp= tmp/60;
1597   5                                                      gTimer_Count=((gTimer_Count_Base+TBC_COUNT_VALUE)-gBackupInitVal)/60;                                                                                                   
1598   5                                                      //MessageExpand(gUserInfo,tmp,Event,gPin_Key,0);                                                
1599   5                                                      MessageExpand(4,0);                                             
1600   5                                                      DynPassWord_SM3(BCD); 
1601   5      
1602   5      #ifdef _FPGA_DEMO_EN_
                                          vLcd_SetStopMode();                                            
              #endif
1605   5                              vLcd_Flag_Clear();
1606   5                                                      vLcd_Flag_Display(4,1);
1607   5      //#ifdef _FPGA_DEMO_EN_  
1608   5      //                          vLcd_SetDisplayMode();              
1609   5      //#endif                                                                                                                    
1610   5      //                                                                                      
1611   5      //                                                                                      
1612   5      //#ifdef _FPGA_DEMO_EN_
1613   5      //                          vLcd_SetStopMode();                         
1614   5      //#endif                                        
1615   5                              //vLcd_String_Clear();  
1616   5                                                      vLcd_String_Display(BCD+2,8);
1617   5      #ifdef _FPGA_DEMO_EN_  
                                          vLcd_SetDisplayMode();                                                                                                      
              #endif                                  
1620   5                              vScu_SetSysClk32K();
1621   5                                                      //10s重新定时开始
1622   5                                  vScu_TbcIntEn();
1623   5                                  vTbc_Int1HzEn();
1624   5                              //10s重新定时开始
1625   5                                  gSecCount_10S=0;            
1626   5                                                      gUseCase = 3; 
1627   5                                                      k=0;
1628   5                              
1629   5                                              }
1630   4                                              Key_Input = 0;
1631   4                                              while(Key_Input > 0x3F || Key_Input < 0x30)
1632   4                                              {
1633   5                                                      Key_Input = ucGetKeyValue();
1634   5                                              }
1635   4      #ifdef _FPGA_DEMO_EN_
                                      vLcd_SetStopMode();                                                     
              #endif
1638   4                          vLcd_Flag_Clear();
1639   4                                              vLcd_Flag_Display(4,0);
1640   4      #ifdef _FPGA_DEMO_EN_  
                                      vLcd_SetDisplayMode();          
              #endif
1643   4                                              for(j=0;j<8;j++)
1644   4                                              {
1645   5      #ifdef _FPGA_DEMO_EN_
                                          vLcd_SetStopMode();                                            
              #endif
1648   5                              vLcd_String_Clear(); 
1649   5                                                      vLcd_Bcd_Clear(j);
1650   5      #ifdef _FPGA_DEMO_EN_  
                                          vLcd_SetDisplayMode();              
              #endif
1653   5                                              }
1654   4      
C51 COMPILER V9.00   TOKENAPP                                                              03/23/2015 15:38:06 PAGE 28  

1655   4      #ifdef _FPGA_DEMO_EN_
                                      vLcd_SetStopMode();                                     
              #endif
1658   4                          vLcd_Flag_Clear(); 
1659   4                              vLcd_String_Clear();
1660   4                              vLcd_Flag_Display(8,1);
1661   4                              vLcd_Flag_Display(12,1);
1662   4                              vLcd_Flag_Display(13,1);
1663   4                              vLcd_Flag_Display(14,1);
1664   4                              vLcd_Flag_Display(15,1);
1665   4      
1666   4                              vLcd_Flag_Display(5,1);
1667   4      #ifdef _FPGA_DEMO_EN_  
                                      vLcd_SetDisplayMode();          
              #endif
1670   4                          //10s重新定时开始
1671   4                              gSecCount_10S=0;
1672   4                                              k = 0;
1673   4                                              gCursor_Flag = 0;                               
1674   4                                          break;
1675   4                               }                      
1676   3                              
1677   3                      }
1678   2                      else
1679   2                      {                       
1680   3                              //低功耗SUSPEND MODE                    
1681   3                              //vScu_SuspendModeEn();
1682   3                               vFlag1S_DispClr();
1683   3                      }
1684   2              }
1685   1              vScu_TbcIntDis();
1686   1      
1687   1      }
1688          
1689          /********************************************************************
1690          Function name:       void vToken_Active(void)
1691          Input parameters:
1692              void  
1693          Return:
1694              void
1695          Function:
1696              OTP ACTIVE MODE PROCESS     
1697          ********************************************************************/
1698          //激活OTP
1699          void vToken_Active(void)
1700          {
1701   1          UINT8 Key_Input=15,i=0,j,bActive=1;         
1702   1              UINT8 k = 0;
1703   1              UINT8 ActiveBuf[6]={"012345"};
1704   1              gCursor_Flag = 0;
1705   1              
1706   1      #ifdef _FPGA_DEMO_EN_
                      vLcd_SetStopMode();             
              #endif
1709   1          vLcd_Flag_Clear();
1710   1              vLcd_String_Clear();
1711   1              vLcd_Flag_Display(8,1);//激活标志
1712   1              vLcd_Flag_Display(12,1); //时间进度条
1713   1              vLcd_Flag_Display(13,1);
1714   1              vLcd_Flag_Display(14,1);
1715   1              vLcd_Flag_Display(15,1);
1716   1      
C51 COMPILER V9.00   TOKENAPP                                                              03/23/2015 15:38:06 PAGE 29  

1717   1              vLcd_Flag_Display(7,1);
1718   1      #ifdef _FPGA_DEMO_EN_  
                      vLcd_SetDisplayMode();          
              #endif
1721   1          //10s重新定时开始
1722   1              
1723   1              vScu_TbcIntEn();
1724   1              vTbc_Int1HzEn();
1725   1              vScu_TbcWakeupEn();
1726   1              gSecCount_10S=0;
1727   1      
1728   1              //SUSPEND超时2分钟进入STANDBY MODE
1729   1              vScu_SetSuspendOT_120S();
1730   1              vScu_SuspendOT_ResultStandby();
1731   1              vScu_SuspendOTEn();
1732   1              
1733   1              //系统处于正常模式
1734   1              while(bActive == 1)
1735   1              {
1736   2      
1737   2                      Key_Input = ucGetKeyValue();    
1738   2                      if(Key_Input>=0x30 && Key_Input<=0x3f)
1739   2                      {               
1740   3                              //如果移动了光标位置，则修改光标位置的数据
1741   3                              switch(Key_Input)
1742   3                              {
1743   4                                      case '0':
1744   4                                      case '1':
1745   4                                      case '2':
1746   4                                      case '3':
1747   4                                      case '4':
1748   4                                      case '5':
1749   4                                      case '6':
1750   4                                      case '7':
1751   4                                      case '8':
1752   4                                      case '9':                                                                        
1753   4                                               if(gCursor_Flag )              //有光标移到，则修改光标移动位置的数据
1754   4                                               {
1755   5                                                      gCursor_Flag = 0;
1756   5                                                      gPin_Key[k-gCursor_Count] = Key_Input;
1757   5      #ifdef _FPGA_DEMO_EN_
                                          vLcd_SetStopMode();                                      
              #endif                          
1760   5                                                      vLcd_String_Display(gPin_Key,k);
1761   5      #ifdef _FPGA_DEMO_EN_  
                                          vLcd_SetDisplayMode();              
              #endif
1764   5                                                      gCursor_Count = 0;
1765   5                                                              
1766   5                                               }
1767   4                                               else
1768   4                                               {
1769   5                                                       if(k<8)
1770   5                                                       {
1771   6                                                              gPin_Key[k] = Key_Input;
1772   6                                                              k++;
1773   6      #ifdef _FPGA_DEMO_EN_
                                              vLcd_SetStopMode();                                                            
              #endif                                                                 
1776   6                                                              vLcd_String_Display(gPin_Key,k);
1777   6      #ifdef _FPGA_DEMO_EN_  
                                              vLcd_SetDisplayMode();          
C51 COMPILER V9.00   TOKENAPP                                                              03/23/2015 15:38:06 PAGE 30  

              #endif
1780   6                                                              
1781   6                                                       }
1782   5                                               }                                      
1783   4                                               break;
1784   4                                      case 0x3a:       //取消
1785   4                                               k = 0; 
1786   4                                               for(j=0;j<8;j++)
1787   4                                               {
1788   5      #ifdef _FPGA_DEMO_EN_
                                           vLcd_SetStopMode();                                                    
              #endif                          
1791   5                                                       vLcd_Bcd_Clear(j);
1792   5      #ifdef _FPGA_DEMO_EN_  
                                           vLcd_SetDisplayMode();             
              #endif
1795   5                                               }
1796   4                                               //10s重新定时开始
1797   4                               //gSecCount_10S=0;
1798   4      
1799   4                                               break;
1800   4                                      case 0x3c:                      //左移动光标
1801   4                                               if(k>0)
1802   4                                               {
1803   5                                                       gCursor_Flag = 1;
1804   5                                                       if(gCursor_Count < k)
1805   5                                                       {
1806   6                                                               gCursor_Count++;
1807   6                                                       }
1808   5                                                       else
1809   5                                                       {
1810   6                                                               gCursor_Count = 1;
1811   6                                                       }
1812   5      #ifdef _FPGA_DEMO_EN_
                                           vLcd_SetStopMode();                                                     
              #endif                                                            
1815   5                                                       vLcd_String_Display(gPin_Key,k);
1816   5                                                       vLcd_Bcd_Clear(gCursor_Count-1);
1817   5      #ifdef _FPGA_DEMO_EN_  
                                           vLcd_SetDisplayMode();             
              #endif
1820   5                                                      
1821   5                                               }
1822   4                                               break;
1823   4                                      case 0x3d:                      //右移动光标
1824   4                                               if(k>0)
1825   4                                               {
1826   5                                                       gCursor_Flag = 1;
1827   5                                                       if(gCursor_Count > 1)
1828   5                                                       {
1829   6                                                               gCursor_Count--;
1830   6                                                       }
1831   5                                                       else
1832   5                                                       {
1833   6                                                               gCursor_Count = k;
1834   6                                                       }
1835   5      #ifdef _FPGA_DEMO_EN_
                                           vLcd_SetStopMode();                                                     
              #endif                                                            
1838   5                                                       vLcd_String_Display(gPin_Key,k);
1839   5                                                       vLcd_Bcd_Clear(gCursor_Count-1);
1840   5      #ifdef _FPGA_DEMO_EN_  
C51 COMPILER V9.00   TOKENAPP                                                              03/23/2015 15:38:06 PAGE 31  

                                           vLcd_SetDisplayMode();             
              #endif
1843   5                                                      
1844   5                                               }
1845   4                                               break;
1846   4                                      case 0x3E:
1847   4                                              
1848   4                                               break;
1849   4                                      case 0x3F:
1850   4                                               break;
1851   4                                      case 0x3b:                      //确认                                  
1852   4                                              //如果数据长度满足要求，则进行下一步操作
1853   4                                              if(k==8)
1854   4                                              {                                           
1855   5                                                      if(0==memcmp(gPin_Key,ActiveBuf,6))     //Add Your Code Here
1856   5                                                      {
1857   6      #ifdef _FPGA_DEMO_EN_
                                              vLcd_SetStopMode();                                                        
              #endif
1860   6                                  vLcd_Flag_Clear();
1861   6                                  vLcd_String_Clear();
1862   6                                                          vLcd_Flag_Display(7,1);
1863   6                                                          vLcd_Flag_Display(10,1);
1864   6      #ifdef _FPGA_DEMO_EN_  
                                              vLcd_SetDisplayMode();          
              #endif
1867   6                                  
1868   6                                                              //10s重新定时开始
1869   6                                      gSecCount_10S=0;
1870   6                                                              bActive=0;
1871   6                                                              //gActive=TRUE;         
1872   6                                                          gUseCase = 2;
1873   6                                                          gUnlockPinErr_Count = 0;
1874   6                                                          k=0;
1875   6                              }
1876   5                                                      else
1877   5                                                      {
1878   6      #ifdef _FPGA_DEMO_EN_
                                              vLcd_SetStopMode();                                                
              #endif
1881   6                                  vLcd_Flag_Clear(); 
1882   6                                                              vLcd_String_Clear();    
1883   6                                                          vLcd_Flag_Display(7,1);
1884   6                                                          vLcd_Flag_Display(11,1);
1885   6      #ifdef _FPGA_DEMO_EN_  
                                              vLcd_SetDisplayMode();          
              #endif                                          
1888   6                                                      
1889   6                                                              Key_Input = 0;
1890   6                                                              while(Key_Input > 0x3F || Key_Input < 0x30)
1891   6                                                              {
1892   7                                                                      Key_Input = ucGetKeyValue();
1893   7                                                              }
1894   6                      #ifdef _FPGA_DEMO_EN_
                                                      vLcd_SetStopMode();                                                                     
                              #endif
1897   6                                          vLcd_Flag_Clear();
1898   6                                                              vLcd_Flag_Display(7,0);
1899   6                      #ifdef _FPGA_DEMO_EN_  
                                                      vLcd_SetDisplayMode();          
                              #endif
1902   6                                                              for(j=0;j<8;j++)
C51 COMPILER V9.00   TOKENAPP                                                              03/23/2015 15:38:06 PAGE 32  

1903   6                                                              {
1904   7                      #ifdef _FPGA_DEMO_EN_
                                                          vLcd_SetStopMode();                                                                    
                              #endif
1907   7                                              //vLcd_String_Clear();
1908   7                                                                      vLcd_Bcd_Clear(j);
1909   7                      #ifdef _FPGA_DEMO_EN_  
                                                          vLcd_SetDisplayMode();              
                              #endif
1912   7                                                              }
1913   6                      
1914   6                      #ifdef _FPGA_DEMO_EN_
                                                      vLcd_SetStopMode();                                                     
                              #endif
1917   6                                          vLcd_Flag_Clear();
1918   6                                              vLcd_String_Clear();
1919   6                                              vLcd_Flag_Display(8,1);
1920   6                                              vLcd_Flag_Display(12,1);
1921   6                                              vLcd_Flag_Display(13,1);
1922   6                                              vLcd_Flag_Display(14,1);
1923   6                                              vLcd_Flag_Display(15,1);
1924   6                      
1925   6                                              vLcd_Flag_Display(7,1);
1926   6                      #ifdef _FPGA_DEMO_EN_  
                                                      vLcd_SetDisplayMode();          
                              #endif                  
1929   6      
1930   6                                          //10s重新定时开始
1931   6                                      gSecCount_10S=0;
1932   6                                                              bActive=1;              
1933   6                                                          gUseCase = 5;
1934   6                                                          gUnlockPinErr_Count = 0;
1935   6                                                          k=0;
1936   6                                  }           
1937   5                             
1938   5                                              }                                                       
1939   4                                          break;
1940   4                               }                      
1941   3                              
1942   3                      }
1943   2                      else
1944   2                      {                       
1945   3                              //低功耗SUSPEND MODE                    
1946   3                              //vScu_SuspendModeEn();
1947   3                               vFlag1S_DispClr();
1948   3                      }
1949   2              }
1950   1              vScu_TbcIntDis();
1951   1      
1952   1      }
1953          
1954          /********************************************************************
1955          Function name:       void vOtp_ScrapProcess(void)
1956          Input parameters:
1957              void  
1958          Return:
1959              void
1960          Function:
1961              OTP SCRAP PROCESS WHEN OTP UNLOCK TIME IN MANUAL PASSED SIX TIME    
1962          ********************************************************************/
1963          void vToken_Invalid(void)
1964          {
C51 COMPILER V9.00   TOKENAPP                                                              03/23/2015 15:38:06 PAGE 33  

1965   1      #ifdef _FPGA_DEMO_EN_ 
                      vLcd_SetStopMode();
              #endif
1968   1          vLcd_Flag_Clear();                  
1969   1              vLcd_String_Clear();
1970   1              vLcd_Flag_Display(6,1);
1971   1              vLcd_String_Display("EEEEEEEEEEEEE",13); 
1972   1      #ifdef _FPGA_DEMO_EN_  
                      vLcd_SetDisplayMode();          
              #endif  
1975   1      
1976   1          //SUSPEND超时2分钟进入STANDBY MODE
1977   1              vScu_SetSuspendOT_120S();
1978   1              vScu_SuspendOT_ResultStandby();
1979   1              vScu_SuspendOTEn();                     
1980   1              while(1)
1981   1              {
1982   2                      bCloseLCD = 0;
1983   2                      //vScu_StandbyModeEn();
1984   2                      vScu_SuspendModeEn();
1985   2              }       
1986   1      }
1987          
1988          
1989          #endif
1990          
1991          

C51 COMPILATION COMPLETE.  2 WARNING(S),  4 ERROR(S)
