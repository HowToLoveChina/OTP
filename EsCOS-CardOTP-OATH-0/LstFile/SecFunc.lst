C51 COMPILER V9.00   SECFUNC                                                               07/19/2016 17:01:16 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE SECFUNC
OBJECT MODULE PLACED IN .\ObjFile\SecFunc.obj
COMPILER INVOKED BY: H:\Keil\C51\BIN\C51.EXE SrcFile\Func\SecFunc.c LARGE BROWSE INCDIR(.\SrcFile\StartUp\CPU;.\SrcFile\
                    -Frame\Inc;.\SrcFile\Func\Inc;.\SrcFile\Lib;.\SrcFile\App\Inc) DEFINE(_DEV_BOARD_,_FPGA_DEMO_EN_) DEBUG OBJECTEXTEND PRIN
                    -T(.\LstFile\SecFunc.lst) TABS(2) OBJECT(.\ObjFile\SecFunc.obj)

line level    source

   1          /********************************************************************
   2                                    Nationz Co.,Ltd
   3                  Copyright (c) 2009－2015 All Rights Reserved
   4           ********************************************************************
   5          File: AdcFunc.c
   6          History：
   7          Version                      Author                     Date
   8          V0.1                         nationz              2013-10-10
   9          
  10          Description:
  11               SecFunc Source Code File;
  12          Function list:
  13              void vSec_FreqExcepDetectEn(void);
  14              float vSec_TmpDetect(void);
  15              void vSecIntProcess(void);        
  16          Special statement:
  17               NULL
  18           *******************************************************************/
  19          #define _SECFUNC_C_
  20          #include "SECFUNC.h"
  21          #include "SCUFUNC.h"
  22          #include "ADCFUNC.h"
  23          #include "TbcFunc.h"
  24          #include "OtpFunc.h"
  25          #include "LcdFunc.h"
  26          /********************************************************************
  27          Function name:       void vSec_FreqExcepDetectEn(void)
  28          Input parameters:
  29              void
  30          Return:
  31              void
  32          Function:
  33              frequence exception detect
  34          ********************************************************************/
  35          
  36          u1 vSec_TMPERDetect(void)   //温度
  37          {
  38   1        float Tmp;
  39   1        UINT16 TmpValue,ADJVAL;
  40   1      
  41   1        //vScu_SetSysClkOsc2M();
  42   1        vAdcInit(CH_TEMP);
  43   1        //开温度检测使能
  44   1        vAdcTsEn();
  45   1      
  46   1        TmpValue= uiAdc_GetData();  
  47   1        
  48   1        TmpValue= uiAdc_GetData();
  49   1      
  50   1      
  51   1        ADJVAL = _TSADJ_VAL_;
  52   1        //ADJVAL=0x316;
  53   1        Tmp=(((float)ADJVAL-TmpValue)*0.5247);
C51 COMPILER V9.00   SECFUNC                                                               07/19/2016 17:01:16 PAGE 2   

  54   1        Tmp=30.0+Tmp;
  55   1      
  56   1        Tmp = Real_Tmp(Tmp); 
  57   1      
  58   1        vAdcTsDis();
  59   1      
  60   1        vAdcClose();  
  61   1      
  62   1        //vScu_SetSysClk32K();
  63   1      
  64   1        if(Tmp>100)       //(Tmp<-19||Tmp>70)
  65   1        {
  66   2          #if(DEBUG)
  67   2          return 0;
  68   2          #else
                  return 1;
                  #endif
  71   2        }
  72   1      
  73   1        return 0;
  74   1        
  75   1      }
  76          
  77          void vSec_FreqExcepDetectEn(void)   //频率检测攻击
  78          {
  79   1        vScu_Osc2MEn();
  80   1        vScu_AnactrlClkEn();
  81   1        vSec_FdDectect_En();
  82   1      
  83   1        vScu_SecIntEn();
  84   1        vAdcFStopIntEn();
  85   1      
  86   1        vAdcFDEn();
  87   1      }
  88          /********************************************************************
  89          Function name:       void vSec_LightDetectEn(UINT8 LDVAL)
  90          Input parameters:
  91              UINT8 LDVAL: 光检阈值配置
  92          Return:
  93              void
  94          Function:
  95              开启光检使能
  96          ********************************************************************/
  97          void vSec_LightDetectEn(UINT8 LDVAL)      //光检测攻击011
  98          {  
  99   1           //开启模块时钟
 100   1           vScu_AnactrlClkEn();
 101   1         //BG使能
 102   1         vAdcBgEn();
 103   1         //配置光检阈值
 104   1         ANALOGCTRLTRIMR2=(LDVAL&0x07);
 105   1         //光检使能
 106   1         vAdcLDEn();
 107   1      
 108   1         vAdcLDIntEn();
 109   1      }
 110          /********************************************************************
 111          Function name:       float vSec_TmpDetect(void)
 112          Input parameters:
 113              void
 114          Return:
 115              float ：return the current temperature value
C51 COMPILER V9.00   SECFUNC                                                               07/19/2016 17:01:16 PAGE 3   

 116          Function:
 117              temperature  detect
 118          ********************************************************************/
 119          #if 0
              float vSec_TmpDetect(void)
              {
                  UINT16 TmpY,AdcValue;
                float Tmp;
                vAdcInit(CH_TEMP);
                //vAdcTsEn();
                vSec_TsDectect_En();
                //通过NVR区的调节值计算（Y = -1.675X + A（mV））
                TmpY=(XBYTE[0XBFFC]|XBYTE[0XBFFD]); 
                AdcValue= uiAdc_GetData();//第一次的值无效抛弃
                AdcValue= uiAdc_GetData();
              
                Tmp=(2010.0-(AdcValue-TmpY)*40.0)/67.0;
              
                vAdcClose();
                vSec_TsDectect_Dis();
                return(Tmp); 
              }
              
              void vSecIntProcess(void)
              { 
                ANALOGCTRLSR1=0xff;
                SCUIS1|=0x02;
              } 
              #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    265    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       6
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
